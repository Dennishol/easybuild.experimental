##
# This file is an EasyBuild reciPY as per https://github.com/hpcugent/easybuild
#
# Copyright:: Copyright 2012-2013 University of Luxembourg/Luxembourg Centre for Systems Biomedicine
# Authors::   Nils Christian <nils.christian@uni.lu>
# License::   MIT/GPL
# $Id$
#
# This work implements a part of the HPCBIOS project and is a component of the policy:
# http://hpcbios.readthedocs.org/en/latest/HPCBIOS_2012-94.html
##

name = 'libsbml'
version = '5.8.0'
versionsuffix = '-Java-1.7.0_10-MATLAB-2013a-Perl-5.16.3-bare-Python-2.7.3-R-2.15.2-with-experimental'

homepage = 'http://sbml.org/Software/libSBML'
description = """LibSBML is a free, open-source programming library to help
 you read, write, manipulate, translate, and validate SBML files and data streams."""

sources = [('libSBML-%(version)s-Source.tar.gz', 'tar zxvf %s && mkdir build')]# FIXME this is a requirement for a cmake out-of tree build of libsbml
source_urls = [('http://sourceforge.net/projects/sbml/files/libsbml/%(version)s/experimental/src/', 'download')]

start_dir = 'build'

toolchain = {'name': 'goolf', 'version': '1.4.10'}

# FIXME we might want to add octave and ruby to the builddependencies to get those language bindings too
# FIXME add '-DWITH_DOXYGEN:BOOL=ON '?

builddependencies = [
    ('CMake',   '2.8.4'),
    ('SWIG',    '2.0.4',    '-Python-2.7.3'),
]

dependencies = [
    ('Java',    '1.7.0_10', '', True),
    ('MATLAB',  '2013a',    '', True),
    ('Perl',    '5.16.3',   '-bare'),
    ('Python',  '2.7.3'),
    ('R',       '2.15.2'),
    ('bzip2',   '1.0.6'),
    ('zlib',    '1.2.7'),
    ('libxml2', '2.9.0'),
]

configopts =  ''
# libsbml "packages" or "plug-ins"
configopts += ' -DENABLE_COMP:BOOL=ON '
configopts += ' -DENABLE_FBC:BOOL=ON '
configopts += ' -DENABLE_QUAL:BOOL=ON '
configopts += ' -DENABLE_GROUPS:BOOL=ON '
configopts += ' -DENABLE_LAYOUT:BOOL=ON '
configopts += ' -DENABLE_RENDER:BOOL=ON '
configopts += ' -DENABLE_REQUIREDELEMENTS:BOOL=ON '
configopts += ' -DENABLE_SPATIAL:BOOL=ON '

deps = map(lambda x:x[0], dependencies + builddependencies)

# search paths configuration (CMAKE_PREFIX_PATH)
cmake_prefix_path = ''
for depname in deps:
    if depname == 'CMake':
        continue
    # for all (build)dependencies but CMake the searchpath is included
    cmake_prefix_path += '${EBROOT' + depname.upper() + '};'
if cmake_prefix_path != '':
    configopts += ' -DCMAKE_PREFIX_PATH:PATH="' + cmake_prefix_path + '" '

# libsbml brings its own FindMatlab.cmake that requires us to set MATLAB_ROOT_PATH
if 'MATLAB' in deps:
    configopts += ' -DMATLAB_ROOT_PATH=$EBROOTMATLAB '

# language bindings configuration switches
for depname in deps:
    if depname == 'libxml2' or depname == 'CMake':
        continue
    # all dependencies but libxml2 and CMake require a '-DWITH_FEATURE:BOOL=ON'
    configopts += ' -DWITH_' + depname.upper() + ':BOOL=ON '

# libxml2 needs special handling because cmake searches for 'libxml/parser.h' which is in the sub-directory 'include/libxml2'
configopts += ' -DCMAKE_INCLUDE_PATH:PATH="${EBROOTLIBXML2}/include/libxml2" '

configopts += ' ../libSBML-%(version)s-Source' # back-ref is needed to get out-of-tree build working

parallel = 1

sanity_check_paths = {
    'files': [
        "lib/libsbml-static.a",
        "lib/libsbml.so.%(version)s",
    ],
    'dirs': [
        "include",
    ]
}

# FIXME depending on whether these are part of the dependencies we should add the following
#       to sanity_check_paths. Should we really do this in libsbml.py? Feels wrong...
# sanity_check_paths['files'].append("%s/TranslateSBML.m" % matlabpath)
# sanity_check_paths['files'].append("%s/libsbmlj.jar" % classpath)
# sanity_check_paths['files'].append("%s/LibSBML.pm" % libsbmlperl5lib)
# sanity_check_paths['files'].append("%s/libsbml/libsbml.py" % pylibpath)
# sanity_check_paths['files'].append("lib/LibSBML.so")
