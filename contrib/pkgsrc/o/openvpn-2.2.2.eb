# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      openvpn-2.2.2.eb
# Date::      Fri Nov  9 14:37:38 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'openvpn'
version = '2.2.2'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['openvpn-2.2.2.tar.gz']
source_urls = ['http://swupdate.openvpn.net/community/releases/']
homepage = 'http://openvpn.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "openvpn-2.2.2 description: Easy-to-use_SSL_VPN_daemon"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.46 2012/10/23 17:18:44 asau Exp $
# 
# DISTNAME=	openvpn-2.2.2
# PKGREVISION=	1
# CATEGORIES=	net
# MASTER_SITES=	http://swupdate.openvpn.net/community/releases/
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://openvpn.net/
# COMMENT=	Easy-to-use SSL VPN daemon
# LICENSE=	gnu-gpl-v2
# 
# USE_LIBTOOL=		yes
# USE_TOOLS+=		grep:run
# GNU_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--disable-debug
# CONFIGURE_ARGS+=	--disable-dependency-tracking
# CONFIGURE_ARGS+=	--enable-password-save
# CONFIGURE_ARGS+=	--sysconfdir=${PKG_SYSCONFDIR}
# 
# USE_OLD_DES_API=	yes
# TEST_TARGET=		check
# 
# PKG_SYSCONFSUBDIR=	openvpn
# DATADIR=		${PREFIX}/share/${PKGBASE}
# EGDIR=			${PREFIX}/share/examples/${PKGBASE}
# EASYRSADIR=		${DATADIR}/easy-rsa
# RCD_SCRIPTS=		openvpn
# 
# INSTALLATION_DIRS=	${DATADIR}/easy-rsa
# INSTALLATION_DIRS+=	${EGDIR}/config
# INSTALLATION_DIRS+=	${EGDIR}/keys
# INSTALLATION_DIRS+=	${EGDIR}/scripts
# 
# REPLACE_SH=		easy-rsa/2.0/*
# SUBST_CLASSES+=		pkitool
# SUBST_STAGE.pkitool=	post-build
# SUBST_MESSAGE.pkitool=	Fixing up default paths to grep & openssl in pkitool.
# SUBST_FILES.pkitool=	easy-rsa/2.0/pkitool
# SUBST_SED.pkitool=	-e "s|\\(GREP\\)=.*|\\1=\""${GREP:Q}"\"|"
# SUBST_SED.pkitool+=	-e "s|\\(OPENSSL\\)=.*|\\1=\""${SSLBASE:Q}/bin/openssl"\"|"
# 
# .include "../../mk/bsd.prefs.mk"
# 
# OPENVPN_USER?=		openvpn
# OPENVPN_GROUP?=		openvpn
# PKG_GROUPS=		${OPENVPN_GROUP}
# PKG_USERS=		${OPENVPN_USER}:${OPENVPN_GROUP}
# PKG_GECOS.${OPENVPN_USER}=	OpenVPN\ server\ user
# 
# post-install: post-install-pam
# 	set -e; cd ${WRKSRC}/easy-rsa/2.0; for file in [a-zR]*; do	\
# 		case $$file in						\
# 		*.orig|tmp) ;;						\
# 		[A-Z]*|*.cnf|vars)					\
# 			${INSTALL_DATA} $$file ${DESTDIR}${EASYRSADIR} ;; \
# 		*)	${INSTALL_SCRIPT} $$file ${DESTDIR}${EASYRSADIR} ;; \
# 		esac;							\
# 	done
# 	set -e; cd ${WRKSRC}/sample-config-files; for file in *; do	\
# 		${INSTALL_DATA} $$file ${DESTDIR}${EGDIR}/config;	\
# 	done
# 	set -e; cd ${WRKSRC}/sample-scripts; for file in *; do		\
# 		${INSTALL_DATA} $$file ${DESTDIR}${EGDIR}/scripts;	\
# 	done
# 	set -e; cd ${WRKSRC}/sample-keys; for file in *; do		\
# 		${INSTALL_DATA} $$file ${DESTDIR}${EGDIR}/keys;		\
# 	done
# 
# .include "options.mk"
# 
# # OpenVPN 2.x has a shared module "plugin" architecture that allows
# # inserting callbacks into the server for various tasks.
# DL_AUTO_VARS=		yes
# .include "../../mk/dlopen.buildlink3.mk"
# 
# .include "../../mk/bsd.prefs.mk"
# .if ${OPSYS} == "SunOS"
# .include "../../net/solaris-tap/buildlink3.mk"
# .endif
# .include "../../archivers/lzo/buildlink3.mk"
# .include "../../security/openssl/buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
