# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      teem-1.8.0-src.eb
# Date::      Fri Nov  9 14:37:08 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'teem'
version = '1.8.0-src'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['teem-1.8.0-src.tar.gz']
source_urls = ['http://sourceforge.net/projects/teem/files', 'download']
homepage = 'http://teem.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "teem-1.8.0-src description: Libraries_for_manipulation_of_Structured_Scientific_Data"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.19 2012/10/31 11:19:50 asau Exp $
# #
# 
# DISTNAME=		teem-1.8.0-src
# PKGNAME=		${DISTNAME:C/-src//}
# PKGREVISION=		4
# CATEGORIES=		devel
# MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=teem/}
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://teem.sourceforge.net/
# COMMENT=		Libraries for manipulation of Structured Scientific Data
# 
# USE_TOOLS+=		gmake pax
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${OPSYS} == "NetBSD" || ${OPSYS} == "DragonFly"
# .  if ${MACHINE_ARCH} == "i386"
# NARCH=32
# LARCH=32
# .  elif ${MACHINE_ARCH} == "x86_64"
# NARCH=64
# LARCH=amd64
# .  else
# PKG_FAIL_REASON+=	"Need configuration rules for ${MACHINE_ARCH}."
# .  endif
# 
# TEEM_ARCH=netbsd.${NARCH}
# 
# do-configure:
# 	cd ${WRKSRC} && ${CP} -pR linux.${LARCH} ${TEEM_ARCH}
# 
# .elif ${OPSYS} == "Linux" && ${MACHINE_ARCH} == "i386"
# TEEM_ARCH=linux.32
# .else
# PKG_FAIL_REASON+=	"Support for this platform has not yet been added."
# .endif
# 
# MAKE_ENV+=	TEEM_ARCH=${TEEM_ARCH:Q}					\
# 		TEEM_PNG=1 TEEM_BZIP2=1 TEEM_ZLIB=1 TEEM_PTHREAD=1	\
# 		TEEM_PNG_IPATH="-I${BUILDLINK_PREFIX.png}/include"	\
# 		TEEM_PNG_LPATH="-L${BUILDLINK_PREFIX.png}/lib"		\
# 		TEEM_BZIP2_IPATH="-I${BUILDLINK_PREFIX.bzip2}/include"	\
# 		TEEM_BZIP2_LPATH="-L${BUILDLINK_PREFIX.bzip2}/lib"	\
# 		TEEM_ZLIB_IPATH="-I${BUILDLINK_PREFIX.zlib}/include"	\
# 		TEEM_ZLIB_LPATH="-L${BUILDLINK_PREFIX.zlib}/lib"	\
# 		TEEM_PTHREAD_IPATH="-I${BUILDLINK_PREFIX.pthread}/include" \
# 		TEEM_PTHREAD_LPATH="-L${BUILDLINK_PREFIX.pthread}/lib"
# 
# INSTALLATION_DIRS=	bin include lib
# 
# do-build:
# 	cd ${WRKSRC}/src && ${MAKE_ENV} ${GMAKE}
# 
# pre-install:
# 	${RM} -f ${WRKSRC}/${TEEM_ARCH}/bin/.empty		\
# 		${WRKSRC}/${TEEM_ARCH}/lib/.empty
# 
# do-install:
# 	cd ${WRKSRC}/include && pax -rw . ${DESTDIR}${PREFIX}/include/
# 	cd ${WRKSRC}/${TEEM_ARCH}/bin && pax -rw . ${DESTDIR}${PREFIX}/bin/
# 	cd ${WRKSRC}/${TEEM_ARCH}/lib && pax -rw . ${DESTDIR}${PREFIX}/lib/
# 
# .include "../../archivers/bzip2/buildlink3.mk"
# .include "../../devel/zlib/buildlink3.mk"
# .include "../../graphics/png/buildlink3.mk"
# 
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
