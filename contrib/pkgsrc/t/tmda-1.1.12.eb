# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      tmda-1.1.12.eb
# Date::      Fri Nov  9 14:37:29 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'tmda'
version = '1.1.12'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['tmda-1.1.12.tgz']
source_urls = ['http://tmda.sourceforge.net/ftp/releases/']
homepage = 'http://tmda.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "tmda-1.1.12 description: Python-based_SPAM_reduction_system"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.48 2012/10/08 12:19:33 asau Exp $
# #
# 
# DISTNAME=	tmda-1.1.12
# PKGREVISION=	4
# CATEGORIES=	mail python
# MASTER_SITES=	http://tmda.sourceforge.net/ftp/releases/
# MASTER_SITES+=	ftp://tmda.net/pub/tmda/releases/
# EXTRACT_SUFX=	.tgz
# 
# MAINTAINER=	schmonz@NetBSD.org
# HOMEPAGE=	http://tmda.net/
# COMMENT=	Python-based SPAM reduction system
# 
# PYTHON_PATCH_SCRIPTS=	${TMDA_PROGRAMS}
# PY_PATCHPLIST=		yes
# 
# PKG_SYSCONFSUBDIR=	${PKGBASE}
# 
# PKG_GROUPS=		tofmipd
# PKG_USERS=		tofmipd:tofmipd
# PKG_GECOS.tofmipd=	TMDA ofmipd User
# 
# RCD_SCRIPTS=	tofmipd
# FILES_SUBST+=	PYTHONBIN=${PYTHONBIN:Q}
# 
# SHAREDIR=	share/${PKGBASE}
# DOCDIR=		share/doc/${PKGBASE}
# EGDIR=		share/examples/${PKGBASE}
# HTMLDIR=	share/doc/html/${PKGBASE}
# PLIST_SUBST+=	SHAREDIR=${SHAREDIR:Q}
# PLIST_SUBST+=	DOCDIR=${DOCDIR:Q}
# PLIST_SUBST+=	EGDIR=${EGDIR:Q}
# PLIST_SUBST+=	HTMLDIR=${HTMLDIR:Q}
# 
# TMDA_PROGRAMS=	bin/tmda-*
# TMDA_DOCS=	CODENAMES COPYING CRYPTO ChangeLog INSTALL
# TMDA_DOCS+=	NEWS README THANKS UPGRADE
# TMDA_CONTRIB=	contrib/*
# 
# SUBST_CLASSES+=		etc
# SUBST_STAGE.etc=	do-configure
# SUBST_FILES.etc=	bin/tmda-ofmipd TMDA/Auth.py TMDA/Defaults.py
# SUBST_SED.etc=		-e 's|/etc|${PKG_SYSCONFDIR}|g'
# 
# INSTALLATION_DIRS=	bin ${SHAREDIR} ${DOCDIR} ${HTMLDIR} ${EGDIR}
# INSTALLATION_DIRS+=	${PYSITELIB}/TMDA/pythonlib/email/mime
# INSTALLATION_DIRS+=	${PYSITELIB}/TMDA/Queue
# 
# .include "options.mk"
# 
# post-extract:
# 	rm ${WRKSRC}/doc/html/error.log
# 
# do-build:
# 	cd ${WRKSRC} && ${PYTHONBIN} ./compileall
# 
# pre-install:
# 	find ${WRKSRC} -name "*.orig" -print | xargs rm -f
# 
# do-install:
# 	for f in ${TMDA_PROGRAMS}; do \
# 		${INSTALL_SCRIPT} ${WRKSRC}/$${f} ${DESTDIR}${PREFIX}/bin; \
# 	done
# 
# 	${INSTALL_SCRIPT} ${WRKSRC}/TMDA/*.py* ${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA
# 
# 	${INSTALL_SCRIPT} ${WRKSRC}/TMDA/pythonlib/email/*.py* \
# 		${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA/pythonlib/email
# 	${INSTALL_SCRIPT} ${WRKSRC}/TMDA/pythonlib/email/mime/*.py* \
# 		${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA/pythonlib/email/mime
# 	${INSTALL_SCRIPT} ${WRKSRC}/TMDA/Queue/*.py* \
# 		${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA/Queue
# 
# 	${INSTALL_DATA} ${WRKSRC}/templates/*.txt ${DESTDIR}${PREFIX}/${SHAREDIR}
# 
# 	for f in ${TMDA_DOCS}; do \
# 		${INSTALL_DATA} ${WRKSRC}/$${f} ${DESTDIR}${PREFIX}/${DOCDIR}; \
# 	done
# 
# 	for f in ${TMDA_CONTRIB}; do \
# 		if [ -f $${f} ]; then \
# 			${INSTALL_DATA} ${WRKSRC}/$${f} \
# 				${DESTDIR}${PREFIX}/${EGDIR}; \
# 		else \
# 			cp -Rp ${WRKSRC}/$${f} ${DESTDIR}${PREFIX}/${EGDIR}; \
# 		fi; \
# 	done
# 
# 	cp -Rp ${WRKSRC}/doc/html/* ${DESTDIR}${PREFIX}/${HTMLDIR}
# 
# post-install:
# 	${PY_COMPILE_ALL} ${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA \
# 		${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA/Queue \
# 		${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA/pythonlib/email \
# 		${DESTDIR}${PREFIX}/${PYSITELIB}/TMDA/pythonlib/email/mime
# 
# .include "../../lang/python/extension.mk"
# .include "../../lang/python/application.mk"
# .include "../../mk/bsd.pkg.mk"
