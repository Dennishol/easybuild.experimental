# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      basic256_0.9.6.71.eb
# Date::      Fri Nov  9 14:37:26 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'basic256_0.9.6.71'
version = 'basic256_0.9.6.71'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['basic256_0.9.6.71.tgz']
source_urls = ['http://sourceforge.net/projects/kidbasic/files', 'download']
homepage = 'http://www.basic256.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "basic256_0.9.6.71 description: BASIC_language_with_traditional_control_structures"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.14 2012/10/08 23:01:56 adam Exp $
# #
# 
# DISTNAME=	basic256_0.9.6.71
# PKGNAME=	${DISTNAME:S/_/-/}
# PKGREVISION=	4
# CATEGORIES=	lang
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=kidbasic/}
# EXTRACT_SUFX=	.tgz
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.basic256.org/
# COMMENT=	BASIC language with traditional control structures
# LICENSE=	gnu-gpl-v2
# 
# MAKE_JOBS_SAFE=	no
# 
# WRKSRC=		${WRKDIR}
# USE_LANGUAGES=	c c++
# USE_TOOLS+=	bison flex gmake
# 
# SUBST_CLASSES+=			fix-path
# SUBST_STAGE.fix-path=		pre-configure
# SUBST_MESSAGE.fix-path=		Fix hard coded paths for qt4
# SUBST_FILES.fix-path=		Makefile
# SUBST_FILES.fix-path+=		Makefile.Release
# SUBST_SED.fix-path=		-e 's,/usr/share,${PREFIX},g'
# SUBST_SED.fix-path+=		-e 's,/usr/bin/qmake,${QTDIR}/bin/qmake,'
# SUBST_SED.fix-path+=		-e 's,/usr/bin/moc-qt4,${QTDIR}/bin/moc,'
# SUBST_SED.fix-path+=		-e 's,/usr/bin/rcc,${QTDIR}/bin/rcc,'
# SUBST_SED.fix-path+=		-e 's,-I/usr/include/qt4,-I${QTDIR}/include,g'
# 
# SUBST_CLASSES+=			fix-path2
# SUBST_STAGE.fix-path2=		pre-configure
# SUBST_MESSAGE.fix-path2=	Fix hard coded paths
# SUBST_FILES.fix-path2+=		BASIC256.pro
# SUBST_SED.fix-path2=		-e 's,/usr/share,${PREFIX}/share,g'
# SUBST_SED.fix-path2+=		-e 's,/usr/local,${PREFIX},g'
# 
# MAKE_ENV+=	INSTALL_ROOT=${DESTDIR}
# 
# .include "../../audio/SDL_mixer/buildlink3.mk"
# .include "../../audio/espeak/buildlink3.mk"
# .include "../../databases/sqlite3/buildlink3.mk"
# .include "../../security/openssl/buildlink3.mk"
# .include "../../x11/qt4-libs/buildlink3.mk"
# .include "../../x11/qt4-tools/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
