# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      bootstrap-extra-files-20070702.eb
# Date::      Fri Nov  9 14:37:42 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'bootstrap'
version = 'extra-files-20070702'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['bootstrap-extra-files-20070702.tar.gz']
source_urls = ['#empty']

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "bootstrap-extra-files-20070702 description: Extra_bootstrap_files_and_scripts_for_"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.11 2012/09/11 23:19:34 asau Exp $
# 
# DISTNAME=	bootstrap-extra-files-20070702
# CATEGORIES=	pkgtools
# MASTER_SITES=	# empty
# DISTFILES=	# empty
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# COMMENT=	Extra bootstrap files and scripts for ${OPSYS}
# 
# BOOTSTRAP_PKG=	yes
# 
# NO_CONFIGURE=	yes
# NO_BUILD=	yes
# 
# .include "../../mk/bsd.prefs.mk"
# 
# EXTRA_FILES=	fakeldd mkdir strip xargs
# PLIST_VARS+=	${EXTRA_FILES}
# 
# .PHONY: ${EXTRA_FILES:S/^/do-install-/}
# 
# NEED_FAKELDD=		Haiku IRIX
# .if !empty(NEED_FAKELDD:M${OPSYS})
# PLIST.fakeldd=		yes
# do-install:		do-install-fakeldd
# .endif
# 
# NEED_MKDIR=		UnixWare
# .if !empty(NEED_MKDIR:M${OPSYS})
# PLIST.mkdir=		yes
# do-install:		do-install-mkdir
# .endif
# 
# NEED_STRIP=		AIX
# .if !empty(NEED_STRIP:M${OPSYS})
# PLIST.strip=		yes
# do-install:		do-install-strip
# .endif
# 
# NEED_XARGS=		Interix
# .if !empty(NEED_XARGS:M${OPSYS})
# PLIST.xargs=		yes
# do-install:		do-install-xargs
# .endif
# 
# do-extract:
# 	${CP} -R ${FILESDIR} ${WRKSRC}
# 
# do-install:
# 	@${ECHO} ${.ALLSRC}
# 
# do-install-fakeldd:
# 	${INSTALL_SCRIPT_DIR} ${DESTDIR}${PREFIX}/sbin
# .if ${OPSYS} == "Haiku"
# 	${INSTALL_SCRIPT} ${WRKSRC}/fakeldd-${OPSYS} ${DESTDIR}${PREFIX}/sbin/fakeldd
# .else
# 	${INSTALL_SCRIPT} ${WRKSRC}/fakeldd ${DESTDIR}${PREFIX}/sbin/fakeldd
# .endif
# 
# do-install-mkdir:
# 	${INSTALL_SCRIPT_DIR} ${DESTDIR}${PREFIX}/bin
# 	${INSTALL_SCRIPT} ${WRKSRC}/mkdir-sh ${DESTDIR}${PREFIX}/bin/mkdir-sh
# 
# do-install-strip:
# 	${INSTALL_SCRIPT_DIR} ${DESTDIR}${PREFIX}/bin
# 	${INSTALL_SCRIPT} ${WRKSRC}/strip-sh ${DESTDIR}${PREFIX}/bin/strip
# 
# do-install-xargs:
# 	${INSTALL_SCRIPT_DIR} ${DESTDIR}${PREFIX}/bin
# 	${INSTALL_SCRIPT} ${WRKSRC}/xargs-sh ${DESTDIR}${PREFIX}/bin/xargs
# 
# .include "../../mk/bsd.pkg.mk"
