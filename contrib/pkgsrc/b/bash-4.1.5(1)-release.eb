# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      bash-4.1.5(1)-release.eb
# Date::      Fri Nov  9 14:37:51 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'bash'
version = '4.1.5(1)-release'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['bash-${BASH_VERSION}.tar.gz']
source_urls = ['http://ftp.gnu.org/gnu/bash']
homepage = 'http://www.gnu.org/software/bash/bash.html'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "bash-4.1.5(1)-release description: The_GNU_Bourne_Again_Shell"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.55 2012/09/11 23:25:07 asau Exp $
# 
# BASH_VERSION=		4.2
# 
# DISTNAME=	bash-${BASH_VERSION}
# #PKGNAME=	bash-${BASH_VERSION}.${BASH_PATCHLEVEL}
# PKGREVISION=	2
# CATEGORIES=	shells
# MASTER_SITES=	${MASTER_SITE_GNU:=bash/} \
# 		ftp://ftp.cwru.edu/pub/bash/
# 
# #PATCH_SITES=	${MASTER_SITES:=bash-4.0-patches/}
# #PATCHFILES+=	bash40-001 bash40-002 bash40-003 bash40-004 bash40-005
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.gnu.org/software/bash/bash.html
# COMMENT=	The GNU Bourne Again Shell
# LICENSE=	gnu-gpl-v3
# 
# CONFLICTS=	static-bash-[0-9]*
# 
# PKG_INSTALLATION_TYPES=	overwrite pkgviews
# 
# USE_TOOLS+=		makeinfo bison
# USE_PKGLOCALEDIR=	yes
# TEXINFO_REQD=		4.1
# GNU_CONFIGURE=		yes
# MAKE_ENV+=		INSTALL_SCRIPT=${INSTALL_SCRIPT:Q}
# CONFIGURE_ARGS=		LOCAL_LDFLAGS=${EXPORT_SYMBOLS_LDFLAGS:M*:Q}
# CPPFLAGS+=		-DDEFAULT_PATH_VALUE="\"/usr/bin:/bin:${LOCALBASE}/bin:/usr/local/bin\""
# MAKE_JOBS_SAFE=		no
# TEST_TARGET=		test
# 
# INFO_FILES=		YES # PLIST
# PKG_SHELL=		bin/bash
# INSTALLATION_DIRS=	${PKGMANDIR}/man1
# 
# # All features enabled by default.
# CONFIGURE_ARGS+=	--enable-readline
# CONFIGURE_ARGS+=	--enable-progcomp
# CONFIGURE_ARGS+=	--enable-process-substitution
# CONFIGURE_ARGS+=	--enable-job-control
# CONFIGURE_ARGS+=	--enable-history
# CONFIGURE_ARGS+=	--enable-help-builtin
# CONFIGURE_ARGS+=	--enable-extended-glob
# CONFIGURE_ARGS+=	--enable-dparen-arithmetic
# CONFIGURE_ARGS+=	--enable-directory-stack
# CONFIGURE_ARGS+=	--enable-debugger
# CONFIGURE_ARGS+=	--enable-cond-regexp
# CONFIGURE_ARGS+=	--enable-alias
# CONFIGURE_ARGS+=	--enable-brace-expansion
# CONFIGURE_ARGS+=	--enable-array-variables
# 
# .include "../../mk/bsd.prefs.mk"
# 
# PKG_OPTIONS_VAR=	PKG_OPTIONS.bash
# PKG_SUPPORTED_OPTIONS=	static
# 
# .include "../../mk/bsd.options.mk"
# 
# ##
# ## Static link
# ##
# .if !empty(PKG_OPTIONS:Mstatic)
# CONFIGURE_ARGS+=	--enable-static-link
# BUILDLINK_DEPMETHOD.gettext=	build
# BUILDLINK_DEPMETHOD.readline=	build
# .endif
# 
# # Use "readline" package on Darwin to avoid link erros.
# .if ${OPSYS} == "Darwin"
# CONFIGURE_ARGS+=		--with-installed-readline
# 
# USE_GNU_READLINE=		yes
# BUILDLINK_API_DEPENDS.readline+=	readline>=6.0
# 
# .include "../../devel/readline/buildlink3.mk"
# .endif
# 
# post-install:
# 	${INSTALL_MAN} ${WRKSRC}/doc/bash.1 ${DESTDIR}${PREFIX}/${PKGMANDIR}/man1
# 	${INSTALL_MAN} ${WRKSRC}/doc/bashbug.1 ${DESTDIR}${PREFIX}/${PKGMANDIR}/man1
# 
# .include "../../mk/termcap.buildlink3.mk"
# .include "../../devel/gettext-lib/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
