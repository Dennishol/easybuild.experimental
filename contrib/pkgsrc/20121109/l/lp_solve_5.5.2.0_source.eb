# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      lp_solve_5.5.2.0_source.eb
# Date::      Fri Nov  9 14:37:31 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'lp_solve_5.5.2.0_source'
version = 'lp_solve_5.5.2.0_source'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['lp_solve_5.5.2.0_source.tar.gz']
source_urls = ['http://sourceforge.net/projects/lpsolve/files', 'download']
homepage = 'http://lpsolve.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "lp_solve_5.5.2.0_source description: Mixed_Integer_Linear_Programming__MILP__solver"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.4 2012/09/11 23:04:23 asau Exp $
# #
# 
# DISTNAME=	lp_solve_5.5.2.0_source
# PKGNAME=	${DISTNAME:S/_source//:S/_5/-5/}
# CATEGORIES=	math devel
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=lpsolve/}
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://lpsolve.sourceforge.net/
# COMMENT=	Mixed Integer Linear Programming (MILP) solver
# #LICENSE=	LGPL, unclear which version (see lp_lib.h)
# 
# WRKSRC=		${WRKDIR}/lp_solve_5.5
# 
# SUBST_CLASSES+=		dl
# SUBST_STAGE.dl=		pre-build
# SUBST_SED.dl+=		-e s,-ldl,${DL_LIBS:Q},g
# SUBST_SED.dl+=		-e s,^opts=.*,opts=\'${CFLAGS:Q}\',g
# SUBST_SED.dl+=		-e s,-fpic,-fPIC,g
# SUBST_FILES.dl+=	lp_solve/ccc
# SUBST_FILES.dl+=	lpsolve55/ccc
# SUBST_FILES.dl+=	demo/ccc
# 
# .include "../../mk/bsd.fast.prefs.mk"
# 
# .if ${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "x86_64"
# LPSOLVE_ARCH=	ux64
# .else
# LPSOLVE_ARCH=	ux32
# .endif
# 
# INSTALLATION_DIRS=	bin include/lpsolve lib
# 
# do-build:
# .for dir in lp_solve lpsolve55 demo
# 	${RUN}${_ULIMIT_CMD}				\
# 	cd ${WRKSRC}/${dir} &&				\
# 	${SETENV} ${MAKE_ENV} ${SH} ccc
# .endfor
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/lp_solve/bin/${LPSOLVE_ARCH}/lp_solve \
# 		${DESTDIR}${PREFIX}/bin
# .for i in declare.h fortify.h ini.h lp_*.h lpkit.h lpsolve.h ufortify.h yacc_read.h
# 	${INSTALL_DATA} ${WRKSRC}/${i} ${DESTDIR}${PREFIX}/include/lpsolve
# .endfor
# .for i in liblpsolve55.a liblpsolve55.so
# 	${INSTALL_LIB} ${WRKSRC}/lpsolve55/bin/${LPSOLVE_ARCH}/${i} \
# 		${DESTDIR}${PREFIX}/lib
# .endfor
# 	${LN} -sf liblpsolve55.so ${DESTDIR}${PREFIX}/lib/liblpsolve55.so.1
# 
# .include "../../mk/dlopen.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
