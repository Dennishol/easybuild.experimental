# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      libunique-1.1.6.eb
# Date::      Fri Nov  9 14:38:09 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'libunique'
version = '1.1.6'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['libunique-1.1.6.tar.gz']
source_urls = ['http://sourceforge.net/projects/sources/libunique/1.1/files', 'download']
homepage = 'http://live.gnome.org/LibUnique'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "libunique-1.1.6 description: Library_for_writing_single_instance_applications"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.24 2012/10/29 05:06:37 asau Exp $
# #
# 
# DISTNAME=	libunique-1.1.6
# PKGREVISION=	13
# CATEGORIES=	devel
# MASTER_SITES=	${MASTER_SITE_GNOME:=sources/libunique/1.1/}
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://live.gnome.org/LibUnique
# COMMENT=	Library for writing single instance applications
# LICENSE=	gnu-lgpl-v2.1
# 
# GNU_CONFIGURE=		yes
# USE_LIBTOOL=		yes
# USE_TOOLS+=		pkg-config gmake
# 
# PKGCONFIG_OVERRIDE+=	unique.pc.in
# 
# BUILDLINK_TRANSFORM+=	rm:-Werror
# 
# # Workaround for Upstream Bug#562310.
# # for more detail, see also PR#41475.
# TOOLS_NOOP+=	gtkdoc-rebase
# 
# SUBST_CLASSES+=		g_const
# SUBST_STAGE.g_const=	post-configure
# SUBST_MESSAGE.g_const=	Replace deprecated G_CONST_RETURN with plain "const".
# SUBST_FILES.g_const=	unique/uniqueapp.c
# SUBST_FILES.g_const+=	unique/uniquebackend.c
# SUBST_FILES.g_const+=	unique/uniquebackend.h
# SUBST_FILES.g_const+=	unique/uniqueinternals.h
# SUBST_FILES.g_const+=	unique/uniquemessage.c
# SUBST_FILES.g_const+=	unique/uniquemessage.h
# SUBST_SED.g_const=	-e 's/G_CONST_RETURN /const /g'
# 
# .include "../../mk/compiler.mk"
# 
# .if !empty(PKGSRC_COMPILER:Mclang)
# CFLAGS+=	-Wno-tautological-compare
# .endif
# 
# .include "options.mk"
# 
# .include "../../x11/gtk2/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
