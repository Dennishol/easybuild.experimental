# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      fidogate-4.4.10.eb
# Date::      Fri Nov  9 14:36:55 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'fidogate'
version = '4.4.10'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['fidogate-4.4.10.tar.gz']
source_urls = ['http://sourceforge.net/projects/fidogate/files', 'download']
homepage = 'http://www.fidogate.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "fidogate-4.4.10 description: FidoNet__FTN__"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.65 2012/10/03 21:54:05 wiz Exp $
# #
# 
# DISTNAME=	fidogate-4.4.10
# PKGREVISION=	4
# CATEGORIES=	comms
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=fidogate/}
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.fidogate.org/
# COMMENT=	FidoNet (FTN) <-> Internet mail and news gateway
# 
# MAKE_JOBS_SAFE=		no
# 
# USE_TOOLS+=		gmake makeinfo perl:run yacc
# MAKE_ENV+=		DEBUG="${CFLAGS} -Werror"
# BUILDLINK_SETENV.CC=	CC="cc ${_STRIPFLAG_CC}"
# 
# EGDIR=		${PREFIX}/share/examples/fidogate
# CONF_FILES=	${EGDIR}/fidogate.conf ${PKG_SYSCONFDIR}/fidogate/fidogate.conf
# RCD_SCRIPTS=	fidogate
# RCD_SCRIPT_SRC.fidogate=	${WRKSRC}/scripts/maintenance/rc.fidogate
# INFO_FILES=	yes # PLIST
# 
# USERGROUP_PHASE=	pre-install
# PKG_GROUPS=	news
# PKG_USERS=	news:news
# PKG_GECOS.news=	Network News
# PKG_HOME.news=	/var/spool/news
# 
# NO_CONFIGURE=	yes
# 
# SUBST_CLASSES+=		paths
# SUBST_FILES.paths=	config.make
# SUBST_SED.paths=	-e "s,@PREFIX@,"${PREFIX:Q}",g"
# SUBST_SED.paths+=	-e "s,@PKG_SYSCONFDIR@,"${PKG_SYSCONFDIR:Q}",g"
# SUBST_SED.paths+=	-e "s,@PKGINFODIR@,"${PKGINFODIR:Q}",g"
# SUBST_SED.paths+=	-e "s,@PERL@,"${TOOLS_PATH.perl:Q}",g"
# SUBST_STAGE.paths=	pre-build
# 
# # Too many schar/uchar issues.
# BUILDLINK_TRANSFORM+=	rm:-Werror
# 
# PKG_DESTDIR_SUPPORT=	destdir
# 
# OWN_DIRS=		${PKG_SYSCONFDIR}/fidogate
# INSTALLATION_DIRS+=	${EGDIR}		lib/fidogate		\
# 			lib/fidogate/bin	share/doc/fidogate	\
# 			share/fidogate		share/fidogate/sendmail	\
# 			${PKGINFODIR} \
# 			share/fidogate/sendmail/mailer share/examples/rc.d
# 
# post-extract:
# 	${CP} ${WRKSRC}/examples/orodruin/fidogate.conf \
# 		${WRKSRC}/fidogate.conf.dist
# 
# pre-build:
# 	${RM} -f ${WRKSRC}/doc/fidogate.info*
# 	cd ${WRKSRC}/doc && makeinfo fidogate.texi && \
# 		${TOUCH} fidogate.txt html/fidogate_toc.html
# 	${PERL5} ${WRKSRC}/subst.pl -t${WRKSRC} ${WRKSRC}/fidogate.conf.dist \
# 		>${WRKSRC}/fidogate.conf
# 
# post-install:
# 	cd ${WRKSRC}/examples && for f in `${FIND} [m-p]* -type d -print`; do \
# 		${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/examples/fidogate/$$f; done
# 	cd ${WRKSRC}/examples && for f in `${FIND} README [m-p]* -type f -print`; do \
# 		${INSTALL_DATA} $$f ${DESTDIR}${PREFIX}/share/examples/fidogate/$$f; done
# 	cd ${WRKSRC}/sendmail/mailer && ${INSTALL_DATA} ffx.m4 ftn.m4 \
# 		${DESTDIR}${PREFIX}/share/fidogate/sendmail/mailer
# 	${INSTALL_DATA} ${WRKSRC}/doc/fidogate.txt ${DESTDIR}${PREFIX}/share/doc/fidogate
# 	${INSTALL_DATA} ${WRKSRC}/fidogate.conf ${DESTDIR}${EGDIR}
# 
# .include "../../mk/bsd.pkg.mk"
