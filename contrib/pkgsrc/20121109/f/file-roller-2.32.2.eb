# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      file-roller-2.32.2.eb
# Date::      Fri Nov  9 14:36:49 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'file'
version = 'roller-2.32.2'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['file-roller-2.32.2.tar.bz2']
source_urls = ['http://sourceforge.net/projects/sources/file-roller/2.32/files', 'download']
homepage = 'http://fileroller.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "file-roller-2.32.2 description: Front-end_to_archiving_programs_like_tar_and_zip"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.123 2012/10/08 23:01:07 adam Exp $
# #
# 
# DISTNAME=	file-roller-2.32.2
# PKGREVISION=	11
# CATEGORIES=	archivers gnome
# MASTER_SITES=	${MASTER_SITE_GNOME:=sources/file-roller/2.32/}
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://fileroller.sourceforge.net/
# COMMENT=	Front-end to archiving programs like tar and zip
# LICENSE=	gnu-gpl-v2
# 
# GNU_CONFIGURE=		yes
# USE_LIBTOOL=		yes
# USE_TOOLS+=		gmake gtar:run intltool msgfmt perl pkg-config unzip:run
# USE_TOOLS+=		zip:run
# USE_PKGLOCALEDIR=	yes
# 
# GCONF_SCHEMAS=		file-roller.schemas
# 
# BUILDLINK_API_DEPENDS.glib2+=		glib2>=2.12.0
# BUILDLINK_API_DEPENDS.gtk2+=		gtk2+>=2.10.0
# 
# # Force unzip from pkgsrc on NetBSD
# .include "../../mk/bsd.prefs.mk"
# .if ${OPSYS} == "NetBSD"
# TOOLS_PLATFORM.unzip=
# .endif
# 
# SUBST_CLASSES+=		unzip
# SUBST_STAGE.unzip=	pre-build
# SUBST_MESSAGE.unzip=	Hardcoding unzip path
# SUBST_FILES.unzip=	src/fr-command-zip.c
# SUBST_SED.unzip=	-e 's|@@UNZIP_COMMAND@@|${TOOLS_PATH.unzip}|'
# 
# .include "../../devel/GConf/schemas.mk"
# .include "../../devel/gettext-lib/buildlink3.mk"
# .include "../../devel/glib2/buildlink3.mk"
# .include "../../graphics/hicolor-icon-theme/buildlink3.mk"
# .include "../../sysutils/desktop-file-utils/desktopdb.mk"
# #.include "../../sysutils/nautilus/buildlink3.mk"
# .include "../../textproc/gnome-doc-utils/buildlink3.mk"
# .include "../../mk/omf-scrollkeeper.mk"
# .include "../../x11/gtk2/buildlink3.mk"
# .include "../../x11/libSM/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
