# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      socks5-v1_0r2.eb
# Date::      Fri Nov  9 14:37:39 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'socks5-1.0.2'
version = 'v1_0r2'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['socks5-v1_0r2_tar.gz']
version = '1.0.2'
name = 'socks5'
source_urls = ['#empty--manualfetchneeded']
homepage = 'http://www.socks.permeo.com/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "socks5-v1_0r2 description: SOCKS_v5_application_layer_gateway_and_clients"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.49 2012/10/23 17:19:09 asau Exp $
# 
# DISTNAME=	socks5-v1_0r2
# PKGNAME=	socks5-1.0.2
# PKGREVISION=	6
# CATEGORIES=	net security
# MASTER_SITES=	# empty -- manual fetch needed
# EXTRACT_SUFX=	_tar.gz
# 
# MAINTAINER=	ambrisko@ambrisko.roble.com
# HOMEPAGE=	http://www.socks.permeo.com/
# COMMENT=	SOCKS v5 application layer gateway and clients
# # XXX missing
# LICENSE=		socks5-license
# 
# RESTRICTED=		no commercial use
# # Set all pending someone looking at the license.
# NO_SRC_ON_FTP=		${RESTRICTED}
# NO_BIN_ON_FTP=		${RESTRICTED}
# NO_SRC_ON_CDROM=	${RESTRICTED}
# NO_BIN_ON_CDROM=	${RESTRICTED}
# 
# MAKE_JOBS_SAFE=		no
# 
# CONFLICTS=	socks4-[0-9]*
# 
# # here are some extra configure args you may wish to use
# # see the readme file before screwing with them
# #
# #EXTRA_CONFIGURE_ARGS+= \
# #			--with-default-server=socks.mydomain.com \
# #			--with-syslog-facility=LOG_AUTH \
# #			--with-passwd
# 
# PKG_INSTALLATION_TYPES=	overwrite pkgviews
# 
# WRKSRC=			${WRKDIR}/socks5-v1.0r2
# GNU_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--with-libconffile=${PREFIX}/etc/libsocks5.conf \
# 			--with-srvconffile=${PREFIX}/etc/socks5.conf \
# 			--with-srvpidfile=/var/run/socks5.pid \
# 			--with-srvidtfile=/var/run/socks5.ident \
# 			${EXTRA_CONFIGURE_ARGS}
# LIBS+=			-lcrypt
# RCD_SCRIPTS=		socks5
# 
# EXAMPLE_FILES=	README multiple_server.example server_2_multiple_server.example
# EXAMPLE_FILES+=	single_homed_host.example socks5.conf.dualhomed
# EXAMPLE_FILES+=	socks5.conf.gssapi socks5.conf.multipleservers
# EXAMPLE_FILES+=	socks5.conf.server2server socks5.conf.singlehomed
# EXAMPLE_DIR=	${PREFIX}/share/examples/socks5
# 
# INSTALLATION_DIRS=	bin include ${EXAMPLE_DIR} ${PKGMANDIR}/man1 \
# 			${PKGMANDIR}/man5
# INSTALL_MAKE_FLAGS+=	BINDIR=${DESTDIR}${PREFIX}/bin \
# 			SHLIB_DIR=${DESTDIR}${PREFIX}/lib \
# 			MANDIR=${DESTDIR}${PREFIX}/${PKGMANDIR} \
# 			mandir=${DESTDIR}${PREFIX}/${PKGMANDIR} \
# 			prefix=${DESTDIR}${PREFIX} \
# 			exec_prefix=${DESTDIR}${PREFIX}
# 
# post-install:
# 	cd ${DESTDIR}${PREFIX}/bin && chmod 555 rarchie rfinger rftp rping rtelnet rtraceroute runsocks rwhois
# 	${MV} ${DESTDIR}${PREFIX}/lib/libsocks5_sh.so ${DESTDIR}${PREFIX}/lib/libsocks5_sh.so.0.0
# 	${LN} -sf libsocks5_sh.so.0.0 ${DESTDIR}${PREFIX}/lib/libsocks5_sh.so.0
# 	${LN} -sf libsocks5_sh.so.0.0 ${DESTDIR}${PREFIX}/lib/libsocks5_sh.so
# .for f in ${EXAMPLE_FILES}
# 	${INSTALL_DATA} ${WRKSRC}/examples/${f} ${DESTDIR}${EXAMPLE_DIR}
# .endfor
# 
# .include "../../mk/bsd.pkg.mk"
