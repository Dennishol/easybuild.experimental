# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      se.eb
# Date::      Fri Nov  9 14:37:26 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'SmartEiffel-2.0'
version = 'se'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['se.tar.bz2']
version = '2.0'
name = 'SmartEiffel'
source_urls = ['ftp://ftp.loria.fr/pub/loria/SmartEiffel/']
homepage = 'http://smarteiffel.loria.fr/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "se description: The_GNU_Eiffel_Compiler"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.12 2012/10/02 20:11:35 asau Exp $
# 
# DISTNAME=	se
# PKGNAME=	SmartEiffel-2.0
# PKGREVISION=	1
# CATEGORIES=	lang
# MASTER_SITES=	ftp://ftp.loria.fr/pub/loria/SmartEiffel/
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	lars.nordlund@hem.utfors.se
# HOMEPAGE=	http://smarteiffel.loria.fr/
# COMMENT=	The GNU Eiffel Compiler
# 
# BROKEN=		Infinite loop in the installer
# 
# WRKSRC=		${WRKDIR}/SmartEiffel
# USE_TOOLS+=	pax
# 
# DIST_SUBDIR=	${PKGNAME_NOREV}
# 
# MAKE_ENV+=	SmartEiffel=${WRKSRC:Q}/sys/system.se
# 
# # This package relies heavily on GCC.
# ONLY_FOR_COMPILER=	gcc
# 
# CHECK_INTERPRETER_SKIP=	SmartEiffel/contrib/edb/sec \
# 			  SmartEiffel/misc/benchmarks/all_bench.elate \
# 			  SmartEiffel/www/libraries/eiffeldoc.sh
# 
# REPLACE_PYTHON+=	contrib/htmldoc/htmlshort
# 
# post-patch:
# 	${SED} "s:XXXWORKDIRXXX:${WRKDIR}:g" ${FILESDIR}/system.se \
# 		> ${WRKSRC}/sys/system.se
# 
# post-build:
# 	${MV} -f ${WRKSRC}/sys/system.se ${WRKSRC}/sys/system.se.bak
# 	${SED} "s:${WRKDIR}:${PREFIX}:g" ${WRKSRC}/sys/system.se.bak > \
# 		${WRKSRC}/sys/system.se
# 	${RM} -f ${WRKSRC}/sys/system.se.bak
# 	${RM} -f ${WRKSRC}/sys/system.se~
# 	${RM} -f ${WRKSRC}/Makefile.orig
# 
# do-install:
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/SmartEiffel
# 	cd ${WRKSRC} && pax -rw . ${DESTDIR}${PREFIX}/SmartEiffel
# 
# .include "../../lang/python/application.mk"
# .include "../../mk/bsd.pkg.mk"
