# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      Sablot-1.0.2.eb
# Date::      Fri Nov  9 14:37:58 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'Sablot'
version = '1.0.2'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['Sablot-1.0.2.tar.gz']
source_urls = ['http://download-1.gingerall.cz/download/sablot/']
homepage = 'http://www.gingerall.com/charlie/ga/xml/p_sab.xml'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "Sablot-1.0.2 description: XML_toolkit_implementing_XSLT,_DOM,_and_XPath"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.43 2012/10/25 06:56:59 asau Exp $
# 
# DISTNAME=		Sablot-1.0.2
# PKGNAME=		${DISTNAME:S/Sablot/sablotron/}
# PKGREVISION=		5
# CATEGORIES=		textproc
# MASTER_SITES=		http://download-1.gingerall.cz/download/sablot/
# 
# MAINTAINER=		uithuis@dds.nl
# HOMEPAGE=		http://www.gingerall.com/charlie/ga/xml/p_sab.xml
# COMMENT=		XML toolkit implementing XSLT, DOM, and XPath
# 
# BUILD_DEPENDS+=		p5-XML-Parser-[0-9]*:../../textproc/p5-XML-Parser
# 
# GNU_CONFIGURE=	YES
# USE_TOOLS+=		gmake perl
# USE_LANGUAGES=		c c++
# USE_LIBTOOL=		YES
# CONFIGURE_ARGS+=	--with-html-dir=${PREFIX}/share/doc/sablotron
# 
# # sablotron needs iconv but assumes it is in libc, so add what
# # buildlink3 finds.
# LIBS+=			${_BUILDLINK_LDADD.iconv}
# 
# .include "../../mk/compiler.mk"
# 
# # both libstdc++ and libm are required for gcc 2.95.x, as libstdc++
# # does not include the math functions. gcc3 only needs libstdc++.
# # SunPro needs libCrun and libm.
# #
# # XXX any extra libs needed on IRIX?
# .if !empty(PKGSRC_COMPILER:Msunpro)
# LIBS+=			-lCrun -lm
# .elif !empty(CC_VERSION:Mgcc-2*)
# LIBS+=			-lstdc++ -lm
# .elif !empty(CC_VERSION:Mgcc-3*)
# LIBS+=			-lstdc++ -lm
# .endif
# 
# .include "../../converters/libiconv/buildlink3.mk"
# .include "../../textproc/expat/buildlink3.mk"
# 
# .include "../../mk/bsd.pkg.mk"
