# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      4stAttack-2.1.4.eb
# Date::      Fri Nov  9 14:37:17 CET 2012

# The following values are best-guess, which may be further overriden on
name = '4stAttack'
version = '2.1.4'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['4stAttack-2.1.4.tar.gz']
source_urls = ['http://sourceforge.net/projects/forcedattack/files', 'download']
homepage = 'http://forcedattack.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "4stAttack-2.1.4 description: Game_in_which_you_have_to_try_to_out-smart_your_opponent"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.20 2012/10/06 11:54:29 asau Exp $
# #
# 
# DISTNAME=		4stAttack-2.1.4
# PKGREVISION=		14
# CATEGORIES=		games
# MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=forcedattack/}
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://forcedattack.sourceforge.net/
# COMMENT=		Game in which you have to try to out-smart your opponent
# 
# INSTALLATION_DIRS=	bin share/${PKGBASE}
# 
# USE_TOOLS+=	pax
# 
# PYTHON_PATCH_SCRIPTS=	4stattack.py
# 
# FIND_EXCLUDE=	\( -name \*.orig -or -name \*.txt -or -name \*.pre -or -name GPL -or -name \*~ -or -name 4stattack \)
# 
# do-build:
# 	${CHMOD} 0555 ${WRKSRC}/4stattack.py
# 	${MV} ${WRKSRC}/4stattack ${WRKSRC}/4stattack.pre
# 	${SED} -e "s,@FAHOME@,${PREFIX}/share/${PKGBASE}," \
# 		${WRKSRC}/4stattack.pre > ${WRKSRC}/4stattack
# 	${PY_COMPILE_ALL} ${WRKSRC}
# 	${PY_COMPILE_O_ALL} ${WRKSRC}
# 
# do-install:
# 	${INSTALL_SCRIPT} ${WRKSRC}/4stattack ${DESTDIR}${PREFIX}/bin
# 	cd ${WRKSRC} && ${FIND} . -type f -and \! ${FIND_EXCLUDE} \
# 		-print | pax -rw -pp -pm ${DESTDIR}${PREFIX}/share/${PKGBASE}
# 
# .include "../../devel/py-game/buildlink3.mk"
# .include "../../lang/python/application.mk"
# 
# .include "../../mk/bsd.pkg.mk"
