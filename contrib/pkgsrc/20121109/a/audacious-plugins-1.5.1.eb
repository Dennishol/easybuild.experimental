# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      audacious-plugins-1.5.1.eb
# Date::      Fri Nov  9 14:36:50 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'audacious'
version = 'plugins-1.5.1'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['audacious-plugins-1.5.1.tgz']
source_urls = ['http://distfiles.atheme.org/']
homepage = 'http://audacious-media-player.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "audacious-plugins-1.5.1 description: Plugins_for_Audacious_media_player"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.35 2012/10/08 23:01:07 adam Exp $
# #
# 
# DISTNAME=		audacious-plugins-1.5.1
# PKGREVISION=		26
# CATEGORIES=		audio
# MASTER_SITES=		http://distfiles.atheme.org/
# EXTRACT_SUFX=		.tgz
# 
# MAINTAINER=		jfranz@bsdprojects.net
# HOMEPAGE=		http://audacious-media-player.org/
# COMMENT=		Plugins for Audacious media player
# 
# GNU_CONFIGURE=		yes
# USE_TOOLS+=		gmake intltool pkg-config msgfmt
# USE_LIBTOOL=		yes
# 
# # This should avoid an error like: libstdc++.so.6: Undefined PLT symbol "_Unwind_GetIP" on NetBSD i386 and maybe amd64, with gcc4 at least.
# # This seems to happen when libstdc++ gets linked in with the plug-ins and the code is not compiled with g++.
# # For a similar problem see http://archive.netbsd.se/?ml=netbsd-java&a=2007-08&m=4912662 :
# LDFLAGS.NetBSD+=	-lgcc_s
# 
# # From audio/bmp/Makefile:
# # XXX Workaround a crash during shutdown that happens when dlclose(3)ing
# # any open plugin.  libstdc++ gets dynamically linked in when the id3lib
# # library is loaded, and is the one causing problems.  See PR pkg/26846
# # for more information.
# USE_LANGUAGES=		c c++
# LDFLAGS.NetBSD+=	-lstdc++ -lm
# 
# # cdaudio plugin complains about missing OSS at runtime
# LDFLAGS+=		${LIBOSSAUDIO}
# 
# # do not use pkgsrc' flac if it is installed
# CFLAGS+=	-I. -I../flacng -Ilibflacng
# 
# CONFIGURE_ARGS+=	--disable-amidiplug --disable-evdevplug \
# 			--disable-coreaudio --disable-projectm \
# 			--disable-gnomeshortcuts
# 
# .include "../../mk/bsd.prefs.mk"
# .include "options.mk"
# 
# PLIST_VARS+=	oss sun oss4
# 
# .if ${OPSYS} == "NetBSD"
# RAWPART_cmd=		/sbin/sysctl -n kern.rawpartition | ${TR} 0-9 a-j
# CONFIGURE_ARGS+=	--with-dev-dsp=${DEVOSSSOUND}			\
# 			--with-cdda-device=/dev/rcd0${RAWPART_cmd:sh}	\
# 			--with-cdda-dir=/cdrom/
# PLIST.oss=	yes
# PLIST.sun=	yes
# .elif ${OPSYS} == "FreeBSD"
# PLIST.oss=	yes
# .elif ${OPSYS} == "DragonFly"
# PLIST.oss=	yes
# .elif ${OPSYS} == "SunOS"
# BUILDLINK_TRANSFORM+=	rm:-Wl,-export-dynamic
# CPPFLAGS.SunOS=	-D__EXTENSIONS__ -D__uint32_t=uint32_t -D__uint64_t=uint64_t
# CONFIGURE_ARGS+=	--enable-oss4
# PLIST.oss4=	yes
# PLIST.oss=	yes
# #.elif ${OPSYS} == "Linux"
# #.  include	"../../wip/alsa-lib/buildlink3.mk"
# #PKG_SUPPORTED_OPTIONS+= lirc
# #.  if !empty(PKG_OPTIONS:Mlirc)
# #CONFIGURE_ARGS+=	--enable-lirc
# #.    include "../../wip/lirc/buildlink3.mk"
# #.  endif
# .endif
# 
# .include "../../audio/audacious/buildlink3.mk"
# .include "../../audio/libcddb/buildlink3.mk"
# .include "../../audio/libmad/buildlink3.mk"
# .include "../../audio/libmpcdec/buildlink3.mk"
# .include "../../audio/libvorbis/buildlink3.mk"
# .include "../../audio/libsndfile/buildlink3.mk"
# .include "../../audio/taglib/buildlink3.mk"
# .include "../../audio/wavpack/buildlink3.mk"
# .include "../../audio/lame/buildlink3.mk"
# .include "../../devel/libbinio/buildlink3.mk"
# .include "../../devel/libmtp/buildlink3.mk"
# .include "../../devel/SDL/buildlink3.mk"
# .include "../../graphics/imlib2/buildlink3.mk"
# .include "../../misc/libcdio/buildlink3.mk"
# .include "../../multimedia/libogg/buildlink3.mk"
# .include "../../net/libmms/buildlink3.mk"
# .include "../../www/curl/buildlink3.mk"
# .include "../../www/neon/buildlink3.mk"
# .include "../../x11/libXcomposite/buildlink3.mk"
# .include "../../mk/oss.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
