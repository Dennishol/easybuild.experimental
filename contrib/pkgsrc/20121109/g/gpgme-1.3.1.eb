# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      gpgme-1.3.1.eb
# Date::      Fri Nov  9 14:37:48 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'gpgme'
version = '1.3.1'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['gpgme-1.3.1.tar.bz2']
source_urls = ['ftp://ftp.gnupg.org/gcrypt/gpgme/']
homepage = 'http://www.gnupg.org/related_software/gpgme/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "gpgme-1.3.1 description: GnuPG_Made_Easy"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.69 2012/10/23 18:16:29 asau Exp $
# 
# DISTNAME=	gpgme-1.3.1
# PKGREVISION=	1
# CATEGORIES=	security
# MASTER_SITES=	ftp://ftp.gnupg.org/gcrypt/gpgme/
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.gnupg.org/related_software/gpgme/
# COMMENT=	GnuPG Made Easy
# LICENSE=	gnu-gpl-v2
# 
# USE_LIBTOOL=		yes
# GNU_CONFIGURE=		yes
# PTHREAD_OPTS+=		require
# INFO_FILES=		yes
# 
# SUBST_CLASSES+=		pthread
# SUBST_FILES.pthread=	src/gpgme-config.in
# SUBST_SED.pthread+=	-e 's,@PTHREAD_LIBS@,${PTHREAD_LDFLAGS} ${PTHREAD_LIBS},g'
# SUBST_SED.pthread+=	-e 's,@PTHREAD_CFLAGS@,${PTHREAD_CFLAGS},g'
# SUBST_STAGE.pthread=	post-patch
# 
# LIBS.SunOS+=		-lnsl -lsocket
# 
# # getenv_r is not detected correctly. It will be found
# # in either base system or librfuncs
# CONFIGURE_ENV+=		ac_cv_func_getenv_r=yes
# 
# TEST_TARGET=		check
# 
# .include "../../mk/pthread.buildlink3.mk"
# 
# .if ${PTHREAD_TYPE} == "native"
# CONFIGURE_ARGS+=	--without-pth --without-pth-test
# .endif
# 
# .include "options.mk"
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${OPSYS} == "HPUX"
# CONFIGURE_ENV+=		ac_cv_lib_pthread_pthread_create=yes
# .endif
# 
# # we want the getenv_r() semantics of NetBSD-current
# BUILDLINK_API_DEPENDS.librfuncs+=	librfuncs>=1.0.7nb1
# .include "../../devel/librfuncs/buildlink3.mk"
# BUILDLINK_API_DEPENDS.libassuan+=	libassuan>=2.0.2
# .include "../../security/libassuan2/buildlink3.mk"
# BUILDLINK_API_DEPENDS.libgpg-error+=	libgpg-error>=1.4
# .include "../../security/libgpg-error/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
# _UNWRAP_FILES=
