# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      glimmer213.eb
# Date::      Fri Nov  9 14:36:53 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'glimmer-2.13'
version = 'glimmer213'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['glimmer213.tar.gz']
version = '2.13'
name = 'glimmer'
source_urls = ['ftp://ftp.tigr.org/pub/software/Glimmer/']
homepage = 'ftp://ftp.tigr.org/pub/software/Glimmer/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "glimmer213 description: System_for_finding_genes_in_microbial_DNA"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.12 2012/09/16 17:20:17 cheusov Exp $
# #
# 
# DISTNAME=		glimmer213
# PKGREVISION=		1
# PKGNAME=		glimmer-2.13
# CATEGORIES=		biology
# MASTER_SITES=		ftp://ftp.tigr.org/pub/software/Glimmer/
# 
# MAINTAINER=		hdp@cs.nmsu.edu
# HOMEPAGE=		ftp://ftp.tigr.org/pub/software/Glimmer/
# COMMENT=		System for finding genes in microbial DNA
# 
# CONFLICTS+=		generate-[0-9]*
# 
# USE_LANGUAGES=		c c++
# 
# WRKSRC=			${WRKDIR}/glimmer2.13
# INSTALLATION_DIRS=	bin
# 
# do-install:
# .for PROGRAM in adjust anomaly build-icm check codon-usage compare-lists \
# 	generate get-len get-putative glimmer2 long-orfs
# 	${INSTALL_PROGRAM} ${WRKSRC}/${PROGRAM} ${DESTDIR}${PREFIX}/bin
# .endfor
# 	# ``extract'' is also in the csound package, so rename to avoid conflict
# 	${INSTALL_PROGRAM} ${WRKSRC}/extract ${DESTDIR}${PREFIX}/bin/glextract
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/doc/glimmer
# 	${CP} ${WRKSRC}/README ${WRKSRC}/run-glimmer2.readme
# .for DOC in run-glimmer2.readme build-icm.readme extract.readme glimmer2.readme long-orfs.readme
# 	${INSTALL_DATA} ${WRKSRC}/${DOC} ${DESTDIR}${PREFIX}/share/doc/glimmer
# .endfor
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/glimmer
# 	${INSTALL_SCRIPT} ${WRKSRC}/run-glimmer2 ${DESTDIR}${PREFIX}/share/glimmer
# 
# .include "../../mk/bsd.pkg.mk"
