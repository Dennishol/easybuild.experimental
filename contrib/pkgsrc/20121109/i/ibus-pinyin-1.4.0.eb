# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      ibus-pinyin-1.4.0.eb
# Date::      Fri Nov  9 14:37:25 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'ibus'
version = 'pinyin-1.4.0'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['ibus-pinyin-1.4.0.tar.gz']
source_urls = ['http://ibus.googlecode.com/files/']
homepage = 'http://code.google.com/p/ibus/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "ibus-pinyin-1.4.0 description: Chinese_Pinyin_and_Bopomofo_engines_for_IBus_input_platform"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.17 2012/10/06 14:25:12 asau Exp $
# #
# 
# DISTNAME=	ibus-pinyin-1.4.0
# PKGREVISION=	2
# CATEGORIES=	inputmethod chinese
# MASTER_SITES=	http://ibus.googlecode.com/files/
# DISTFILES=	${DEFAULT_DISTFILES} ${DBTAR}
# 
# MAINTAINER=	obache@NetBSD.org
# HOMEPAGE=	http://code.google.com/p/ibus/
# COMMENT=	Chinese Pinyin and Bopomofo engines for IBus input platform
# LICENSE=	gnu-gpl-v2
# 
# GNU_CONFIGURE=		yes
# USE_LIBTOOL=		yes
# USE_PKGLOCALEDIR=	yes
# USE_LANGUAGES=		c c++
# USE_TOOLS+=		pkg-config gmake intltool msgfmt
# 
# # taken from ${WRKSRC}/data/db/open-phrase/Makefile.in
# DBVER=		1.2.99
# DBTAR=		pinyin-database-${DBVER}.tar.bz2
# 
# post-extract:
# 	${RUN} cd ${WRKSRC}/data/db/open-phrase;	\
# 	mkdir -p db;					\
# 	mv ${WRKDIR}/db/main.db db/open-phrase.db;	\
# 	touch ${DBTAR} stamp-db
# 
# SUBST_CLASSES+=		epython
# SUBST_STAGE.epython=	pre-configure
# SUBST_FILES.epython=	setup/ibus-setup-pinyin.in
# SUBST_SED.epython=	-e 's;exec python;exec ${PYTHONBIN};g'
# 
# CONFIGURE_ARGS+=	--localedir=${PREFIX}/${PKGLOCALEDIR}/locale
# CONFIGURE_ARGS+=	--disable-db-android
# CONFIGURE_ARGS+=	--enable-db-open-phrase
# 
# .include "options.mk"
# 
# .include "../../mk/bsd.prefs.mk"
# .include "../../mk/compiler.mk"
# 
# .if ${OPSYS} == "Linux" || ${OPSYS} == "SunOS"
# .  include "../../devel/libuuid/buildlink3.mk"
# .endif
# 
# .if (!empty(PKGSRC_COMPILER:Mgcc) && !empty(CC_VERSION:Mgcc-4.[4-9]*)) || !empty(PKGSRC_COMPILER:Mclang)
# CONFIGURE_ARGS+=	--disable-boost
# .else
# CONFIGURE_ARGS+=	--enable-boost
# CONFIGURE_ARGS+=	--with-boost=${BUILDLINK_PREFIX.boost-headers}
# .include "../../devel/boost-headers/buildlink3.mk"
# SUBST_CLASSES+=		shared_ptr
# SUBST_STAGE.shared_ptr=	post-configure
# SUBST_FILES.shared_ptr=	src/*.h
# SUBST_SED.shared_ptr=	-e 's,std::shared_ptr,boost::shared_ptr,g'
# .endif
# 
# .include "../../inputmethod/ibus/bad-env-usage.mk"
# 
# .include "../../databases/sqlite3/buildlink3.mk"
# .include "../../inputmethod/ibus/buildlink3.mk"
# .include "../../lang/python/application.mk"
# .include "../../mk/bsd.pkg.mk"
