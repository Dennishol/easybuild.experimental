# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      iozone3_408.eb
# Date::      Fri Nov  9 14:36:53 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'iozone-3.408'
version = 'iozone3_408'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['iozone3_408.tar']
version = '3.408'
name = 'iozone'
source_urls = ['http://www.iozone.org/src/current/']
homepage = 'http://www.iozone.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "iozone3_408 description: Benchmark_for_file_read_and_write_speed"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.46 2012/10/03 21:53:58 wiz Exp $
# 
# DISTNAME=	iozone3_408
# PKGNAME=	iozone-3.408
# PKGREVISION=	1
# CATEGORIES=	benchmarks
# MASTER_SITES=	http://www.iozone.org/src/current/
# EXTRACT_SUFX=	.tar
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.iozone.org/
# COMMENT=	Benchmark for file read and write speed
# # No derivative works
# LICENSE=	iozone-license
# 
# NOT_FOR_PLATFORM=	Interix-*-* # has only 32-bit off_t
# 
# PKG_INSTALLATION_TYPES=	overwrite pkgviews
# 
# WRKSRC=			${WRKDIR}/${DISTNAME}/src/current
# MAKE_FILE=		makefile
# USE_TOOLS+=		tee perl
# 
# CPPFLAGS.SunOS+=	-Dsolaris
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if !empty(OPSYS:M*BSD) || ${OPSYS} == "Linux" || ${OPSYS} == "DragonFly"
# BUILD_TARGET=		${LOWER_OPSYS}
# .elif (${OPSYS} == "SunOS")
# BUILD_TARGET=		Solaris
# .elif (${OPSYS} == "Darwin")
# BUILD_TARGET=		macosx
# .elif (${OPSYS} == "IRIX")
# BUILD_TARGET=		${OPSYS}${ABI:M64}
# .elif (${OPSYS} == "BSDOS")
# BUILD_TARGET=		bsdi
# .elif (${OPSYS} == "AIX")
# BUILD_TARGET=		${OPSYS}
# .else
# # XXX: generic should work, but specific target would be better
# BUILD_TARGET=		generic
# .endif
# 
# REPLACE_PERL =		iozone_visualizer.pl report.pl
# 
# EGDIR =			share/examples/IOzone
# DOCDIR =		share/doc/IOzone
# INSTALLATION_DIRS=	bin ${PKGMANDIR}/man1 ${EGDIR} ${DOCDIR}
# 
# .include "options.mk"
# 
# IOZONE_TEST_ARGS=		-Ea
# .if !empty(PKG_OPTIONS:Mthreads)
# IOZONE_TEST_ARGS+=		-T -t4
# .endif
# 
# do-install:
# .for bb in fileop iozone pit_server
# 	${INSTALL_PROGRAM} ${WRKSRC}/${bb} ${DESTDIR}${PREFIX}/bin
# .endfor
# 	${INSTALL_SCRIPT} ${WRKSRC}/iozone_visualizer.pl \
# 		${DESTDIR}${PREFIX}/bin/iozone_visualizer
# 	${INSTALL_SCRIPT} ${WRKSRC}/report.pl \
# 		${DESTDIR}${PREFIX}/bin/iozone_report
# 	${INSTALL_MAN} ${WRKDIR}/${DISTNAME}/docs/iozone.1 \
# 		${DESTDIR}${PREFIX}/${PKGMANDIR}/man1
# .for dd in IOzone_msword_98.pdf Iozone_ps.gz Run_rules.doc
# 	${INSTALL_DATA} ${WRKDIR}/${DISTNAME}/docs/${dd} \
# 		${DESTDIR}${PREFIX}/${DOCDIR}/
# .endfor
# .for ee in Generate_Graphs Gnuplot.txt client_list gengnuplot.sh \
# 	gnu3d.dem gnuplot.dem gnuplotps.dem read_telemetry write_telemetry
# 	${INSTALL_DATA} ${WRKSRC}/${ee} \
# 		${DESTDIR}${PREFIX}/${EGDIR}/
# .endfor
# 
# benchmark:
# 	cd ${WRKSRC}; ./iozone ${IOZONE_TEST_ARGS} | ${TEE} iozone.out
# 
# results:
# 	${MKDIR} /tmp/benches/`domainname`
# 	${CP} ${WRKSRC}/iozone.out /tmp/benches/`domainname`/iozone.`uname`-`uname -m`-`uname -r`.`hostname`
# 
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
