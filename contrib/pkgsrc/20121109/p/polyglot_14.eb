# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      polyglot_14.eb
# Date::      Fri Nov  9 14:37:19 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'polyglot-1.4'
version = 'polyglot_14'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['polyglot_14.zip']
version = '1.4'
name = 'polyglot'
source_urls = ['http://wbec-ridderkerk.nl/html/download/fruit/']
homepage = 'http://wbec-ridderkerk.nl/html/details/PolyGlot.html'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "polyglot_14 description: UCI_to_WB_adapter__for_chess_engines_"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.5 2012/10/06 11:54:50 asau Exp $
# #
# 
# DISTNAME=		polyglot_14
# PKGNAME=		polyglot-1.4
# CATEGORIES=		games
# MASTER_SITES=		http://wbec-ridderkerk.nl/html/download/fruit/
# EXTRACT_SUFX=		.zip
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://wbec-ridderkerk.nl/html/details/PolyGlot.html
# COMMENT=		UCI to WB adapter (for chess engines)
# 
# WRKSRC=			${WRKDIR}/polyglot_14
# BUILD_DIRS=		src
# MAKE_FILE=		${FILESDIR}/Makefile
# USE_LANGUAGES=		c++
# 
# INSTALLATION_DIRS=	bin share/doc/polyglot share/examples/polyglot
# 
# post-extract:
# 	cp ${FILESDIR}/fruit.ini ${WRKSRC}/
# 
# SUBST_CLASSES+=		ini
# SUBST_STAGE.ini=	post-configure
# SUBST_FILES.ini=	fruit.ini
# SUBST_SED.ini=		-e 's,@LOCALBASE@,${LOCALBASE},g'
# 
# SRCS=		adapter.cpp attack.cpp board.cpp book.cpp book_make.cpp \
# 		book_merge.cpp colour.cpp engine.cpp epd.cpp fen.cpp	\
# 		game.cpp hash.cpp io.cpp line.cpp list.cpp main.cpp	\
# 		move.cpp move_do.cpp move_gen.cpp move_legal.cpp	\
# 		option.cpp parse.cpp pgn.cpp piece.cpp posix.cpp	\
# 		random.cpp san.cpp search.cpp square.cpp uci.cpp	\
# 		util.cpp
# 
# do-build:
# 	cd ${WRKSRC}/src && \
# 		${CXX} ${CXXFLAGS} ${LDFLAGS} -lm -o polyglot ${SRCS}
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/src/polyglot ${DESTDIR}${PREFIX}/bin/
# 	${INSTALL_DATA} ${WRKSRC}/readme.txt \
# 		${DESTDIR}${PREFIX}/share/doc/polyglot/
# 	${INSTALL_DATA} ${WRKSRC}/fruit.ini \
# 		${DESTDIR}${PREFIX}/share/examples/polyglot/
# 
# .include "../../mk/bsd.pkg.mk"
