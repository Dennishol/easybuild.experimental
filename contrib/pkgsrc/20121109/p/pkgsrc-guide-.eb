# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      pkgsrc-guide-.eb
# Date::      Fri Nov  9 14:37:12 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'pkgsrc'
version = 'guide-'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['pkgsrc-guide-${PKGVERSION}.tar.gz']
source_urls = ['${MASTER_SITE_LOCAL}']
homepage = 'http://www.NetBSD.org/docs/pkgsrc/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "pkgsrc-guide- description: The_pkgsrc_guide"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.39 2012/10/31 11:25:50 asau Exp $
# #
# 
# DISTNAME=		pkgsrc-guide-${PKGVERSION}
# CATEGORIES=		# empty
# MASTER_SITES=		${MASTER_SITE_LOCAL}
# DISTFILES=		htdocs-share-20111201.tar.gz
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://www.NetBSD.org/docs/pkgsrc/
# COMMENT=		The pkgsrc guide
# 
# # To regenerate pkgsrc/doc/pkgsrc.{html,txt} and
# # htdocs/docs/pkgsrc, just run "make regen".
# 
# PKGVERSION!=		date '+%Y%m%d'
# DIST_SUBDIR=		${PKGBASE}
# USE_LANGUAGES=		# empty
# MAKE_ENV+=		SED=${SED:Q}
# 
# PLIST_VARS=		ascii html pdf
# 
# DOCDIR=			${PREFIX}/share/doc/pkgsrc
# .if exists(/usr/cvs/htdocs)
# HTDOCSDIR?=		/usr/cvs/htdocs
# .endif
# HTDOCSDIR?=		${.CURDIR}/../../../htdocs
# 
# BUILD_DEFS+=		OUTPUTS
# OUTPUTS?=		lint html html-split ascii pdf
# 
# INSTALLATION_DIRS=	${DOCDIR}
# 
# .if defined(OUTPUTS)
# .  if !empty(OUTPUTS:Mascii)
# # the html is needed to build the ascii version.
# OUTPUTS+=		html
# PLIST.ascii=		yes
# .  endif
# 
# .  if !empty(OUTPUTS:Mhtml) || !empty(OUTPUTS:Mhtml-split)
# PLIST.html=		yes
# .endif
# 
# .  if !empty(OUTPUTS:Mpdf)
# PLIST.pdf=		yes
# .endif
# 
# # only override the Makefile.common default if it is explicitly set
# _GUIDE_OUTPUTS=		${OUTPUTS}
# .endif
# 
# .include "Makefile.common"
# 
# # The source files are only symlinked into the WRKSRC, so that they can
# # be easily modified, should the "lint" phase fail.
# pre-extract:
# 	${MKDIR} ${WRKSRC}
# 	${LN} -s ${FILESDIR}/* ${WRKSRC}
# 
# do-build:
# .for _output_ in ${OUTPUTS}
# 	@${ECHO} "-----> Building ${_output_} output"
# 	@cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} ${MAKE_FLAGS} ${_output_}
# .endfor
# 
# post-build:
# 	@${RM} -f ${WRKSRC}/pkgsrc.tmp.html
# 
# do-install:
# .if !empty(OUTPUTS:Mhtml) || !empty(OUTPUTS:Mhtml-split)
# 	${INSTALL_DATA} ${WRKSRC}/*.html ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKDIR}/htdocs/global.css ${DESTDIR}${DOCDIR}
# .endif
# .if !empty(OUTPUTS:Mascii)
# 	${INSTALL_DATA} ${WRKSRC}/pkgsrc.txt ${DESTDIR}${DOCDIR}
# .endif
# .if !empty(OUTPUTS:Mpdf)
# 	${INSTALL_DATA} ${WRKSRC}/pkgsrc.ps ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/pkgsrc.pdf ${DESTDIR}${DOCDIR}
# .endif
# 
# # install the single-file HTML and ascii output into the pkgsrc doc/
# # directory, for distribution with pkgsrc.
# #
# # note that this uses ${CP} and not ${INSTALL_DATA} because the files
# # stay in the development directories and have nothing to do with
# # the permissions or ownership of installed files.
# #
# install-doc: build
# 	${CP} ${WRKSRC}/pkgsrc.html ${PKGSRCDIR}/doc
# 	${CP} ${WRKSRC}/pkgsrc.txt ${PKGSRCDIR}/doc
# 
# install-htdocs: build
# 	cd ${WRKSRC} && ${CP} pkgsrc.txt pkgsrc.pdf pkgsrc.ps *.html	\
# 		${HTDOCSDIR}/docs/pkgsrc
# 
# .PHONY: regen regen-doc regen-htdocs
# regen: regen-doc regen-htdocs
# 
# regen-doc: build
# 	@${STEP_MSG} "Updating the files in pkgsrc/doc"
# 	cd .. && cvs update pkgsrc.*
# 	${MAKE} ${MAKEFLAGS} install-doc
# 	@${STEP_MSG} "Committing the files in pkgsrc/doc"
# 	cd .. && cvs commit -m "regen" pkgsrc.*
# 
# regen-htdocs: build
# 	@${STEP_MSG} "Updating the files in htdocs"
# 	cd ${HTDOCSDIR}/docs/pkgsrc && cvs update
# 	${MAKE} ${MAKEFLAGS} install-htdocs
# 	@${STEP_MSG} "Committing the files in htdocs"
# 	cd ${HTDOCSDIR}/docs/pkgsrc && cvs commit -m "regen"
# 
# do-lint:
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} lint
# 
# DETAB_PROGRAM= \
# 	if (/<programlisting>/ .. /<\/programlisting>/) {		\
# 		while (/(.*?)\t(.*)/s) {				\
# 			my $$filler = " " x (8 - (length($$1) % 8));	\
# 			$$_ = "$$1$$filler$$2";				\
# 		}							\
# 	}
# 
# # remove tabulators from the <programlisting> tags.
# # TeX does not like them.
# .PHONY: detab
# detab:
# 	cd ${FILESDIR} &&						\
# 	perl -p -i".detab.tmp" -e '${DETAB_PROGRAM}' *.xml &&		\
# 	${RM} -f *.xml.detab.tmp
# 
# # Generates a new htdocs-share-*.tar.gz archive from the current
# # contents of the htdocs directory. To make it available, it should
# # be copied to ftp.NetBSD.org/pub/pkgsrc/distfiles/LOCAL_PORTS/.
# .PHONY: htdocs-share
# htdocs-share:
# 	cd ${HTDOCSDIR}							\
# 	&& ${PAX} -wz -f ${.CURDIR}/htdocs-share-${PKGVERSION}.tar.gz	\
# 		-s ',^,htdocs/,'					\
# 		global.css share
# 
# .include "../../mk/bsd.pkg.mk"
