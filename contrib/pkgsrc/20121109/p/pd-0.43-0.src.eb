# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      pd-0.43-0.src.eb
# Date::      Fri Nov  9 14:36:52 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'pd'
version = '0.43-0.src'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['pd-0.43-0.src.tar.gz']
source_urls = ['http://sourceforge.net/projects/pure-data/files', 'download']
homepage = 'http://puredata.info/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "pd-0.43-0.src description: Real-time_graphical_programming_environment_for_audio+video"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.4 2012/10/02 23:48:04 asau Exp $
# #
# 
# DISTNAME=	pd-0.43-0.src
# PKGREVISION=	1
# PKGNAME=	${DISTNAME:S/-0.src/.0/}
# CATEGORIES=	audio
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=pure-data/}
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://puredata.info/
# COMMENT=	Real-time graphical programming environment for audio+video
# LICENSE=	modified-bsd
# 
# DEPENDS+=	tcl-[0-9]*:../../lang/tcl
# DEPENDS+=	tk-[0-9]*:../../x11/tk
# 
# WRKSRC=		${WRKDIR}/pd-0.43-0
# USE_TOOLS+=	autoconf automake gmake msgfmt pkg-config
# USE_LANGUAGES=	c c++
# GNU_CONFIGURE=	YES
# USE_LIBTOOL=	YES
# REPLACE_SH=	tcl/pd-gui.tcl
# 
# LDFLAGS.SunOS+=		-lsocket -lnsl
# 
# PKGCONFIG_OVERRIDE+=	pd.pc.in
# 
# SUBST_CLASSES+=		tclsh
# SUBST_SED.tclsh=	-e "s,/usr/bin/tclsh,${PREFIX}/bin/tclsh,"
# SUBST_MESSAGE.tclsh=	Fix path to tclsh.
# SUBST_STAGE.tclsh=	pre-build
# SUBST_FILES.tclsh=	tcl/pkg_mkIndex.tcl
# 
# SUBST_CLASSES+=		device
# SUBST_SED.device=	-e "s,/dev/dsp,${DEVOSSAUDIO},"
# SUBST_MESSAGE.device=	Fix path to audio device.
# SUBST_STAGE.device=	pre-build
# SUBST_FILES.device=	src/s_audio_oss.c
# 
# SUBST_CLASSES+=		doc
# SUBST_SED.doc=		-e "s,\\.\\./doc/,${PREFIX}/share/doc/pd/doc/,"
# SUBST_SED.doc+=		-e "s,.::sys_libdir/doc/,${PREFIX}/share/doc/pd/doc/,"
# SUBST_SED.doc+=		-e "s,menu_doc_open doc/,menu_doc_open ${PREFIX}/share/doc/pd/doc/,"
# SUBST_SED.doc+=		-e "s,/doc/5.reference,/share/doc/pd/doc/5.reference,"
# SUBST_SED.doc+=		-e "s,PD_BASEDIR/doc/,${PREFIX}/share/doc/pd/doc/,"
# SUBST_SED.doc+=		-e "s,/usr/local/bin/pd/doc/,${PREFIX}/share/doc/pd/doc/,"
# SUBST_SED.doc+=		-e "s,/usr/bin/pd/doc/,${PREFIX}/share/doc/pd/doc/,"
# SUBST_MESSAGE.doc=	Fix path to docs.
# SUBST_STAGE.doc=	pre-build
# SUBST_FILES.doc=	doc/1.manual/1.introduction.txt
# SUBST_FILES.doc+=	doc/4.data.structures/14.partialtracer.pd
# SUBST_FILES.doc+=	extra/loop~/loop~-help.pd
# SUBST_FILES.doc+=	extra/loop~/test-loop~.pd
# SUBST_FILES.doc+=	man/pd.1
# SUBST_FILES.doc+=	src/s_main.c
# SUBST_FILES.doc+=	tcl/pd_menucommands.tcl
# SUBST_FILES.doc+=	tcl/pd_menus.tcl
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${OPSYS} == "Darwin"
# EXTERNAL_EXTENSION=	d_fat
# .elif ${OPSYS} == "Linux"
# EXTERNAL_EXTENSION=	pd_linux
# .else
# EXTERNAL_EXTENSION=	# empty
# .endif
# 
# PLIST_SUBST+=		EXTERNAL_EXTENSION=${EXTERNAL_EXTENSION:Q}
# 
# pre-configure:
# 	cd ${WRKSRC} && ./autogen.sh
# 
# .include "../../mk/oss.buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
