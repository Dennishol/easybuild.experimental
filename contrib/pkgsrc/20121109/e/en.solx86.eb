# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      en.solx86.eb
# Date::      Fri Nov  9 14:37:36 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'citrix_ica-8.63.165401'
version = 'en.solx86'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['citrix_ica-10.6.115659.tar.z']
source_urls = ['#empty']
homepage = 'http://www.citrix.com/English/ss/downloads/results.asp?productID=186&c1=sot2755'
sources = ['en.linuxx86.tar.z']
source_urls = ['ftp://download2.citrix.com/FILES/en/products/Linux10/']
sources = ['en.solaris.tar.z']
homepage = 'http://www.citrix.com/English/ss/downloads/details.asp?downloadId=1859901&productId=186&c1=sot2755'
source_urls = ['manual']
sources = ['en.solx86.tar.z']
homepage = 'http://www.citrix.com/English/ss/downloads/details.asp?downloadId=1859901&productId=186&c1=sot2755'
source_urls = ['manual']

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "en.solx86 description: Citrix_R__ICA_client_for_the_Citrix_R__Presentation_Server_TM_"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.42 2012/08/14 17:07:58 asau Exp $
# 
# DISTNAME=	citrix_ica-10.6.115659
# PKGREVISION=	2
# CATEGORIES=	net
# MASTER_SITES=	# empty
# 
# MAINTAINER=	sborrill@NetBSD.org
# HOMEPAGE=	http://www.citrix.com/English/ss/downloads/results.asp?productID=186&c1=sot2755
# COMMENT=	Citrix(R) ICA client for the Citrix(R) Presentation Server(TM)
# LICENSE=	citrix_ica-license
# 
# RESTRICTED=		License prohibits redistribution
# NO_SRC_ON_FTP=		${RESTRICTED}
# NO_BIN_ON_FTP=		${RESTRICTED}
# NO_SRC_ON_CDROM=	${RESTRICTED}
# NO_BIN_ON_CDROM=	${RESTRICTED}
# 
# # "Abort Traps" indefinitely in pbulk
# NOT_FOR_PLATFORM+=	DragonFly-*-*
# 
# EMUL_PLATFORMS=		linux-i386
# EMUL_PLATFORMS+=	solaris-sparc
# EMUL_PLATFORMS+=	solaris-i386
# EMUL_MODULES.linux=	locale motif x11
# 
# PKG_DESTDIR_SUPPORT=	none
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${EMUL_PLATFORM} == "linux-i386"
# DISTNAME=	en.linuxx86
# PKGNAME=	citrix_ica-10.6.115659
# MASTER_SITES=	ftp://download2.citrix.com/FILES/en/products/Linux10/
# .elif ${EMUL_PLATFORM} == "solaris-sparc"
# DISTNAME=	en.solaris
# PKGNAME=	citrix_ica-8.63.165401
# HOMEPAGE=	http://www.citrix.com/English/ss/downloads/details.asp?downloadId=1859901&productId=186&c1=sot2755
# MASTER_SITES=	manual
# EXTRACT_SUFX=	.tar.z
# .elif ${EMUL_PLATFORM} == "solaris-i386"
# DISTNAME=	en.solx86
# PKGNAME=	citrix_ica-8.63.165401
# HOMEPAGE=	http://www.citrix.com/English/ss/downloads/details.asp?downloadId=1859901&productId=186&c1=sot2755
# MASTER_SITES=	manual
# EXTRACT_SUFX=	.tar.z
# .endif
# 
# WRKSRC=		${WRKDIR}
# DIST_SUBDIR=	${PKGNAME_NOREV}
# 
# CDIR=		${PREFIX}/lib/ICAClient
# USE_TOOLS+=	patch
# 
# INSTALLATION_DIRS=	bin
# 
# .if ${MASTER_SITES} == "manual"
# FETCH_MESSAGE=  "Please fetch ${DISTFILES} manually from"
# FETCH_MESSAGE+= "${HOMEPAGE}"
# FETCH_MESSAGE+= "and put into"
# FETCH_MESSAGE+= "${DISTDIR}/${PKGNAME_NOREV}"
# .endif
# 
# do-patch:
# 	(cd ${WRKSRC}; \
# 	for f in ${PATCHDIR}/patch-${MACHINE_ARCH}-*;do \
# 	${PATCH} ${PATCH_ARGS} <$$f >/dev/null 2>&1 || ${TRUE}; \
# 	done)
# 
# do-build:
# 	${SED} s%DESTINATION%${CDIR}% ${FILESDIR}/response.${MACHINE_ARCH} \
# 		> ${WRKSRC}/response
# 	${SED} s%DESTINATION%${CDIR}% ${FILESDIR}/wfcmgr \
# 		> ${WRKSRC}/wfcmgr.x
# 	${SED} s%DESTINATION%${CDIR}% ${FILESDIR}/wfica \
# 		> ${WRKSRC}/wfica.x
# 
# pre-install:
# 	${RUN} if [ `${ID} -u` != 0 ]; then				\
# 		${ECHO} "";                                             \
# 		${ECHO} "*** ${PKGNAME} must be installed with"		\
# 			"superuser privileges ***";			\
# 		${ECHO} "";                                             \
# 		${FALSE};						\
# 	fi
# 	${RUN} if [ -d "${CDIR}" ]; then				\
# 		${ECHO} "";                                             \
# 		${ECHO} "*** Please remove ${CDIR} and try again ***";  \
# 		${ECHO} "";                                             \
# 		${FALSE};                                               \
# 	fi
# 
# do-install:
# 	cd ${WRKSRC} && ./setupwfc < response
# 	${INSTALL_SCRIPT} ${WRKSRC}/wfcmgr.x ${PREFIX}/bin/wfcmgr
# 	${INSTALL_SCRIPT} ${WRKSRC}/wfica.x ${PREFIX}/bin/wfica
# 	${SED} "s#/usr/lib/ICAClient#${CDIR}#g" \
# 		< ${CDIR}/util/icalicense.sh > ${CDIR}/util/icalicense.sh.fixed
# 	${MV} ${CDIR}/util/icalicense.sh.fixed ${CDIR}/util/icalicense.sh
# 
# .include "../../mk/bsd.pkg.mk"
