# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      emulator_src_.eb
# Date::      Fri Nov  9 14:37:14 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'palmosemulator-'
version = 'emulator_src_'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['emulator_src_${POSE_VERSION}.tar.gz']
version = '${POSE_VERSION}'
name = 'palmosemulator'
source_urls = ['http://www.palmos.com/dev/tools/emulator/sources/']
homepage = 'http://www.palmos.com/dev/tools/emulator/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "emulator_src_ description: Palm_OS_Emulator"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.37 2012/10/03 21:56:01 wiz Exp $
# #
# 
# DISTNAME=	emulator_src_${POSE_VERSION}
# PKGNAME=	palmosemulator-${POSE_VERSION}
# PKGREVISION=	13
# CATEGORIES=	emulators x11
# MASTER_SITES=	http://www.palmos.com/dev/tools/emulator/sources/
# DISTFILES=	${DISTNAME}${EXTRACT_SUFX} \
# 		emulator-skins-19.tar.gz
# 
# MAINTAINER=	dsainty@NetBSD.org
# HOMEPAGE=	http://www.palmos.com/dev/tools/emulator/
# COMMENT=	Palm OS Emulator
# #LICENSE=       GPL
# 
# NOT_FOR_PLATFORM=	${LP64PLATFORMS}
# 
# POSE_VERSION=	3.5
# 
# DIST_SUBDIR=	${PKGBASE}
# 
# # Source is under sources/ directory, skins are not...
# SITES.emulator-skins-19.tar.gz=	http://www.palmos.com/dev/tools/emulator/
# 
# WRKSRC=		${WRKDIR}/Emulator_Src_${POSE_VERSION}
# POSE_BUILD_DIR=	${WRKSRC}/BuildUnix
# POSE_SHARE_DIR=	${PREFIX}/share/palmosemulator
# POSE_SKINS_DIR=	${POSE_SHARE_DIR}/skins
# WRKSRC_SKINS=	${WRKDIR}/Skins_v1.9
# CPPFLAGS+=	-DFLTK_1_0_COMPAT
# 
# CONFIGURE_DIRS=	${POSE_BUILD_DIR}
# BUILD_DIRS=	${POSE_BUILD_DIR}
# 
# USE_LANGUAGES=	c c++
# USE_TOOLS+=	gmake perl:run
# 
# GNU_CONFIGURE=	YES
# CONFIGURE_ARGS+=	--with-fltk=${BUILDLINK_PREFIX.fltk}
# CONFIGURE_ENV+=		PACKAGE_SKINS_DIR=${POSE_SKINS_DIR:Q}
# 
# REPLACE_PERL=	Scripting/Perl/*.pl
# 
# INSTALLATION_DIRS=	bin ${POSE_SHARE_DIR}/docs ${POSE_SHARE_DIR}/scripting
# INSTALLATION_DIRS+=	${POSE_SHARE_DIR}/prc ${POSE_SKINS_DIR}
# 
# do-install:
# 	${INSTALL_PROGRAM} ${POSE_BUILD_DIR}/pose ${DESTDIR}${PREFIX}/bin/pose
# 	${FIND} ${WRKSRC}/Docs -type f -print | \
# 		while read i; do \
# 			${INSTALL_DATA} "$$i" ${DESTDIR}${POSE_SHARE_DIR}/docs; \
# 		done
# 	for lang in Python Perl; do \
# 		ddir=${DESTDIR}${POSE_SHARE_DIR}/scripting/$$lang; \
# 		${INSTALL_SCRIPT_DIR} "$$ddir"; \
# 		${FIND} "${WRKSRC}/Scripting/$$lang" -type f -print | \
# 		while read i; do \
# 			case "$$i" in \
# 				*.pl) ${INSTALL_SCRIPT} "$$i" "$$ddir";; \
# 				*) ${INSTALL_DATA} "$$i" "$$ddir";; \
# 			esac; \
# 		done; \
# 	done
# 	${INSTALL_DATA} ${WRKSRC_SKINS}/ReadMe.txt ${DESTDIR}${POSE_SHARE_DIR}/docs/ReadMe_skins.txt
# 	${INSTALL_DATA} ${WRKSRC}/ROMTransfer/Source/ROM_Transfer.prc ${DESTDIR}${POSE_SHARE_DIR}/prc
# 	${FIND} ${WRKSRC_SKINS} \( -name "*.skin" -o -name "*.jpg" \) -print |\
# 		while read i; do \
# 			${INSTALL_DATA} "$$i" ${DESTDIR}${POSE_SKINS_DIR}; \
# 		done
# 
# .include "../../mk/jpeg.buildlink3.mk"
# .include "../../x11/fltk/buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# 
# .include "../../mk/bsd.pkg.mk"
