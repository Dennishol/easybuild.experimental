# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      nocol-4.3.1.eb
# Date::      Fri Nov  9 14:37:38 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'nocol'
version = '4.3.1'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['nocol-4.3.1.tar.gz']
source_urls = ['http://www.netplex-tech.com/software/nocol/downloads/']
homepage = 'http://www.netplex-tech.com/software/nocol/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "nocol-4.3.1 description: Extensible_network_and_system_monitoring_utility"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.39 2012/10/23 17:18:42 asau Exp $
# #
# 
# DISTNAME=		nocol-4.3.1
# PKGREVISION=		8
# CATEGORIES=		net
# MASTER_SITES=	http://www.netplex-tech.com/software/nocol/downloads/
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://www.netplex-tech.com/software/nocol/
# COMMENT=		Extensible network and system monitoring utility
# 
# MAKE_JOBS_SAFE=		no
# HAS_CONFIGURE=		yes
# CONFIGURE_SCRIPT=	./Configure
# CONFIGURE_ARGS+=	< ${WRKSRC}/answers
# 
# USE_TOOLS+=		perl:run mkdirhier yacc
# USE_LIBTOOL=		yes
# 
# INSTALL_TARGET=		install root
# 
# OWN_DIRS+=		/var/run/msgs
# OWN_DIRS+=		/var/run/data
# 
# DEPENDS+=		tk-Tix-[0-9]*:../../x11/tk-Tix
# 
# .include "../../x11/tk/interpreter.mk"
# 
# REPLACE_PERL=		perlnocol/hostmon-osclients/hostmon-client*
# REPLACE_WISH=		tknocol/tkNocol.tix
# 
# INSTALLATION_DIRS=	share/nocol/gifs
# INSTALL_MAKE_FLAGS+=	ROOTDIR=${DESTDIR}${PREFIX} \
# 			MANDIR=${DESTDIR}${PREFIX}/${PKGMANDIR}/mann \
# 			PIDDIR=${DESTDIR}/var/run \
# 			DATADIR=${DESTDIR}/var/run/data \
# 			MSGSDIR=${DESTDIR}/var/run/msgs
# 
# post-patch:
# 	@(hostname=`/bin/hostname`;					\
# 	dir="";								\
# 	for d in /usr/bin /usr/sbin `${ECHO} $$PATH | ${TR} ':' ' '`; do \
# 		if [ -x $$d/host ]; then				\
# 			dir=$$d;					\
# 			break;						\
# 		fi							\
# 	done;								\
# 	if [ "X$$dir" = "X" ]; then					\
# 		${ECHO} "host program not found";			\
# 		exit 1;							\
# 	fi;								\
# 	fqdn=`$$dir/host $$hostname | ${AWK} '{ print $$1; exit }'`;	\
# 	${SED} -e 's|@prefix@|${PREFIX}|g' -e "s|@FQDN@|$$fqdn|g" 	\
# 			${FILESDIR}/answers > ${WRKSRC}/answers)
# 
# pre-configure:
# 	@${CP} ${PKGSRCDIR}/mk/gnu-config/config.guess ${WRKSRC}/cmu-snmp/snmp
# 	@${CP} ${PKGSRCDIR}/mk/gnu-config/config.guess ${WRKSRC}/cmu-snmp/snmpapps
# 	@${CP} ${PKGSRCDIR}/mk/gnu-config/config.sub ${WRKSRC}/cmu-snmp/snmp
# 	@${CP} ${PKGSRCDIR}/mk/gnu-config/config.sub ${WRKSRC}/cmu-snmp/snmpapps
# 
# post-install:
# 	for f in critical.wav error.wav warning.wav ; do		\
# 	    ${INSTALL_DATA} ${WRKSRC}/webnocol/$$f ${DESTDIR}${PREFIX}/share/nocol; \
# 	done
# 
# 	for f in bluesq.gif critical.jpg empty.gif error.jpg		\
# 		greensq.gif help.jpg info.jpg redsq.gif warning.jpg	\
# 		yellowsq.gif ; do					\
# 	    ${INSTALL_DATA} ${WRKSRC}/webnocol/gifs/$$f			\
# 			    ${DESTDIR}${PREFIX}/share/nocol/gifs;	\
# 	done
# 
# .include "../../mk/resolv.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
