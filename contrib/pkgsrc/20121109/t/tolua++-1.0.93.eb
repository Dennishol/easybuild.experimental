# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      tolua++-1.0.93.eb
# Date::      Fri Nov  9 14:37:12 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'tolua++'
version = '1.0.93'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['tolua++-1.0.93.tar.bz2']
source_urls = ['http://www.codenix.com/~tolua/']
homepage = 'http://www.codenix.com/~tolua/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "tolua++-1.0.93 description: Tool_to_integrate_C/C++_code_with_Lua"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.2 2012/10/31 11:19:51 asau Exp $
# #
# 
# DISTNAME=	tolua++-1.0.93
# CATEGORIES=	devel
# MASTER_SITES=	http://www.codenix.com/~tolua/
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	imil@NetBSD.org
# HOMEPAGE=	http://www.codenix.com/~tolua/
# COMMENT=	Tool to integrate C/C++ code with Lua
# LICENSE=	mit
# 
# USE_LANGUAGES=	c c++
# 
# BUILD_DEPENDS+=	scons-[0-9]*:../../devel/scons
# 
# INSTALLATION_DIRS+=	bin lib include share/doc/tolua++
# 
# SCONS=          ${PREFIX}/bin/scons
# SCONS_ARGS=	prefix=${PREFIX} SONAME="libtolua++.so.${LUA_VERSION}"
# 
# SUBST_CLASSES+=		prefix
# SUBST_STAGE.prefix=	post-patch
# SUBST_FILES.prefix=	custom.py
# SUBST_SED.prefix=	-e 's|@PREFIX@|${PREFIX}|'
# 
# PLIST_SUBST+=		LUA_VERSION=${LUA_VERSION}
# 
# pre-patch:
# 	${CP} files/custom.py ${WRKSRC}
# 
# do-build:
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${SCONS} ${SCONS_ARGS}
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/bin/tolua++ ${DESTDIR}${PREFIX}/bin
# 	${INSTALL_LIB} ${WRKSRC}/lib/libtolua++.a ${DESTDIR}${PREFIX}/lib
# 	${INSTALL_LIB} ${WRKSRC}/lib/libtolua++.so 			\
# 		${DESTDIR}${PREFIX}/lib/libtolua++.so.${LUA_VERSION}
# 	${LN} -sf ${DESTDIR}${PREFIX}/lib/libtolua++.so.${LUA_VERSION}	\
# 		${DESTDIR}${PREFIX}/lib/libtolua++.so
# 	${INSTALL_DATA} ${WRKSRC}/include/tolua++.h ${DESTDIR}${PREFIX}/include
# 	${INSTALL_DATA} ${WRKSRC}/README* ${DESTDIR}${PREFIX}/share/doc/tolua++
# 	${INSTALL_DATA} ${WRKSRC}/doc/tolua++.html			\
# 		${DESTDIR}${PREFIX}/share/doc/tolua++
# 
# .include "../../lang/lua/module.mk"
# .include "../../mk/bsd.pkg.mk"
