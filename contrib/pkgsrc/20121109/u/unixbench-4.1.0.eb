# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      unixbench-4.1.0.eb
# Date::      Fri Nov  9 14:36:53 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'unixbench'
version = '4.1.0'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['unixbench-4.1.0.tgz']
source_urls = ['http://www.tux.org/pub/tux/benchmarks/System/unixbench/']

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "unixbench-4.1.0 description: BYTE_Magazine_s_Public_Domain_benchmark_for_UNIX"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.24 2012/10/03 21:53:58 wiz Exp $
# 
# DISTNAME=		unixbench-4.1.0
# PKGNAME=		${DISTNAME:S/unix/byte/}
# PKGREVISION=		4
# CATEGORIES=		benchmarks
# MASTER_SITES=		http://www.tux.org/pub/tux/benchmarks/System/unixbench/
# EXTRACT_SUFX=		.tgz
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# COMMENT=		BYTE Magazine's Public Domain benchmark for UNIX
# 
# PKG_INSTALLATION_TYPES=	overwrite pkgviews
# 
# BENCHMARK_ENV+=		BINDIR=${WRKSRC}/pgms
# BENCHMARK_ENV+=		SCRPDIR=${WRKSRC}/pgms
# BENCHMARK_ENV+=		RESULTDIR=${WRKSRC}/results
# BENCHMARK_ENV+=		BENCHDIR=${WRKSRC}/testdir
# BENCHMARK_ENV+=		TESTDIR=${WRKSRC}/tmp
# 
# OWN_DIRS=		/var/bytebench
# 
# INSTALLATION_DIRS=	bin
# 
# REPLACE_PERL+=		pgms/perlbench
# USE_TOOLS+=		perl:run
# 
# MAKE_JOBS_SAFE=		no
# 
# post-extract:
# 	${RM} -f ${WRKSRC}/pgms/select
# 
# post-patch:
# 	cd ${WRKSRC}; ${SED} -e "s|@PREFIX@|${PREFIX}|g" Run > run-byte
# 	${CHMOD} +x ${WRKSRC}/run-byte
# 
# pre-install:
# 	${FIND} ${WRKSRC} -name "*.orig" -print | ${XARGS} ${RM} -f
# 
# do-install:
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/libexec/bytebench
# 	${INSTALL_SCRIPT} ${WRKSRC}/pgms/* ${DESTDIR}${PREFIX}/libexec/bytebench
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/bytebench
# 	${INSTALL_DATA} ${WRKSRC}/testdir/* ${DESTDIR}${PREFIX}/share/bytebench
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/doc/bytebench
# 	${INSTALL_DATA} ${WRKSRC}/README ${DESTDIR}${PREFIX}/share/doc/bytebench
# 	${INSTALL_SCRIPT} ${WRKSRC}/run-byte ${DESTDIR}${PREFIX}/bin
# 
# benchmark:
# 	@if [ `${ID} -u` != 0 ]; then					\
# 		${ECHO} "This benchmark must be run as root!";		\
# 		exit 1;							\
# 	fi
# 	@( cd ${WRKSRC}; ${SETENV} ${BENCHMARK_ENV} ./run-byte		\
# 		| tee bytebench.out )
# 
# results:
# 	@${MKDIR} /tmp/benches/`domainname`
# 	-@${CP} ${WRKSRC}/bytebench.out /tmp/benches/`domainname`/bytebench.`uname`-`uname -m`-`uname -r`.`hostname`
# 
# .include "../../mk/bsd.pkg.mk"
