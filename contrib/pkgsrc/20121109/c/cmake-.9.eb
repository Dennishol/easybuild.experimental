# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      cmake-.9.eb
# Date::      Fri Nov  9 14:37:00 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'cmake'
version = '.9'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['cmake-${CMAKE_API}.9.tar.gz']
source_urls = ['http://www.cmake.org/files/v${CMAKE_API}/']
homepage = 'http://www.cmake.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "cmake-.9 description: Cross_platform_make"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.65 2012/10/31 11:16:46 asau Exp $
# 
# DISTNAME=	cmake-${CMAKE_API}.9
# CATEGORIES=	devel
# MASTER_SITES=	http://www.cmake.org/files/v${CMAKE_API}/
# 
# CMAKE_API=	2.8
# 
# MAINTAINER=	wiz@NetBSD.org
# HOMEPAGE=	http://www.cmake.org/
# COMMENT=	Cross platform make
# LICENSE=	modified-bsd
# 
# USE_TOOLS+=		gmake
# USE_LANGUAGES=		c c++
# # wants wsyncup and wcursyncup
# USE_NCURSES=		yes
# HAS_CONFIGURE=		yes
# CONFIGURE_SCRIPT=	bootstrap
# 
# BUILD_TARGET=		default_target
# 
# CONFIGURE_HAS_MANDIR=	no
# CONFIGURE_ARGS+=	--mandir=/${PKGMANDIR}
# CONFIGURE_ARGS+=	--docdir=/share/doc/cmake-${CMAKE_API}
# CONFIGURE_ARGS+=	--prefix=${PREFIX}
# CONFIGURE_ARGS+=	--system-libs
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if !empty(MAKE_JOBS)
# CONFIGURE_ARGS+=	--parallel=${MAKE_JOBS:Q}
# .endif
# 
# PLIST_SUBST+=		CMAKE_API=${CMAKE_API}
# 
# # for Source/cmDependsJavaParser.cxx
# UNLIMIT_RESOURCES=	datasize
# 
# # as of 2.4.6, x11 and fortran tests fail in pkgsrc
# TEST_TARGET=		test
# 
# SUBST_CLASSES+=		cmake
# SUBST_STAGE.cmake=	pre-configure
# SUBST_MESSAGE.cmake=	Fixing LOCALBASE and X11 paths.
# SUBST_FILES.cmake+=	Modules/FindX11.cmake
# SUBST_FILES.cmake+=	Modules/Platform/UnixPaths.cmake
# SUBST_VARS.cmake=	LOCALBASE X11BASE
# 
# SUBST_CLASSES+=		flags
# SUBST_STAGE.flags=	pre-configure
# SUBST_MESSAGE.flags=	Fixing compiler flags.
# SUBST_FILES.flags=	Modules/Compiler/*.cmake
# SUBST_SED.flags=	-e 's,-O.,,'
# 
# pre-configure:
# 	${RM} ${WRKSRC}/Modules/*.orig ${WRKSRC}/Modules/Platform/*.orig
# 
# BUILDLINK_API_DEPENDS.libarchive+=	libarchive>=2.8.4
# .include "../../archivers/libarchive/buildlink3.mk"
# .include "../../devel/ncurses/buildlink3.mk"
# .include "../../devel/zlib/buildlink3.mk"
# .include "../../textproc/expat/buildlink3.mk"
# .include "../../textproc/xmlrpc-c/buildlink3.mk"
# .include "../../www/curl/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
