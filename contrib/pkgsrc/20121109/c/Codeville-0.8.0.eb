# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      Codeville-0.8.0.eb
# Date::      Fri Nov  9 14:37:00 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'codeville-0.8.0'
version = '0.8.0'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['Codeville-0.8.0.tar.gz']
version = '0.8.0'
name = 'codeville'
source_urls = ['http://codeville.org/download/']
homepage = 'http://codeville.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "Codeville-0.8.0 description: Distributed_revision_control_system"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.25 2012/10/31 11:16:47 asau Exp $
# 
# DISTNAME=	Codeville-0.8.0
# PKGNAME=	codeville-0.8.0
# PKGREVISION=	6
# CATEGORIES=	devel scm
# MASTER_SITES=	http://codeville.org/download/
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://codeville.org/
# COMMENT=	Distributed revision control system
# LICENSE=	modified-bsd
# 
# REPLACE_PYTHON=		*.py
# REPLACE_PYTHON+=	*/*.py
# 
# BUILD_DEFS+=		VARBASE
# BUILD_DEFS_EFFECTS+=	CODEVILLE_DATADIR
# CODEVILLE_DATADIR?=	${VARBASE}/db/cdv
# 
# # XXX Could create a user for the server, rc script, server directory hier, etc.
# 
# CONF_FILES=		${EGDIR}/cdvserver.conf  \
# 			${PKG_SYSCONFDIR}/cdvserver.conf
# 
# EGDIR=			${PREFIX}/share/examples/${PKGBASE}
# 
# SUBST_CLASSES+=		paths
# SUBST_FILES.paths=	cdvserver.conf.sample cdvpasswd cdvserver
# SUBST_MESSAGE.paths=	performing pathname substitutions
# SUBST_STAGE.paths=	pre-configure
# SUBST_VARS.paths=	CODEVILLE_DATADIR VARBASE PKG_SYSCONFDIR
# 
# post-install:
# 	${INSTALL_DATA_DIR} ${DESTDIR}${EGDIR}
# 	${INSTALL_DATA} ${WRKSRC}/cdvserver.conf.sample \
# 		${DESTDIR}${EGDIR}/cdvserver.conf
# 
# .include "../../lang/python/application.mk"
# .include "../../lang/python/distutils.mk"
# .include "../../databases/py-bsddb3/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
