# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      ccid-1.3.11.eb
# Date::      Fri Nov  9 14:37:48 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'ccid'
version = '1.3.11'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['ccid-1.3.11.tar.bz2']
source_urls = ['http://alioth.debian.org/frs/download.php/3080/']
homepage = 'http://pcsclite.alioth.debian.org/ccid.html'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "ccid-1.3.11 description: Middleware_to_access_a_smart_card_using_SCard_API__PC/SC_"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.8 2012/10/23 18:16:22 asau Exp $
# #
# 
# DISTNAME=	ccid-1.3.11
# PKGREVISION=	1
# CATEGORIES=	security
# MASTER_SITES=	http://alioth.debian.org/frs/download.php/3080/
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	shannonjr@NetBSD.org
# HOMEPAGE=	http://pcsclite.alioth.debian.org/ccid.html
# COMMENT=	Middleware to access a smart card using SCard API (PC/SC)
# 
# .include "../../mk/bsd.prefs.mk"
# 
# GNU_CONFIGURE=	yes
# USE_LIBTOOL=	yes
# USE_TOOLS+=	pkg-config
# USE_TOOLS+=	autoconf automake aclocal autoheader
# USE_TOOLS+=	flex perl
# USE_LANGUAGES=	c c++
# 
# CONFIGURE_ARGS+=        --sharedstatedir=${VARBASE:Q}
# CONFIGURE_ARGS+=        --sysconfdir=${PKG_SYSCONFDIR:Q}
# 
# SUBST_CLASSES+=		perl
# SUBST_STAGE.perl=	post-patch
# SUBST_FILES.perl=	src/convert_version.pl src/create_Info_plist.pl
# SUBST_SED.perl=		-e 's,/usr/bin/perl,${PERL5},'
# 
# pre-configure:
# 	cd ${WRKSRC} && ${SH} bootstrap
# 
# post-install:
# 	 ${INSTALL_DATA} ${WRKSRC}/README ${DESTDIR}${PREFIX}/share/doc/ccid/README
# 
# .include "../../security/pcsc-lite/buildlink3.mk"
# .include "../../devel/libusb/buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
