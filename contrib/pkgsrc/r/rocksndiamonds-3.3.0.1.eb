# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      rocksndiamonds-3.3.0.1.eb
# Date::      Fri Nov  9 14:37:19 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'rocksndiamonds'
version = '3.3.0.1'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['rocksndiamonds-3.3.0.1.tar.gz']
source_urls = ['http://www.artsoft.org/RELEASES/unix/rocksndiamonds/']
homepage = 'http://www.artsoft.org/rocksndiamonds/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "rocksndiamonds-3.3.0.1 description: Game_like_Boulder_Dash,_Emerald_Mine,_or_Sokoban"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.48 2012/10/06 11:54:53 asau Exp $
# 
# DISTNAME=	rocksndiamonds-3.3.0.1
# PKGREVISION=	3
# CATEGORIES=	games x11
# MASTER_SITES=	http://www.artsoft.org/RELEASES/unix/rocksndiamonds/
# 
# MAINTAINER=	heinz@NetBSD.org
# HOMEPAGE=	http://www.artsoft.org/rocksndiamonds/
# COMMENT=	Game like Boulder Dash, Emerald Mine, or Sokoban
# 
# USE_TOOLS+=		gmake
# 
# INSTALLATION_DIRS+=	bin ${PKGMANDIR}/man6
# 
# BUILD_DEFS+=	VARBASE SCORE_PATH
# 
# SHARESUBDIR=		share/rocksndiamonds
# SHAREDIR=		${PREFIX}/${SHARESUBDIR}
# 
# SCORE_PATH=	${VARBASE}/games/rocksndiamonds
# 
# REQD_DIRS+=		${SHARESUBDIR}
# 
# SETGIDGAME=		yes
# 
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} 750
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores/classic_boulderdash
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores/classic_emerald_mine
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores/classic_sokoban
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores/classic_supaplex
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores/rnd_tutorial_aaron_davidson
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# OWN_DIRS_PERMS+=	${SCORE_PATH:Q}/scores/rnd_tutorial_niko_boehm
# OWN_DIRS_PERMS+=	${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE}
# 
# SPECIAL_PERMS=		bin/rocksndiamonds ${SETGID_GAMES_PERMS}
# 
# PLIST_SRC=	PLIST ${WRKDIR}/PLIST.F
# 
# .if ( ${MACHINE} == "i386" || ${MACHINE} == "prep" || ${MACHINE} == "cats" || \
#       ${MACHINE} == "shark" )
# MAKE_FLAGS+=	JOYSTICK=-DHAVE_JOYSTICK
# .endif
# 
# MAKE_FLAGS+=	CC=${CC:Q}
# MAKE_FLAGS+=	MAKE=${MAKE_PROGRAM:Q}
# MAKE_FLAGS+=	X11_PATH=${X11BASE}
# MAKE_FLAGS+=	RO_GAME_DIR=${PREFIX}/share/rocksndiamonds
# MAKE_FLAGS+=	RW_GAME_DIR=${SCORE_PATH:Q}
# MAKE_FLAGS+=	X11_INCL=
# MAKE_FLAGS+=	X11_LIBS=-lX11
# 
# .include "options.mk"
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/rocksndiamonds ${DESTDIR}${PREFIX}/bin/
# 	${INSTALL_MAN} ${WRKSRC}/rocksndiamonds.1 \
# 		${DESTDIR}${PREFIX}/${PKGMANDIR}/man6/rocksndiamonds.6
# 	${INSTALL_DATA_DIR} ${DESTDIR}${SHAREDIR}
# 	# auto-generated PLIST
# 	rm -f ${WRKDIR}/PLIST.F
# 	set -e;								\
# 	cd ${WRKSRC} &&							\
# 	for d in sounds graphics levels music; do 			\
# 		find "$${d}" -type d -print | while read subdir; do	\
# 			${INSTALL_DATA_DIR}				\
# 				${DESTDIR}${SHAREDIR}/"$${subdir}";	\
# 		done ;							\
# 		find "$${d}" -type f -print | while read f; do		\
# 			${INSTALL_DATA} "$${f}"				\
# 				${DESTDIR}${SHAREDIR}/"$${f}";		\
# 			${ECHO} ${SHARESUBDIR}/"$${f}" >> ${WRKDIR}/PLIST.F;\
# 		done ;							\
# 	done
# 
# .include "../../mk/bsd.pkg.mk"
