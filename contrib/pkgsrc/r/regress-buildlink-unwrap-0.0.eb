# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      regress-buildlink-unwrap-0.0.eb
# Date::      Fri Nov  9 14:37:48 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'regress'
version = 'buildlink-unwrap-0.0'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['regress-buildlink-unwrap-0.0.tar.gz']
source_urls = ['#empty']

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "regress-buildlink-unwrap-0.0 description: test_buildlink_unwrapping_of_text_files"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.8 2010/03/21 16:29:43 wiz Exp $
# 
# DISTNAME=	regress-buildlink-unwrap-0.0
# CATEGORIES=	regress
# MASTER_SITES=	# empty
# DISTFILES=	# empty
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# COMMENT=	test buildlink unwrapping of text files
# 
# .include "../../mk/bsd.prefs.mk"
# 
# WRKSRC=		${WRKDIR}
# NO_CONFIGURE=	yes
# NO_INSTALL=	yes
# 
# # Remove GCC optimization options.
# BUILDLINK_TRANSFORM+=	rm:-O[0-9]*
# 
# # Convert "-lreadline" into "-ledit -ltermcap -lm".
# BUILDLINK_TRANSFORM+=	l:readline:edit:termcap:m
# 
# REGRESS_UNWRAP_SED=							\
# 	-e "s|@PREFIX@|${PREFIX}|g"					\
# 	-e "s|@COMPILER_RPATH_FLAG@|${COMPILER_RPATH_FLAG}|g"
# 
# do-build:
# 	@${FIND} ${TEST_DIR} -name "*.sh" -print |			\
# 	while read file; do						\
# 		dest=`${BASENAME} $$file .sh`;				\
# 		${SED} ${REGRESS_UNWRAP_SED} $$file > ${WRKSRC}/$$dest;	\
# 		${CHMOD} +x ${WRKSRC}/$$dest;				\
# 	done
# 
# .PHONY: regress do-regress
# 
# regress: build do-regress
# 
# FAILED_TESTS=	${WRKDIR}/failed
# PASSED_TESTS=	${WRKDIR}/passed
# 
# do-regress:
# 	@if [ -f ${FAILED_TESTS} ]; then				\
# 		${ECHO} "FAILED:";					\
# 		${CAT} ${FAILED_TESTS} | while read test; do		\
# 			${ECHO} "       $$test";			\
# 		done;							\
# 		exit 1;							\
# 	else								\
# 		${DO_NADA};						\
# 	fi
# 
# report-failed:
# 	@if [ -f "${FAILED_TESTS}" ]; then				\
# 		${ECHO} `${CAT} ${FAILED_TESTS} | ${WC} -l`;		\
# 	else								\
# 		${ECHO} "0";						\
# 	fi
# 
# report-passed:
# 	@if [ -f "${PASSED_TESTS}" ]; then				\
# 		${ECHO} `${CAT} ${PASSED_TESTS} | ${WC} -l`;		\
# 	else								\
# 		${ECHO} "0";						\
# 	fi
# 
# TEST_RESULT=	PATH="${WRKSRC}:${PATH}";				\
# 		runtest=`$$test`;					\
# 		${ECHO} "(${.TARGET}) ran:      $$test";		\
# 		${ECHO} "(${.TARGET}) got:      $$runtest";		\
# 		${ECHO} "(${.TARGET}) expected: $$expected";		\
# 		case $$runtest in					\
# 		$$expected)						\
# 			${ECHO} "(${.TARGET}) result:   PASS";		\
# 			${ECHO} "${.TARGET}" >> ${PASSED_TESTS};	\
# 			;;						\
# 		*)							\
# 			${ECHO} "(${.TARGET}) result:   FAIL";		\
# 			${ECHO} "${.TARGET}" >> ${FAILED_TESTS};	\
# 			;;						\
# 		esac
# 
# TEST_DIR=	${.CURDIR}/tests
# 
# # If RUNTESTS is defined, then just run those tests, otherwise run them all.
# .if defined(RUNTESTS)
# TEST_MAKEFILES=	${RUNTESTS:S/^/${TEST_DIR}\//:S/$/.mk/}
# .  for _mkfile_ in ${TEST_MAKEFILES}
# .    if exists(${_mkfile_})
# .      include "${_mkfile_}"
# .    endif
# .  endfor
# .else
# .  include "tests/unwrap-config.mk"
# .endif
# 
# .include "../../mk/bsd.pkg.mk"
