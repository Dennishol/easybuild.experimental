# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      root_v5.26.00b.source.eb
# Date::      Fri Nov  9 14:37:34 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'root-5.26'
version = 'root_v5.26.00b.source'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['root_v5.26.00b.source.tar.gz']
version = '5.26'
name = 'root'
source_urls = ['ftp://root.cern.ch/root/']
homepage = 'http://root.cern.ch/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "root_v5.26.00b.source description: OO_framework_for_data_analysis_and_visualisation"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.46 2012/10/08 09:57:36 asau Exp $
# 
# DISTNAME=		root_v5.26.00b.source
# PKGNAME=		root-5.26
# PKGREVISION=		6
# CATEGORIES=		misc
# MASTER_SITES=		ftp://root.cern.ch/root/
# 
# MAINTAINER=		drochner@NetBSD.org
# HOMEPAGE=		http://root.cern.ch/
# COMMENT=		OO framework for data analysis and visualisation
# 
# WRKSRC=			${WRKDIR}/root
# USE_TOOLS+=		gmake
# USE_LANGUAGES=		c c++ #fortran f2c lacks LOC()
# .include "../../lang/gcc3-f77/buildlink3.mk"
# 
# CHECK_PORTABILITY_SKIP=	build/win/*.sh cint/tool/INSTALLBIN
# BUILD_TARGET=
# 
# .if (${MACHINE_ARCH} == "arm")
# BROKEN=	Compilation stops due to internal compiler error
# .endif
# 
# INSTALLATION_DIRS=	bin
# 
# HAS_CONFIGURE=		yes
# CONFIGURE_ARGS+=	${LOWER_OPSYS}
# CONFIGURE_ARGS+=	--prefix=${PREFIX} --mandir=${PREFIX}/${PKGMANDIR}/man1
# CONFIGURE_ENV+=		LOCALBASE=${LOCALBASE} X11BASE=${X11BASE}
# CONFIGURE_ARGS+=	--enable-soversion
# CONFIGURE_ARGS+=	--disable-builtin-pcre
# CONFIGURE_ARGS+=	--disable-builtin-freetype
# # clarens needs xmlrpc-c, the pkgsrc version is incompatible
# CONFIGURE_ARGS+=	--disable-clarens
# 
# CONFIGURE_ARGS+=	--with-x11-libdir=${BUILDLINK_PREFIX.libX11}/lib
# CONFIGURE_ARGS+=	--with-xpm-libdir=${BUILDLINK_PREFIX.libXpm}/lib
# 
# # option, requires libxml2
# CONFIGURE_ARGS+=	--disable-xml
# #.include "../../textproc/libxml2/buildlink3.mk"
# 
# # might be optional
# #CONFIGURE_ARGS+=	--disable-asimage
# .include "../../graphics/png/buildlink3.mk"
# .include "../../mk/jpeg.buildlink3.mk"
# .include "../../mk/giflib.buildlink3.mk"
# .include "../../graphics/tiff/buildlink3.mk"
# 
# .include "../../math/gsl/buildlink3.mk"
# 
# post-extract:
# 	${CP} ${FILESDIR}/Makefile.netbsd ${WRKSRC}/config
# 
# .include "../../graphics/MesaLib/buildlink3.mk"
# .include "../../graphics/glu/buildlink3.mk"
# .include "../../graphics/freetype2/buildlink3.mk"
# .include "../../devel/pcre/buildlink3.mk"
# .include "../../security/openssl/buildlink3.mk"
# .include "../../x11/libXpm/buildlink3.mk"
# .include "../../x11/libXmu/buildlink3.mk"
# .include "../../x11/libXi/buildlink3.mk"
# .include "../../x11/libXft/buildlink3.mk"
# .include "../../x11/libX11/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
