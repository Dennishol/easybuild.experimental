# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      xemacs-21.5.27.eb
# Date::      Fri Nov  9 14:37:13 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'xemacs'
version = '21.5.27'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['xemacs-21.5.27.tar.gz']
source_urls = ['${MASTER_SITE_XEMACS:=${DISTNAME:C/[.][/.]*$//}/}']
homepage = 'http://www.xemacs.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "xemacs-21.5.27 description: "

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.77 2012/10/03 11:43:47 asau Exp $
# 
# PKGNAME?=	${DISTNAME}
# COMMENT?=	*BETA* XEmacs text editor version ${PKGVERSION_NOREV}
# 
# DISTNAME=	xemacs-21.5.27
# EMACSVERSION=	21.5-b27
# EMACS_DISTNAME=	xemacs-${EMACSVERSION}
# PKGREVISION=	13
# CATEGORIES=	editors
# MASTER_SITES=	${MASTER_SITE_XEMACS:=${DISTNAME:C/[.][^.]*$//}/}
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.xemacs.org/
# 
# CONFLICTS+=	gnuclient-[0-9]*
# CONFLICTS+=	xemacs-[0-9]*
# CONFLICTS+=	xemacs-nox11-[0-9]*
# 
# .if ${MACHINE_ARCH} == "arm" || ${MACHINE_ARCH} == "arm32"
# GCC_REQD+=		2.95.3
# .endif
# 
# PLIST_SUBST+=		DISTNAME=${EMACS_DISTNAME}
# FILES_SUBST+=		DISTNAME=${EMACS_DISTNAME}
# MESSAGE_SUBST+=		DISTNAME=${EMACS_DISTNAME}
# INFO_FILES=		# PLIST
# 
# .include "options.mk"
# 
# # The XEmacs configure script does something silly to the value of mandir
# # passed to the configure script to point it to where the man1 pages go.
# # Point it there directly.
# #
# GNU_CONFIGURE_MANDIR=	${PREFIX:Q}/${PKGMANDIR}/man1
# 
# GNU_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--with-clash-detection
# CONFIGURE_ARGS+=	--with-mule
# CONFIGURE_ARGS+=	--with-zlib
# CONFIGURE_ARGS+=	--without-msw
# CFLAGS+=		-Dunix
# 
# # Newer gcc has big trouble with aliasing.  This should be fixed in the
# # source, but until then, use the big hammer here.
# #
# CFLAGS+=		-fno-strict-aliasing
# 
# .if ${X11_TYPE} != "modular"
# INFOPATH=		${PREFIX}/${PKGINFODIR}:${X11BASE}/${PKGINFODIR}:${LOCALBASE}/${PKGINFODIR}
# .else
# INFOPATH=		${PREFIX}/${PKGINFODIR}:${LOCALBASE}/${PKGINFODIR}
# .endif
# CONFIGURE_ARGS+=	--with-infopath=${INFOPATH:Q}
# 
# # Having the build path in the dumped emacs is not a problem.
# CHECK_WRKREF_SKIP+=	bin/xemacs
# CHECK_WRKREF_SKIP+=	bin/xemacs-${EMACSVERSION}
# 
# LIBDIR=			${PREFIX}/lib/${EMACS_DISTNAME}
# ARCHLIBDIR=		${LIBDIR}/${MACHINE_GNU_PLATFORM}
# 
# # This list overrides variables used in the source Makefiles at install
# # time to allow for ${DESTDIR}-style installation.  This variables list
# # is pulled from the ``mkdir'' target of Makefile.in.in.
# #
# INSTALL_MAKE_FLAGS+=	archlibdir=${DESTDIR}${ARCHLIBDIR}
# INSTALL_MAKE_FLAGS+=	bindir=${DESTDIR}${PREFIX}/bin
# INSTALL_MAKE_FLAGS+=	datadir=${DESTDIR}${PREFIX}/lib
# INSTALL_MAKE_FLAGS+=	docdir=${DESTDIR}${ARCHLIBDIR}
# INSTALL_MAKE_FLAGS+=	etcdir=${DESTDIR}${LIBDIR}/etc
# INSTALL_MAKE_FLAGS+=	exec_prefix=${DESTDIR}${PREFIX}
# INSTALL_MAKE_FLAGS+=	infodir=${DESTDIR}${LIBDIR}/info
# INSTALL_MAKE_FLAGS+=	libdir=${DESTDIR}/lib
# INSTALL_MAKE_FLAGS+=	lispdir=${DESTDIR}${LIBDIR}/lisp
# INSTALL_MAKE_FLAGS+=	mandir=${DESTDIR}${PREFIX}/${PKGMANDIR}/man1
# INSTALL_MAKE_FLAGS+=	moduledir=${DESTDIR}${ARCHLIBDIR}/modules
# INSTALL_MAKE_FLAGS+=	pkgdir=${DESTDIR}${LIBDIR}/lisp
# INSTALL_MAKE_FLAGS+=	prefix=${DESTDIR}${PREFIX}
# INSTALL_MAKE_FLAGS+=	sitelispdir=${DESTDIR}${PREFIX}/lib/xemacs/site-lisp
# INSTALL_MAKE_FLAGS+=	sitemoduledir=${DESTDIR}${PREFIX}/lib/xemacs/site-modules
# 
# pre-build:
# 	rm -f ${WRKSRC}/etc/ctags.1.orig
# 
# .include "../../databases/gdbm/buildlink3.mk"
# .include "../../devel/gettext-lib/buildlink3.mk"
# .include "../../devel/zlib/buildlink3.mk"
# .include "../../mk/termcap.buildlink3.mk"
# 
# .include "../../mk/bsd.pkg.mk"
