# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      emacs-22.3.eb
# Date::      Fri Nov  9 14:37:12 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'emacs'
version = '22.3'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['emacs-22.3.tar.gz']
source_urls = ['http://ftp.gnu.org/gnu/emacs']
homepage = 'http://www.gnu.org/software/emacs/emacs.html'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "emacs-22.3 description: "

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.29 2012/10/08 23:01:26 adam Exp $
# 
# PKGNAME?=	${DISTNAME}
# COMMENT?=	GNU editing macros (editor)
# 
# DISTNAME=	emacs-22.3
# PKGREVISION=	23
# CATEGORIES=	editors
# MASTER_SITES=	${MASTER_SITE_GNU:=emacs/}
# 
# MAINTAINER=	markd@NetBSD.org
# HOMEPAGE=	http://www.gnu.org/software/emacs/emacs.html
# LICENSE=	gnu-gpl-v3
# 
# CONFLICTS+=	elisp-manual-[0-9]*
# CONFLICTS+=	emacs-[0-9]*
# CONFLICTS+=	emacs-nox11-[0-9]*
# CONFLICTS+=	mule-[0-9]*
# 
# USE_TOOLS+=		gmake gzip mktemp:run perl:run pkg-config
# GNU_CONFIGURE=		yes
# INFO_FILES=		yes
# 
# SETGIDGAME=		yes
# 
# .include "options.mk"
# 
# MAKEFLAGS+=		EMACSLOADPATH=${WRKSRC}/lisp
# 
# CONFIGURE_ARGS+=	--localstatedir=${VARBASE:Q}
# CONFIGURE_ENV+=		GAMEOWN=${GAMEOWN:Q}
# 
# BUILD_DEFS+=		VARBASE
# BUILD_DEFS+=		GAMEDATAMODE
# 
# # build PATH in the dumped emacs is not a problem
# CHECK_WRKREF_SKIP+=	bin/emacs
# CHECK_WRKREF_SKIP+=	bin/emacs-[0-9]*
# 
# REPLACE_PERL=		lib-src/grep-changelog
# 
# SUBST_CLASSES+=			test_equal
# SUBST_STAGE.test_equal=		pre-configure
# SUBST_MESSAGE.test_equal=	Fixing bashisms in test(1) usage.
# SUBST_FILES.test_equal=		mac/make-package
# SUBST_SED.test_equal=		-e 's/ == / = /g'
# 
# MAKE_DIRS_PERMS+=	${VARBASE}/games/emacs \
# 			${GAMES_USER} ${GAMES_GROUP} ${GAMEDIRMODE:Q}
# CONF_FILES_PERMS+=	/dev/null ${VARBASE}/games/emacs/snake-scores \
# 			${GAMES_USER} ${GAMES_GROUP} ${GAMEDATAMODE:Q}
# CONF_FILES_PERMS+=	/dev/null ${VARBASE}/games/emacs/tetris-scores \
# 			${GAMES_USER} ${GAMES_GROUP} ${GAMEDATAMODE:Q}
# SPECIAL_PERMS+=		libexec/emacs/${PKGVERSION_NOREV}/${MACHINE_GNU_PLATFORM}/update-game-score ${SETGID_GAMES_PERMS}
# 
# .if (${OPSYS} == "DragonFly") && exists(/usr/lib/crtn.o)
# CPPFLAGS+=		-DDFLY_CRT_USRLIB
# .endif
# 
# .include "../../mk/compiler.mk"
# 
# # "emacs" uses the C pre-processor to generate makefiles. The C pre-processor
# # of newer GCC version is designed to break this by purpose. We work around
# # that using the traditional mode to generate makefiles. 
# .if !empty(CC_VERSION:Mgcc-[4-9].*)
# CPP+=		-P
# CONFIGURE_ENV+=	CPP=${CPP:Q}
# .endif
# 
# post-extract:
# 	cp ${FILESDIR}/site-init.el ${WRKSRC}/lisp
# 	cp ${FILESDIR}/dragonfly.h ${WRKSRC}/src/s
# 	${CHMOD} -R go-w ${WRKSRC}
# 
# # These dirs are installed by tar-copy and can sometimes come out mode
# # 754, which if PKG_DEVELOPER is set causes the build to fail.
# post-install:
# .for file in leim leim/ja-dic leim/quail
# 	${CHMOD} 755 ${DESTDIR}${PREFIX}/share/emacs/${PKGVERSION_NOREV}/${file}
# .endfor
# 
# 
# .include "../../mk/oss.buildlink3.mk"
# .include "../../mk/termcap.buildlink3.mk"
# 
# .include "../../mk/bsd.pkg.mk"
