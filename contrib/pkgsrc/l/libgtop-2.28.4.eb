# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      libgtop-2.28.4.eb
# Date::      Fri Nov  9 14:37:52 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'libgtop'
version = '2.28.4'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['libgtop-2.28.4.tar.bz2']
source_urls = ['http://sourceforge.net/projects/sources/libgtop/2.28/files', 'download']
homepage = 'http://www.gnome.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "libgtop-2.28.4 description: Library_to_retrieve_system_information,_used_in_GNOME2"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.42 2012/10/23 19:51:10 asau Exp $
# 
# DISTNAME=		libgtop-2.28.4
# PKGREVISION=		4
# CATEGORIES=		sysutils gnome
# MASTER_SITES=		${MASTER_SITE_GNOME:=sources/libgtop/2.28/}
# EXTRACT_SUFX=		.tar.bz2
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://www.gnome.org/
# COMMENT=		Library to retrieve system information, used in GNOME2
# 
# OSVERSION_SPECIFIC=	YES
# 
# GNU_CONFIGURE=		YES
# CONFIG_SHELL=		bash
# INFO_FILES=		YES
# PKGCONFIG_OVERRIDE=	libgtop-2.0.pc.in
# TEXINFO_REQD=		4.6
# USE_LIBTOOL=		YES
# USE_PKGLOCALEDIR=	YES
# USE_TOOLS+=		gmake makeinfo msgfmt perl pkg-config intltool
# 
# CONFIGURE_ARGS+=	--enable-gtk-doc
# CONFIGURE_ARGS+=	--without-x
# CONFIGURE_ENV+=		LN_S="${LN} -s"
# 
# CONFLICTS+=		libgtop2-[0-9]*
# 
# post-patch:
# 	${CP} ${FILESDIR}/procaffinity.c ${WRKSRC}/sysdeps/bsd/
# 
# # The following flags are for debugging purposes.  They don't need to
# # be used unless you are actively developing/debugging libgtop.
# #CPPFLAGS+=		-DLIBGTOP_ENABLE_DEBUG -DLIBGTOP_FATAL_WARNINGS
# #CFLAGS+=		-g
# #LDFLAGS+=		-g
# 
# PRINT_PLIST_AWK+=	/^bin\/libgtop_server2$$/ \
# 				{ print "$${LIBGTOP_SERVER}" $$0; next }
# PRINT_PLIST_AWK+=	/^include\/libgtop-2.0\/glibtop_suid.h$$/ \
# 				{ print "$${LIBGTOP_SUID_H}" $$0; next }
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${OPSYS} == NetBSD
# CONFIGURE_ENV+=	fu_cv_sys_mounted_getmntinfo=yes
# .endif
# 
# INSTALL_MAKE_FLAGS+=	libgtop_postinstall=true
# PLIST_VARS+=	server suid.h
# .if ${OPSYS} == "AIX"
# PLIST.server=	yes
# PLIST.suid.h=	yes
# SPECIAL_PERMS=	bin/libgtop_server2 ${REAL_ROOT_USER} system 2755
# .elif ${OPSYS} == "Darwin" || ${OPSYS} == "DragonFly" || \
#       ${OPSYS} == "FreeBSD" || ${OPSYS} == "NetBSD" || \
#       ${OPSYS} == "OpenBSD"
# PLIST.server=	yes
# PLIST.suid.h=	yes
# SPECIAL_PERMS=	bin/libgtop_server2 ${REAL_ROOT_USER} kmem 2755
# .elif ${OPSYS} == "Linux"
# #PLIST.server=	no
# #PLIST.suid.h=	no
# .elif ${OPSYS} == "SunOS"
# PLIST.server=	yes
# PLIST.suid.h=	yes
# SPECIAL_PERMS=	bin/libgtop_server2 ${REAL_ROOT_USER} sys 2755
# .else
# PLIST.server=	yes
# PLIST.suid.h=	yes
# .endif
# 
# PLIST_VARS+=    glibtop_private.h
# .if ${OPSYS} == "SunOS" || ${OPSYS} == "FreeBSD" || ${OPSYS} == "DragonFly"
# PLIST.glibtop_private.h= yes
# .endif
# 
# # XXX This needs a check in the configure script, which should be clean
# # enough to be integrated in the mainstream sources.
# statvfs_h=	/usr/include/sys/statvfs.h
# .if exists(${statvfs_h})
# reads_count!=	if ${GREP} f_syncreads ${statvfs_h} >/dev/null; then \
# 		${ECHO} yes; else ${ECHO} no; fi
# .  if ${reads_count} == "yes"
# CPPFLAGS+=	-DHAVE_STATVFS_READS_COUNT
# .  endif
# .  undef reads_count
# 
# writes_count!=	if ${GREP} f_syncwrites ${statvfs_h} >/dev/null; then \
# 		${ECHO} yes; else ${ECHO} no; fi
# .  if ${writes_count} == "yes"
# CPPFLAGS+=	-DHAVE_STATVFS_WRITES_COUNT
# .  endif
# .  undef writes_count
# .endif
# .undef statvfs_h
# 
# .include "../../devel/gettext-lib/buildlink3.mk"
# BUILDLINK_API_DEPENDS.glib2+=	glib2>=2.6.0
# .include "../../devel/glib2/buildlink3.mk"
# .include "../../textproc/gtk-doc/buildlink3.mk"
# .include "../../x11/libXau/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
