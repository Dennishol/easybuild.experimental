# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      libmicro-.eb
# Date::      Fri Nov  9 14:36:53 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'libmicro'
version = ''
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['libmicro-${LIBMICRO_VERSION}.tar.gz']
source_urls = ['http://hub.opensolaris.org/bin/download/Project+libmicro/Source+Archives/']
homepage = 'http://hub.opensolaris.org/bin/view/Project+libmicro/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "libmicro- description: Set_of_utilities_to_benchmark_productivity_of_system_calls"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.3 2012/09/11 22:37:13 asau Exp $
# #
# 
# DISTNAME=	libmicro-${LIBMICRO_VERSION}
# CATEGORIES=	benchmarks
# MASTER_SITES=	http://hub.opensolaris.org/bin/download/Project+libmicro/Source+Archives/
# 
# LIBMICRO_VERSION=	0.4.0
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://hub.opensolaris.org/bin/view/Project+libmicro/
# COMMENT=	Set of utilities to benchmark productivity of system calls
# 
# LICENSE=	cddl-1.0
# 
# WRKSRC=		${WRKDIR}/libMicro-${LIBMICRO_VERSION}
# 
# USE_TOOLS=	gmake tee
# BUILD_TARGET=	default
# 
# INSTALLATION_DIRS=	bin
# INSTALLATION_DIRS+=	libexec/${PKGBASE}
# INSTALLATION_DIRS+=	libexec/${PKGBASE}/bin
# INSTALLATION_DIRS+=	libexec/${PKGBASE}/bin-${MACHINE_ARCH}
# 
# LIBMICRO_BASE=		${PREFIX}/libexec/${PKGBASE}
# 
# SUBST_CLASSES+=		fix-arch
# SUBST_MESSAGE.fix-arch=	Fix machine architecture path
# SUBST_STAGE.fix-arch=	pre-configure
# SUBST_FILES.fix-arch=	Makefile bench.sh wrapper.sh
# SUBST_SED.fix-arch=	-e 's|@@MACHINE_ARCH@@|${MACHINE_ARCH:Q}|'
# 
# post-build:
# 	${SED}  -e 's|@@DESTDIR@@|${DESTDIR:Q}|'	\
# 		-e 's|@@PREFIX@@|${PREFIX:Q}|'		\
# 		-e 's|@@PKGBASE@@|${PKGBASE:Q}|'	\
# 		${FILESDIR}/run-libmicro > ${WRKDIR}/run-libmicro
# 
# do-install:
# 	cd ${WRKSRC}/bin;						\
# 	for f in *; do 							\
# 		${INSTALL_PROGRAM} ${WRKSRC}/bin-${MACHINE_ARCH}/$$f	\
# 		    ${DESTDIR}${LIBMICRO_BASE}/bin-${MACHINE_ARCH};	\
# 	done
# 	cd ${DESTDIR}${LIBMICRO_BASE}/bin-${MACHINE_ARCH};		\
# 	for f in *; do							\
# 		${LN} -s ../wrapper ../bin/$$f; 			\
# 	done
# 	${INSTALL_PROGRAM} ${WRKSRC}/bin-${MACHINE_ARCH}/exec_bin	\
# 		${DESTDIR}${LIBMICRO_BASE}/bin-${MACHINE_ARCH}
# 	${INSTALL_SCRIPT}  ${WRKSRC}/bench		\
# 		${DESTDIR}${LIBMICRO_BASE}
# 	${INSTALL_SCRIPT}  ${WRKSRC}/wrapper		\
# 		${DESTDIR}${LIBMICRO_BASE}
# 	${INSTALL_SCRIPT}  ${WRKSRC}/multiview		\
# 		${DESTDIR}${PREFIX}/bin
# 	${INSTALL_SCRIPT} ${WRKDIR}/run-libmicro	\
# 		${DESTDIR}${PREFIX}/bin
# 
# benchmark:
# 	cd ${WRKSRC}; ./bench | ${TEE} libmicro.output
# 
# results:
# 	${MKDIR} /tmp/benches/`domainname`
# 	cd ${WRKSRC}; \
# 	./multiview libmicro.output > /tmp/benches/`domainname`/libmicro.`uname`-`uname -m`-`uname -r`.`hostname`.html
# 
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
