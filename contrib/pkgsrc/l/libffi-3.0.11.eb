# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      libffi-3.0.11.eb
# Date::      Fri Nov  9 14:37:02 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'libffi'
version = '3.0.11'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['libffi-3.0.11.tar.gz']
source_urls = ['ftp://sourceware.org/pub/libffi/']
homepage = 'http://sources.redhat.com/libffi/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "libffi-3.0.11 description: Foreign_function_interface"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.19 2012/10/31 11:17:13 asau Exp $
# #
# 
# DISTNAME=	libffi-3.0.11
# PKGREVISION=	1
# CATEGORIES=	devel
# MASTER_SITES=	ftp://sourceware.org/pub/libffi/
# 
# MAINTAINER=	asau@inbox.ru
# HOMEPAGE=	http://sources.redhat.com/libffi/
# COMMENT=	Foreign function interface
# LICENSE=	mit
# 
# GNU_CONFIGURE=	yes
# CONFIGURE_ARGS=	--includedir=${PREFIX}/include
# USE_LIBTOOL=	yes
# USE_TOOLS+=	pkg-config
# USE_LANGUAGES=	c c++
# INFO_FILES=	yes
# 
# PKGCONFIG_OVERRIDE+=	libffi.pc.in
# 
# .include "../../mk/compiler.mk"
# # The Compaq C frontend groks .s, but not .S. Assemble osf.S directly w/ as(1).
# pre-build:
# .if !empty(PKGSRC_COMPILER:Mccc)
# 	cd ${WRKSRC} && ./libtool --mode=compile --tag=CC as -I. -Iinclude -o src/alpha/osf.lo -c src/alpha/osf.S
# .endif
# 
# # Since we don't have "TEST_DEPENDS", we implement it as a hack:
# .include "../../mk/bsd.prefs.mk"
# 
# .if !empty(PKGSRC_RUN_TEST:M[Yy][Ee][Ss])
# TEST_TARGET=	check
# TEST_ENV=	
# BUILD_DEPENDS+=	dejagnu-[0-9]*:../../devel/dejagnu
# .endif
# 
# # patch-aj uses m68k_sync_icache(2)
# .if !empty(MACHINE_PLATFORM:MNetBSD-*-m68k)
# LIBS+=	-lm68k
# .endif
# 
# # fix http://gnats.netbsd.org/42865
# .if !empty(MACHINE_PLATFORM:MSunOS-*-i386) && !empty(CC_VERSION:Mgcc-[23]*)
# CPPFLAGS += -D__PIC__
# .endif
# 
# .include "../../mk/bsd.pkg.mk"
