# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      libtunepimp-0.5.3.eb
# Date::      Fri Nov  9 14:36:51 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'libtunepimp'
version = '0.5.3'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['libtunepimp-0.5.3.tar.gz']
source_urls = ['ftp://ftp.musicbrainz.org/pub/musicbrainz/']
homepage = 'http://musicbrainz.org/doc/libtunepimp'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "libtunepimp-0.5.3 description: Library_to_support_MusicBrainz_enabled_tagging"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.22 2012/09/12 00:24:44 asau Exp $
# 
# DISTNAME=		libtunepimp-0.5.3
# PKGREVISION=		9
# CATEGORIES=		audio
# MASTER_SITES=		ftp://ftp.musicbrainz.org/pub/musicbrainz/ \
# 			http://ftp.musicbrainz.org/pub/musicbrainz/
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://musicbrainz.org/doc/libtunepimp
# COMMENT=		Library to support MusicBrainz enabled tagging
# # alternatively, gnu-lgpl-v2 is also supported, but then the package
# # would need to disable some plugins; so the pkgsrc version currently
# # falls under gnu-gpl-v2
# LICENSE=		gnu-gpl-v2
# 
# GNU_CONFIGURE=		YES
# USE_LANGUAGES=		c c++
# USE_LIBTOOL=		YES
# CONFLICTS+=		tunepimp-[0-9]* trm-[0-9]*
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${OPSYS} == "SunOS"
# pre-configure:
# 	${ECHO} "#define HAVE_STATVFS 1" >> ${WRKSRC}/config.h.in
# .endif
# 
# .include "../../audio/flac/buildlink3.mk"
# .include "../../audio/musicbrainz/buildlink3.mk"
# .include "../../audio/libmad/buildlink3.mk"
# .include "../../audio/libmpcdec/buildlink3.mk"
# .include "../../audio/libofa/buildlink3.mk"
# .include "../../audio/libvorbis/buildlink3.mk"
# .include "../../audio/taglib/buildlink3.mk"
# .include "../../converters/libiconv/buildlink3.mk"
# .include "../../devel/ncurses/buildlink3.mk"
# .include "../../devel/readline/buildlink3.mk"
# .include "../../www/curl/buildlink3.mk"
# .include "../../multimedia/libmp4v2/buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
