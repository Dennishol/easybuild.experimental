# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      jack-audio-connection-kit-.eb
# Date::      Fri Nov  9 14:36:51 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'jack-'
version = 'audio-connection-kit-'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['jack-audio-connection-kit-${JACK_VERSION}.tar.bz2']
version = '${JACK_VERSION}'
name = 'jack'
source_urls = ['${MASTER_SITE_LOCAL}']
homepage = 'http://www.jackaudio.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "jack-audio-connection-kit- description: JACK_audio_connection_kit"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.22 2012/09/12 00:24:40 asau Exp $
# #
# 
# DISTNAME=	jack-audio-connection-kit-${JACK_VERSION}
# PKGNAME=	jack-${JACK_VERSION}
# PKGREVISION=	1
# CATEGORIES=	audio
# MASTER_SITES=	${MASTER_SITE_LOCAL}
# EXTRACT_SUFX=	.tar.bz2
# 
# JACK_VERSION=	0.115.1
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://www.jackaudio.org/
# COMMENT=	JACK audio connection kit
# 
# BUILD_DEFS+=		JACKD_DEFAULT_TMPDIR
# BUILD_DEFS+=		JACKD_PROCFS_PATH
# 
# GNU_CONFIGURE=		yes
# SET_LIBDIR=		yes
# USE_TOOLS+=		pkg-config
# USE_LIBTOOL=		yes
# 
# PKGCONFIG_OVERRIDE+=	jack.pc.in
# 
# PTHREAD_OPTS+=		require native
# 
# CONFIGURE_ARGS+=	--disable-alsa
# CONFIGURE_ARGS+=	--disable-freebob
# CONFIGURE_ARGS+=	--disable-coreaudio
# CONFIGURE_ARGS+=	--disable-firewire
# CONFIGURE_ARGS+=	--disable-optimize
# CONFIGURE_ARGS+=	--enable-resize
# CONFIGURE_ARGS+=	--enable-timestamps
# 
# CFLAGS.NetBSD+=		-D_NETBSD_SOURCE
# CFLAGS.Linux+=		-D_GNU_SOURCE
# CFLAGS.SunOS+=		-std=c99 -D_XOPEN_SOURCE=600 -D__EXTENSIONS__
# 
# CONFIGURE_ENV+=		ac_cv_header_readline_chardefs_h=yes
# 
# JACKD_DEFAULT_TMPDIR?=	/tmp
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if !empty(OPSYS:M*BSD) || ${OPSYS} == "DragonFly" || ${OPSYS} == "Darwin"
# CFLAGS+=		-DJACK_HOST_HAS_BSD_POLL
# .endif
# ###
# ### XXX Is there a way to properly use the emulation framework
# ###	for this?
# ###
# .if exists(${PREFIX}/emul/linux/proc) && ${OPSYS} != "Linux"
# JACKD_PROCFS_PATH?=	${PREFIX}/emul/linux/proc
# .else
# JACKD_PROCFS_PATH?=	/proc
# .endif
# 
# .if exists(/dev/shm) && ${OPSYS} == "Linux"
# CONFIGURE_ARGS+=	--with-default-tmpdir=/dev/shm
# .else
# CONFIGURE_ARGS+=	--with-default-tmpdir=${JACKD_DEFAULT_TMPDIR:Q}
# .endif
# 
# PLIST_VARS=		coreaudio oss sunaudio
# ###
# ### XXX	This is untested.  Please file a PR and/or commit a fix should
# ###	any problems arise.
# ###
# .if ${OPSYS} == "Darwin"
# CONFIGURE_ARGS+=	--enable-coreaudio
# PLIST.coreaudio=	yes
# .endif
# ###
# ### XXX The sun driver is buggy on NetBSD right now.  I hope to remedy
# ###	this shortly.
# ###
# .if ${OPSYS} == "NetBSD" || ${OPSYS} == "OpenBSD" || ${OPSYS} == "Solaris"
# CONFIGURE_ARGS+=	--enable-sun
# PLIST.sunaudio=		yes
# .else
# CONFIGURE_ARGS+=	--disable-sun
# .endif
# 
# .include "../../mk/oss.buildlink3.mk"
# 
# .if ${OSS_TYPE} != "none"
# CONFIGURE_ARGS+=	--enable-oss
# PLIST.oss=		yes
# MAKE_ENV+=		LIBOSSAUDIO=${LIBOSSAUDIO:Q}
# CFLAGS+=		-DDEVOSSAUDIO=\"${DEVOSSAUDIO:U/dev/dsp}\"
# .else
# CONFIGURE_ARGS+=	--disable-oss
# .endif
# 
# SUBST_CLASSES+=		jacksrc
# SUBST_FILES.jacksrc=	libjack/unlock.c
# SUBST_MESSAGE.jacksrc=	Peforming substitutions in JACK sources.
# SUBST_STAGE.jacksrc=	pre-build
# SUBST_VARS.jacksrc=	PREFIX JACKD_PROCFS_PATH
# 
# .if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "x86_64"
# PKG_OPTIONS_VAR=	PKG_OPTIONS.jack
# PKG_SUPPORTED_OPTIONS=	simd
# PKG_SUGGESTED_OPTIONS=	simd
# 
# .  include "../../mk/bsd.options.mk"
# 
# .  if !empty(PKG_OPTIONS:Msimd)
# CONFIGURE_ARGS+=	--enable-simd
# .  else
# CONFIGURE_ARGS+=	--disable-simd
# .  endif
# .endif
# 
# post-extract:
# 	${RUN} ${MKDIR} ${WRKSRC}/config/os/netbsd && \
# 		${CP} ${FILESDIR}/atomicity.h ${WRKSRC}/config/os/netbsd
# 
# .include "../../audio/libsamplerate/buildlink3.mk"
# .include "../../devel/readline/buildlink3.mk"
# .include "../../mk/dlopen.buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
