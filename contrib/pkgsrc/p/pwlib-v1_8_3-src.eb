# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      pwlib-v1_8_3-src.eb
# Date::      Fri Nov  9 14:37:07 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'pwlib-1.8.3'
version = 'v1_8_3-src'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['pwlib-v1_8_3-src-tar.gz']
version = '1.8.3'
name = 'pwlib'
homepage = 'http://sourceforge.net/projects/openh323/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "pwlib-v1_8_3-src description: Portable_Windows_Library"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.64 2011/03/21 12:27:11 obache Exp $
# 
# DISTNAME=	pwlib-v1_8_3-src
# PKGNAME=	pwlib-1.8.3
# PKGREVISION=	9
# CATEGORIES=	devel
# MASTER_SITES+=	http://www.voxgratia.org/releases/
# EXTRACT_SUFX=	-tar.gz
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://sourceforge.net/projects/openh323/
# COMMENT=	Portable Windows Library
# # note: obsoleted by devel/ptlib
# 
# NOT_FOR_PLATFORM+=	${LP64PLATFORMS}
# 
# PKG_DESTDIR_SUPPORT=	destdir
# 
# WRKSRC=			${WRKDIR}/pwlib
# USE_TOOLS+=		bison gmake
# USE_LANGUAGES=		c c++
# USE_LIBTOOL=		yes
# GNU_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--disable-sasl --disable-openldap
# CONFIGURE_ARGS+=	--disable-expat --disable-video --disable-qos
# PTHREAD_OPTS+=		require
# 
# BUILD_TARGET=		opt
# MAKE_ENV+=		PWLIBDIR=${WRKSRC:Q} CC=${CC:Q} CPLUS=${CXX:Q}
# 
# SUBST_CLASSES+=		paths
# SUBST_FILES.paths=	make/unix.mak make/lib.mak make/common.mak make/pwlib.mak
# SUBST_SED.paths+=	-e 's,@PREFIX@,${PREFIX},g'
# SUBST_SED.paths+=	-e 's,@LIBTOOL@,${LIBTOOL},g'
# SUBST_SED.paths+=	-e 's,@BSD_INSTALL_LIB@,${INSTALL_LIB},g'
# SUBST_SED.paths+=	-e 's,@BSD_INSTALL_PROGRAM@,${INSTALL_PROGRAM},g'
# SUBST_SED.paths+=	-e 's,@PTHREAD_FLAGS@,${PTHREAD_LDFLAGS} ${PTHREAD_LIBS},g'
# SUBST_SED.paths+=	-e 's,@LIBOSSAUDIO@,${LIBOSSAUDIO},g'
# SUBST_STAGE.paths=	post-patch
# 
# post-extract:
# 	mkdir ${WRKSRC}/share
# 	${LN} -s ../../pwlib ${WRKSRC}/share/pwlib
# 
# INSTALL_MAKE_FLAGS+=	PREFIX=${DESTDIR}${PREFIX}
# 
# INSTALL_DIRS=	src/ptlib/unix
# 
# INSTALLATION_DIRS+=	bin lib
# 
# post-install:
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/pwlib/make
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/include/ptclib
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/include/ptlib/unix/ptlib
# 	cd ${WRKSRC}/make; ${INSTALL_SCRIPT} ptlib-config ${DESTDIR}${PREFIX}/bin; \
# 	for f in *.mak; do		\
# 		${INSTALL_DATA} $$f ${DESTDIR}${PREFIX}/share/pwlib/make; \
# 	done
# 	${INSTALL_DATA} ${WRKSRC}/version.h ${DESTDIR}${PREFIX}/include/ptlib
# 	cd ${WRKSRC}; \
# 	for f in `${FIND} include -name CVS -prune -o -name \*.orig -prune -o -name wince -prune -o -name msos -prune -o -type f -print`; do	\
# 		${INSTALL_DATA} $$f ${DESTDIR}${PREFIX}/$$f;	\
# 	done
# 
# .include "../../security/openssl/buildlink3.mk"
# .include "../../mk/oss.buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
