# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      pinentry-0.8.2.eb
# Date::      Fri Nov  9 14:37:50 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'pinentry-qt4-0.8.2'
version = '0.8.2'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['pinentry-0.8.2.tar.bz2']
version = 'qt4-0.8.2'
name = 'pinentry'
source_urls = ['ftp://ftp.gnupg.org/gcrypt/pinentry/']
homepage = 'ftp://ftp.gnupg.org/gcrypt/pinentry/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "pinentry-0.8.2 description: Applications_for_entering_PINs_or_Passphrases"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.19 2012/10/23 18:16:50 asau Exp $
# #
# 
# DISTNAME=		pinentry-0.8.2
# PKGNAME=		pinentry-qt4-0.8.2
# PKGREVISION=		4
# CATEGORIES=		security
# MASTER_SITES=		ftp://ftp.gnupg.org/gcrypt/pinentry/
# EXTRACT_SUFX=		.tar.bz2
# 
# MAINTAINER=		shannonjr@NetBSD.org
# HOMEPAGE=		ftp://ftp.gnupg.org/gcrypt/pinentry/
# COMMENT=		Applications for entering PINs or Passphrases
# 
# PATCHDIR=		${.CURDIR}/../../security/pinentry/patches
# DISTINFO_FILE=		${.CURDIR}/../../security/pinentry/distinfo
# 
# GNU_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--with-libiconv-prefix=${BUILDLINK_PREFIX.iconv}
# CONFIGURE_ARGS+=	--enable-pinentry-qt4
# CONFIGURE_ARGS+=	--with-qt-dir=${QTDIR:Q}
# CONFIGURE_ARGS+=	--with-qt-includes=${BUILDLINK_PREFIX.qt4-libs}/qt4/include
# CONFIGURE_ARGS+=	--with-qt-libraries=${BUILDLINK_PREFIX.qt4-libs}/qt4/lib
# CONFIGURE_ARGS+=	--disable-pinentry-curses
# #CONFIGURE_ARGS+=	--disable-fallback-curses
# CONFIGURE_ARGS+=	--disable-pinentry-gtk
# CONFIGURE_ARGS+=	--disable-pinentry-gtk2
# CONFIGURE_ARGS+=	--disable-pinentry-qt
# 
# USE_LANGUAGES+=		c c++
# USE_TOOLS+=		pkg-config gmake
# INFO_FILES=		yes
# 
# INSTALL_DIRS=		qt4
# 
# post-configure:
# 	cd $(WRKSRC)/qt4 && \
# 	$(QTDIR)/bin/moc pinentrydialog.h -o pinentrydialog.moc && \
# 	$(QTDIR)/bin/moc qsecurelineedit.h -o qsecurelineedit.moc
# 
# BUILDLINK_API_DEPENDS.libgpg-error+=	libgpg-error>=1.0.0
# .include "../../x11/qt4-libs/buildlink3.mk"
# .include "../../converters/libiconv/buildlink3.mk"
# .include "../../devel/ncurses/buildlink3.mk"
# #.include "../../security/libgpg-error/buildlink3.mk"
# #.include "../../security/libksba/buildlink3.mk"
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
