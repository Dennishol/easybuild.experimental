# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      unbound-1.4.18.eb
# Date::      Fri Nov  9 14:37:40 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'unbound'
version = '1.4.18'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['unbound-1.4.18.tar.gz']
source_urls = ['http://www.unbound.net/downloads/']
homepage = 'http://www.unbound.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "unbound-1.4.18 description: DNS_resolver_and_recursive_server"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.23 2012/10/23 17:19:15 asau Exp $
# 
# DISTNAME=	unbound-1.4.18
# CATEGORIES=	net
# MASTER_SITES=	http://www.unbound.net/downloads/
# 
# MAINTAINER=	joerg@NetBSD.org
# HOMEPAGE=	http://www.unbound.net/
# COMMENT=	DNS resolver and recursive server
# LICENSE=	modified-bsd
# 
# BUILD_DEFS+=	VARBASE
# 
# GNU_CONFIGURE=	yes
# USE_LIBTOOL=	yes
# 
# CONFIGURE_ARGS+=	--with-ldns=${BUILDLINK_PREFIX.ldns}
# CONFIGURE_ARGS+=	--with-libexpat=${BUILDLINK_PREFIX.expat}
# CONFIGURE_ARGS+=	--with-pidfile=${VARBASE}/run/unbound.pid
# CONFIGURE_ARGS+=	--sysconfdir=${PKG_SYSCONFBASE}
# CONFIGURE_ARGS+=	--enable-allsymbols
# 
# # Add the same logic as for ldns, so sha2/gost is configured automatically
# CHECK_BUILTIN.openssl=	yes
# .include "../../security/openssl/builtin.mk"
# CHECK_BUILTIN.openssl=	no
# .include "../../security/openssl/buildlink3.mk"
# 
# PLIST_VARS+=            sha2 gost
# .if defined(USE_BUILTIN.openssl) && !empty(USE_BUILTIN.openssl:M[yY][eE][sS])
# PLIST_VARS.gost!=       \
#         if ${PKG_ADMIN} pmatch 'openssl>=1.0.0' ${BUILTIN_PKG.openssl:Q}; then \
#                 ${ECHO} "yes";                                          \
#         else                                                            \
#                 ${ECHO} "no";                                           \
#         fi
# PLIST_VARS.sha2!=       \
#         if ${PKG_ADMIN} pmatch 'openssl>=0.9.8' ${BUILTIN_PKG.openssl:Q}; then \
#                 ${ECHO} "yes";                                          \
#         else                                                            \
#                 ${ECHO} "no";                                           \
#         fi
# .else
# PLIST_VARS.gost!=       \
#         if ${PKG_INFO} -qe 'openssl>=1.0.0'; then                       \
#                 ${ECHO} yes;                                            \
#         else                                                            \
#                 ${ECHO} no;                                             \
#         fi
# PLIST_VARS.sha2!=       \
#         if ${PKG_INFO} -qe 'openssl>=0.9.8'; then                       \
#                 ${ECHO} yes;                                            \
#         else                                                            \
#                 ${ECHO} no;                                             \
#         fi
# .endif
# .if ${PLIST_VARS.gost} == "yes"
# CONFIGURE_ARGS+=        --enable-gost
# .else
# CONFIGURE_ARGS+=        --disable-gost
# .endif
# .if ${PLIST_VARS.sha2} == "yes"
# CONFIGURE_ARGS+=        --enable-sha2
# .else
# CONFIGURE_ARGS+=        --disable-sha2
# .endif
# 
# SUBST_CLASSES+=		paths
# SUBST_STAGE.paths=	post-configure
# SUBST_MESSAGE.paths=	Fixing path names
# SUBST_FILES.paths=	doc/example.conf doc/*.5 doc/*.8
# SUBST_SED.paths=	-e "s|/usr/local|${PREFIX}|"
# 
# INSTALL_MAKE_FLAGS+=	\
#     configfile=${PREFIX}/share/examples/unbound/unbound.conf
# 
# PKG_SYSCONFSUBDIR=	unbound
# 
# CONF_FILES+=	share/examples/unbound/unbound.conf \
# 	${PKG_SYSCONFDIR}/unbound.conf
# 
# RCD_SCRIPTS=	unbound
# 
# UNBOUND_USER?=	unbound
# UNBOUND_GROUP?=	unbound
# 
# PKG_GROUPS=	${UNBOUND_GROUP}
# PKG_USERS=	${UNBOUND_USER}:${UNBOUND_GROUP}
# 
# .include "options.mk"
# 
# .include "../../textproc/expat/buildlink3.mk"
# .include "../../net/ldns/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
