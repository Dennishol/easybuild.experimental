# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      sdcc-src-2.8.0.eb
# Date::      Fri Nov  9 14:37:08 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'sdcc'
version = 'src-2.8.0'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['sdcc-src-2.8.0.tar.bz2']
source_urls = ['http://sourceforge.net/projects/sdcc/files', 'download']
homepage = 'http://sdcc.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "sdcc-src-2.8.0 description: Cross_compile_8051_code"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.44 2012/10/31 11:19:45 asau Exp $
# 
# DISTNAME=	sdcc-src-2.8.0
# PKGNAME=	${DISTNAME:S/-src//}
# PKGREVISION=	3
# CATEGORIES=	devel lang
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=sdcc/}
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://sdcc.sourceforge.net/
# COMMENT=	Cross compile 8051 code
# LICENSE=	gnu-gpl-v2
# 
# DEPENDS+=	gputils-[0-9]*:../../devel/gputils
# 
# MAKE_JOBS_SAFE=		no
# 
# USE_LANGUAGES=	c c++
# 
# # XXX - This HACK circumvent a problem with the use of yacc that breaks the
# # XXX - building process of sdcc.  Use of bison fixes this problem for now.
# #
# USE_TOOLS+=	bison
# 
# BUILD_TARGET=	dep all
# 
# WRKSRC=			${WRKDIR}/sdcc/
# GNU_CONFIGURE=		YES
# USE_GNU_READLINE=	yes
# USE_TOOLS+=		gmake lex perl:run
# 
# CONFIGURE_ARGS+=	--datadir=${PREFIX}/share/sdcc
# CONFIGURE_ARGS+=	--docdir=${PREFIX}/share/doc/sdcc
# 
# # needed for some arch's.  -fdollars-in-identifiers is enabled
# # by default on some, not on others
# CPPFLAGS+=		-fdollars-in-identifiers
# CONFIGURE_ENV+=		MACHINE_ARCH=${MACHINE_ARCH:Q}
# CONFIGURE_ENV+=		sdcc_cv_CCggdb="no"
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${OPSYS} == "NetBSD"
# CPPFLAGS+=		-DYY_NEVER_INTERACTIVE
# 
# pre-configure: sys-endian-buildlink
# 
# sys-endian-buildlink:
# 	${MKDIR} ${BUILDLINK_DIR}/include
# 	${LN} -fs /usr/include/sys/endian.h ${BUILDLINK_DIR}/include
# .endif
# 
# post-install:
# 	${INSTALL_DATA} ${WRKSRC}/doc/*.lyx ${DESTDIR}${PREFIX}/share/doc/sdcc
# 	${INSTALL_DATA} ${WRKSRC}/doc/*.txt ${DESTDIR}${PREFIX}/share/doc/sdcc
# 
# .include "../../devel/boehm-gc/buildlink3.mk"
# .include "../../devel/readline/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
