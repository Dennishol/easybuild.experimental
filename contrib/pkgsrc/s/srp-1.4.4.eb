# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      srp-1.4.4.eb
# Date::      Fri Nov  9 14:37:50 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'srp-client-1.4.4'
version = '1.4.4'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['srp-1.4.4.tar.gz']
version = 'client-1.4.4'
name = 'srp'
source_urls = ['ftp://ftp.zedz.net/pub/crypto/programs/srp/']
homepage = 'http://srp.stanford.edu/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "srp-1.4.4 description: Client_programs_using_Secure_Remote_Password_protocol"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.40 2012/10/23 18:16:59 asau Exp $
# 
# DISTNAME=		srp-1.4.4
# PKGNAME=		srp-client-1.4.4
# PKGREVISION=		2
# CATEGORIES=		security net
# MASTER_SITES=		ftp://ftp.zedz.net/pub/crypto/programs/srp/
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://srp.stanford.edu/
# COMMENT=		Client programs using Secure Remote Password protocol
# LICENSE=		srp_client-license
# 
# RESTRICTED=		Licensor makes vague patent claims.
# NO_SRC_ON_CDROM=	${RESTRICTED}
# NO_BIN_ON_CDROM=	${RESTRICTED}
# 
# CRYPTO=			yes
# GNU_CONFIGURE=		yes
# 
# CPPFLAGS+=		-Dunix=1
# #CPPFLAGS+=		-Dkrb_get_err_text=k_strerror
# 
# CONFIGURE_ARGS+=	--with-srp --with-cast --enable-loginf
# 
# .if exists(/usr/lib/libkrb.a)
# CONFIGURE_ARGS+=	--with-krb4
# 
# .include "../../mk/bsd.prefs.mk"
# 
# SED_PATTERN=	-e "s,include/kerberos,include/kerberosIV,"
# .if ${MACHINE_PLATFORM:MNetBSD-[01].[0-4]*-i386} == ""
# SED_PATTERN+=	-e "s,-ldes,-ldes -lroken -lcom_err -lcrypt,"
# .else
# SED_PATTERN+=	-e "s,-ldes,-ldes -lcom_err,"
# .endif
# 
# post-patch:
# 	for FILE in ftp/ftp/Makefile.in ftp/ftpd/Makefile.in		\
# 		telnet/configure.in telnet/configure;			\
# 	do								\
# 		cd ${WRKSRC} &&						\
# 		${SED}  ${SED_PATTERN} $$FILE > $$FILE.patched &&	\
# 		${MV} $$FILE.patched $$FILE;				\
# 	done
# .endif
# 
# INSTALLATION_DIRS=	bin ${PKGMANDIR}/man1
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/telnet/telnet/telnet \
# 	    ${DESTDIR}${PREFIX}/bin/srptelnet
# 	${INSTALL_DATA} ${WRKSRC}/telnet/telnet/telnet.1 \
# 	    ${DESTDIR}${PREFIX}/${PKGMANDIR}/man1/srptelnet.1
# 	${INSTALL_PROGRAM} ${WRKSRC}/ftp/ftp/ftp ${DESTDIR}${PREFIX}/bin/srpftp
# 	${INSTALL_DATA} ${WRKSRC}/ftp/ftp/ftp.M ${DESTDIR}${PREFIX}/${PKGMANDIR}/man1/srpftp.1
# 
# .include "../../devel/gmp/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
