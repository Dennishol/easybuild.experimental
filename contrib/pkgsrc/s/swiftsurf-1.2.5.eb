# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      swiftsurf-1.2.5.eb
# Date::      Fri Nov  9 14:38:05 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'swiftsurf'
version = '1.2.5'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['swiftsurf-1.2.5.tar.gz']
source_urls = ['http://sourceforge.net/projects/swiftsurf/files', 'download']
homepage = 'http://swiftsurf.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "swiftsurf-1.2.5 description: Web_proxy_that_can_handle_http_and_https"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.19 2012/10/28 06:31:06 asau Exp $
# 
# DISTNAME=		swiftsurf-1.2.5
# PKGREVISION=		5
# CATEGORIES=		www
# MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=swiftsurf/}
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://swiftsurf.sourceforge.net/
# COMMENT=		Web proxy that can handle http and https
# 
# USE_TOOLS+=		gmake
# 
# .if (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "sparc")
# BUILD_TARGET=	nat
# SWIFT=		swift.opt
# .else
# BUILD_TARGET=	byte
# SWIFT=		swift
# .endif
# 
# INSTALLATION_DIRS=	bin share/doc/swiftsurf share/examples/swiftsurf
# 
# do-configure:
# 	for f in ${WRKSRC}/src/conf.ml; do \
# 		${SED} -e 's:@PKG_SYSCONFDIR@:${PKG_SYSCONFDIR}:g' \
# 		$$f > $$f.tmp && ${MV} $$f.tmp $$f; \
# 	done
# 
# do-build:
# 	cd ${WRKSRC}/src && ${GMAKE} ${BUILD_TARGET}
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/src/${SWIFT} ${DESTDIR}${PREFIX}/bin/swiftsurf
# 	${INSTALL_DATA} ${WRKSRC}/swiftsurf.* ${DESTDIR}${PREFIX}/share/examples/swiftsurf
# 	${INSTALL_DATA} ${WRKSRC}/doc/* ${DESTDIR}${PREFIX}/share/doc/swiftsurf
# 
# .include "../../lang/ocaml/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
