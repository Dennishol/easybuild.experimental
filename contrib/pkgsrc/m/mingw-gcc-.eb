# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      mingw-gcc-.eb
# Date::      Fri Nov  9 14:36:56 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'mingw'
version = 'gcc-'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['mingw-gcc-${DIST_VERSION}.tar.gz']
source_urls = ['${MASTER_SITE_MINGW}']
homepage = 'http://mingw.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "mingw-gcc- description: GNU_C_Compiler_for_win32_cross-development"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.3 2012/10/03 00:10:30 asau Exp $
# #
# 
# DISTNAME=		mingw-gcc-${DIST_VERSION}
# PKGNAME=		${DISTNAME:S/-${DIST_VERSION}/-${GCC_VERSION}/}
# CATEGORIES=		cross
# MASTER_SITES=		${MASTER_SITE_MINGW}
# DISTFILES=		gcc-core-${DIST_VERSION}-src.tar.gz \
# 			gcc-g++-${DIST_VERSION}-src.tar.gz \
# 			gcc-objc-${DIST_VERSION}-src.tar.gz
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://mingw.sourceforge.net/
# COMMENT=		GNU C Compiler for win32 cross-development
# 
# USE_TOOLS+=		gmake
# USE_PKGLOCALEDIR=	yes
# GNU_CONFIGURE=		yes
# USE_CROSSBASE=		yes
# 
# WRKSRC=			${WRKDIR}/gcc-${DIST_VERSION}
# 
# GCC_VERSION=		3.4.5
# DIST_VERSION=		${GCC_VERSION}-20060117-2
# 
# do-build:
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${GMAKE} ${MAKE_FLAGS}
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${GMAKE} ${MAKE_FLAGS} \
# 		all-target-libobjc
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${GMAKE} ${MAKE_FLAGS} \
# 		all-target-libstdc++-v3
# 
# post-install:
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${INSTALL_ENV} ${GMAKE} \
# 		${MAKE_FLAGS} install-target-libobjc
# 	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${INSTALL_ENV} ${GMAKE} \
# 		${MAKE_FLAGS} install-target-libstdc++-v3
# 	${INSTALL_PROGRAM_DIR} ${DESTDIR}${CROSSBASE}/${MINGW_TARGET}/bin
# 	cd ${DESTDIR}${CROSSBASE}/bin && ${LN} -fs ${MINGW_TARGET}-gcc ${MINGW_TARGET}-cc
# 	cd ${DESTDIR}${CROSSBASE} && ${LN} -fs bin/${MINGW_TARGET}-cpp ${MINGW_TARGET}/bin/cpp
# 	cd ${DESTDIR}${CROSSBASE} && ${LN} -fs bin/${MINGW_TARGET}-cc  ${MINGW_TARGET}/bin/cc
# 	cd ${DESTDIR}${CROSSBASE} && ${LN} -fs bin/${MINGW_TARGET}-gcc ${MINGW_TARGET}/bin/gcc
# 	cd ${DESTDIR}${CROSSBASE} && ${LN} -fs bin/${MINGW_TARGET}-c++ ${MINGW_TARGET}/bin/c++
# 	cd ${DESTDIR}${CROSSBASE} && ${LN} -fs bin/${MINGW_TARGET}-g++ ${MINGW_TARGET}/bin/g++
# 
# .include "../../cross/mingw/Makefile.common"
# .include "../../cross/mingw-binutils/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
