# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
#
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v4.sh ;
# ie. there is no warranty, provided AS-IS, the known yada yada, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
#
# File::      glib-1.2.10.eb
# Date::      Wed Dec 26 17:08:20 CET 2012

# The following values are best-guess, which may have to be further overriden on
name = 'glib'
version = '1.2.10'
versionsuffix = '-20121226'

description = "glib-1.2.10: Some useful routines for C programming glib1 "

# The following are automatically calculated - cross fingers
sources = ['glib-1.2.10.tar.gz']
source_urls = ['ftp://ftp.gtk.org/pub/gtk/v1.2/']
homepage = 'http://developer.gnome.org/doc/API/glib/index.html'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}

sanity_check_paths = {
                      'files': [],
                      'dirs': ['.'] # fixme when the compilation is successful
                     }

parallel = 1 	# this is a conservative choice
maxparallel = 1 # this is a conservative choice

moduleclass = 'base'

###### The appended information is simply the pkgsrc sourcefile: /home/users/fgeorgatos/arena/pkg2eb/pkgsrc/devel/glib/Makefile ######
# # $NetBSD: Makefile,v 1.86 2008/05/25 14:45:17 tron Exp $
# 
# DISTNAME=		glib-1.2.10
# PKGREVISION=		10
# CATEGORIES=		devel
# MASTER_SITES=		ftp://ftp.gtk.org/pub/gtk/v1.2/ \
# 			${MASTER_SITE_GNOME:=sources/glib/1.2/}
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://developer.gnome.org/doc/API/glib/index.html
# COMMENT=		Some useful routines for C programming (glib1)
# 
# CONFLICTS=		gtk+-1.0.*
# 
# PKG_INSTALLATION_TYPES=	overwrite pkgviews
# PKG_DESTDIR_SUPPORT=	user-destdir
# 
# GNU_CONFIGURE=		yes
# USE_LIBTOOL=		yes
# PKGCONFIG_OVERRIDE=	glib.pc.in
# PKGCONFIG_OVERRIDE+=	gmodule.pc.in
# PKGCONFIG_OVERRIDE+=	gthread.pc.in
# CONFIGURE_ARGS+=	--includedir=${PREFIX}/include/glib
# INFO_FILES=		yes
# MAKE_JOBS_SAFE=		no
# 
# TEST_TARGET=		check
# 
# PTHREAD_OPTS+=		require
# 
# .include "../../mk/bsd.prefs.mk"
# 
# # Force the result of this configure test, because the testing technique
# # breaks with NetBSD's native libpthread.so.
# .if ${OPSYS} == "NetBSD"
# CONFIGURE_ENV+=		glib_cv_rtldglobal_broken=no
# .endif
# 
# .if ${MACHINE_ARCH} == "arm" || ${MACHINE_ARCH} == "arm32"
# GCC_REQD+=		3.0
# .endif
# 
# GLIB_VERSION=		${DISTNAME:S/glib-//}
# GLIB_MAJOR_VERSION=	${GLIB_VERSION:C/\..*//}
# GLIB_MINOR_VERSION=	${GLIB_VERSION:C/[^.]*\.//:C/\..*//}
# GLIB_MICRO_VERSION=	${GLIB_VERSION:C/.*\.//}
# 
# SUBST_CLASSES+=		shlib1
# SUBST_MESSAGE.shlib1=	Fixing shared library versions (part 1)
# SUBST_STAGE.shlib1=	pre-configure
# SUBST_FILES.shlib1=	glib-config.in docs/glib-config.1.in glib.pc.in \
# 			gmodule.pc.in gthread.pc.in
# SUBST_SED.shlib1=	-e "s|@GLIB_VERSION@|${GLIB_VERSION}|g"
# SUBST_SED.shlib1+=	-e "s|@VERSION@|${GLIB_VERSION}|g"
# 
# SUBST_CLASSES+=		shlib2
# SUBST_MESSAGE.shlib2=	Fixing shared library versions (part 2)
# SUBST_STAGE.shlib2=	post-configure
# SUBST_FILES.shlib2=	config.status config.h glibconfig.h
# SUBST_SED.shlib2=	-e "s|^\\(\#define.*GLIB_MAJOR_VERSION\\).*|\\1	${GLIB_MAJOR_VERSION}|"
# SUBST_SED.shlib2+=	-e "s|^\\(\#define.*GLIB_MINOR_VERSION\\).*|\\1	${GLIB_MINOR_VERSION}|"
# SUBST_SED.shlib2+=	-e "s|^\\(\#define.*GLIB_MICRO_VERSION\\).*|\\1	${GLIB_MICRO_VERSION}|"
# 
# #post-configure:
# #	${CHMOD} +x config.status
# 
# .if exists(/usr/include/sys/null.h)
# SUBST_CLASSES+=		null
# SUBST_MESSAGE.null=	Using "sys/null.h" to get definition of NULL.
# SUBST_STAGE.null=	post-configure
# SUBST_FILES.null=	glib.h
# SUBST_SED.null=		-e "s|^\#define.NULL.*|\#include <sys/null.h>|"
# .endif
# 
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
