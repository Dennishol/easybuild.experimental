# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
#
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v4.sh ;
# ie. there is no warranty, provided AS-IS, the known yada yada, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
#
# File::      libvpx-v1.1.0.eb
# Date::      Wed Dec 26 17:08:47 CET 2012

# The following values are best-guess, which may have to be further overriden on
name = 'libvpx'
version = 'v1.1.0'
versionsuffix = '-20121226'

description = "libvpx-v1.1.0: On2 VP8 library from Google"

# The following are automatically calculated - cross fingers
sources = ['libvpx-v1.1.0.tar.bz2']
source_urls = ['http://webm.googlecode.com/files/']
homepage = 'http://code.google.com/p/webm/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}

sanity_check_paths = {
                      'files': [],
                      'dirs': ['.'] # fixme when the compilation is successful
                     }

parallel = 1 	# this is a conservative choice
maxparallel = 1 # this is a conservative choice

moduleclass = 'base'

###### The appended information is simply the pkgsrc sourcefile: /home/users/fgeorgatos/arena/pkg2eb/pkgsrc/multimedia/libvpx/Makefile ######
# # $NetBSD: Makefile,v 1.15 2012/07/20 14:26:50 fhajny Exp $
# 
# DISTNAME=	libvpx-v1.1.0
# PKGNAME=	${DISTNAME:S/-v/-/}
# CATEGORIES=	multimedia
# MASTER_SITES=	http://webm.googlecode.com/files/
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	ryoon@NetBSD.org
# HOMEPAGE=	http://code.google.com/p/webm/
# COMMENT=	On2 VP8 library from Google
# LICENSE=	modified-bsd
# 
# PKG_DESTDIR_SUPPORT=	user-destdir
# 
# USE_LANGUAGES=		c c++
# USE_LIBTOOL=		yes
# USE_TOOLS+=		gmake bash:build perl:build
# HAS_CONFIGURE=		yes
# CONFIG_SHELL=		${BASH}
# CONFIGURE_ARGS+=	--disable-postproc
# CONFIGURE_ARGS+=	--enable-pic
# CONFIGURE_ARGS+=	--enable-runtime-cpu-detect
# CONFIGURE_ARGS+=	--prefix=${PREFIX}
# 
# .include "../../mk/bsd.prefs.mk"
# 
# .if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "x86_64"
# BUILD_DEPENDS+=		yasm-[0-9]*:../../devel/yasm
# .endif
# 
# REPLACE_BASH=		configure \
# 			build/make/configure.sh \
# 			build/make/version.sh \
# 			build/make/gen_asm_deps.sh \
# 			build/make/rtcd.sh \
# 			examples/gen_example_text.sh \
# 			examples/gen_example_code.sh
# 
# .if ${OPSYS} == "Darwin"
# BUILDLINK_TRANSFORM+=	rm:-Wl,-Bsymbolic
# .  if ${MACHINE_ARCH} == "i386"
# .    if !empty(OS_VERSION:M11.*)
# CONFIGURE_ARGS+=	--target=x86-darwin10-gcc
# .    elif !empty(OS_VERSION:M10.*)
# CONFIGURE_ARGS+=	--target=x86-darwin10-gcc
# .    elif !empty(OS_VERSION:M9.*)
# CONFIGURE_ARGS+=	--target=x86-darwin10-gcc
# .    else
# CONFIGURE_ARGS+=	--target=x86-darwin8-gcc
# .    endif
# .  elif ${MACHINE_ARCH} == "x86_64"
# .    if !empty(OS_VERSION:M11.*)
# CONFIGURE_ARGS+=	--target=x86_64-darwin10-gcc
# .    elif !empty(OS_VERSION:M10.*)
# CONFIGURE_ARGS+=	--target=x86_64-darwin10-gcc
# .    elif !empty(OS_VERSION:M9.*)
# CONFIGURE_ARGS+=	--target=x86_64-darwin10-gcc
# .    else
# CONFIGURE_ARGS+=	--target=x86_64-darwin8-gcc
# .    endif
# .  endif
# .endif
# 
# BUILD_TARGET=	# none
# 
# post-extract:
# 	${CP} ${FILESDIR}/strip_fPIC.sh ${WRKSRC}
# 
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
