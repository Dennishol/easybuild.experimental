# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      nginx-1.2.3.eb
# Date::      Fri Nov  9 14:38:03 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'nginx'
version = '1.2.3'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['nginx-1.2.3.tar.gz']
source_urls = ['http://nginx.org/download/']
homepage = 'http://nginx.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "nginx-1.2.3 description: Lightweight_HTTP_server_and_mail_proxy_server"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.27 2012/10/28 06:30:23 asau Exp $
# 
# DISTNAME=		nginx-1.2.3
# CATEGORIES=		www
# MASTER_SITES=		http://nginx.org/download/
# DISTFILES=		${DEFAULT_DISTFILES}
# 
# MAINTAINER=		joerg@NetBSD.org
# HOMEPAGE=		http://nginx.org/
# COMMENT=		Lightweight HTTP server and mail proxy server
# LICENSE=		2-clause-bsd
# 
# .include "../../mk/bsd.prefs.mk"
# 
# NGINX_USER?=		nginx
# NGINX_GROUP?=		nginx
# NGINX_DATADIR?=		${VARBASE}/db/nginx
# NGINX_LOGDIR?=		${VARBASE}/log/nginx
# NGINX_PIDDIR?=		${VARBASE}/run
# 
# BUILD_DEFS+=		NGINX_DATADIR NGINX_LOGDIR NGINX_PIDDIR VARBASE
# 
# PKG_USERS_VARS+=	NGINX_USER
# PKG_GROUPS_VARS+=	NGINX_GROUP
# PKG_GROUPS=		${NGINX_GROUP}
# PKG_USERS=		${NGINX_USER}:${NGINX_GROUP}
# 
# PKG_GECOS.${NGINX_USER}=NGINX server user
# PKG_HOME.${NGINX_USER}=	${NGINX_DATADIR}
# PKG_SHELL.${NGINX_USER}=${NOLOGIN}
# 
# USE_PKGLOCALEDIR=	yes
# HAS_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--user=${NGINX_USER}
# CONFIGURE_ARGS+=	--group=${NGINX_GROUP}
# CONFIGURE_ARGS+=	--with-ld-opt=-L${PREFIX}/lib\ -Wl,-R${PREFIX}/lib
# CONFIGURE_ARGS+=	--prefix=${PREFIX}
# CONFIGURE_ARGS+=	--sbin-path=${PREFIX}/sbin
# CONFIGURE_ARGS+=	--conf-path=${PKG_SYSCONFDIR}/nginx.conf
# CONFIGURE_ARGS+=	--pid-path=${NGINX_PIDDIR}/nginx.pid
# CONFIGURE_ARGS+=	--lock-path=${NGINX_DATADIR}/nginx.lock
# CONFIGURE_ARGS+=	--error-log-path=${NGINX_LOGDIR}/error.log
# CONFIGURE_ARGS+=	--http-log-path=${NGINX_LOGDIR}/access.log
# CONFIGURE_ARGS+=	--http-client-body-temp-path=${NGINX_DATADIR}/client_body_temp
# CONFIGURE_ARGS+=	--http-proxy-temp-path=${NGINX_DATADIR}/proxy_temp
# CONFIGURE_ARGS+=	--http-fastcgi-temp-path=${NGINX_DATADIR}/fstcgi_temp
# 
# .include "../../mk/bsd.prefs.mk"
# 
# PKG_SYSCONFSUBDIR=	nginx
# 
# .include "options.mk"
# 
# EGDIR=			${PREFIX}/share/examples/nginx
# EGFILES+=		fastcgi.conf fastcgi_params koi-utf koi-win \
# 			mime.types nginx.conf win-utf
# 
# .for file in ${EGFILES}
# CONF_FILES+=	${EGDIR}/conf/${file} ${PKG_SYSCONFDIR}/${file}
# .	if !empty(PKG_OPTIONS:Mnaxsi)
# CONF_FILES+=	${EGDIR}/conf/naxsi_core.rules
# CONF_FILES+=	${PKG_SYSCONFDIR}/naxsi_core.rules
# .	endif
# .endfor
# 
# RCD_SCRIPTS=		nginx
# 
# INSTALLATION_DIRS=	${PKGMANDIR}/man8 sbin share/examples/nginx/conf \
# 			share/examples/nginx/html
# MAKE_DIRS+=		${NGINX_PIDDIR}
# OWN_DIRS=		${NGINX_LOGDIR}
# OWN_DIRS_PERMS+=	${NGINX_DATADIR} ${NGINX_USER} ${NGINX_GROUP} 0700
# 
# BUILD_TARGET=		build
# 
# SUBST_CLASSES+=		paths
# SUBST_STAGE.paths=	pre-configure
# SUBST_FILES.paths=	conf/nginx.conf
# SUBST_SED.paths=	-e 's,%%PKG_SYSCONFDIR%%,${PKG_SYSCONFDIR},g'
# SUBST_SED.paths+=	-e 's,%%NGINX_LOGDIR%%,${NGINX_LOGDIR},g'
# SUBST_SED.paths+=	-e 's,%%NGINX_PIDDIR%%,${NGINX_PIDDIR},g'
# SUBST_SED.paths+=	-e 's,%%NGINX_USER%%,${NGINX_USER},g'
# SUBST_SED.paths+=	-e 's,%%NGINX_GROUP%%,${NGINX_GROUP},g'
# 
# MESSAGE_SUBST+=		NGINX_LOGDIR=${NGINX_LOGDIR}
# MESSAGE_SUBST+=		NGINX_PIDDIR=${NGINX_PIDDIR}
# 
# do-install:
# 	${INSTALL_PROGRAM} ${WRKSRC}/objs/nginx ${DESTDIR}${PREFIX}/sbin/nginx
# .for file in ${EGFILES}
# 	${INSTALL_DATA} ${WRKSRC}/conf/${file} ${DESTDIR}${EGDIR}/conf/${file}
# .endfor
# 	${INSTALL_DATA} ${WRKSRC}/html/50x.html ${DESTDIR}${EGDIR}/html/50x.html
# 	${INSTALL_DATA} ${WRKSRC}/html/index.html ${DESTDIR}${EGDIR}/html/index.html
# 	${INSTALL_MAN} ${WRKSRC}/man/nginx.8 ${DESTDIR}${PREFIX}/${PKGMANDIR}/man8
# .if !empty(PKG_OPTIONS:Mnaxsi)
# 	${INSTALL_DATA} ${WRKDIR}/${NAXSI}/naxsi_config/naxsi_core.rules ${DESTDIR}${EGDIR}/conf
# .endif
# 
# 
# .include "../../devel/zlib/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
# .include "Makefile.cflags"
