# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      cairo-1.12.6.eb
# Date::      Fri Nov  9 14:37:23 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'cairo'
version = '1.12.6'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['cairo-1.12.6.tar.xz']
source_urls = ['http://cairographics.org/releases/']
homepage = 'http://cairographics.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "cairo-1.12.6 description: Vector_graphics_library_with_cross-device_output_support"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.16 2012/10/22 15:16:19 wiz Exp $
# 
# DISTNAME=	cairo-1.12.6
# PKGNAME=	${DISTNAME:S/-/-gobject-/}
# CATEGORIES=	graphics
# MASTER_SITES=	http://cairographics.org/releases/
# EXTRACT_SUFX=	.tar.xz
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# HOMEPAGE=	http://cairographics.org/
# COMMENT=	Vector graphics library with cross-device output support
# LICENSE=	gnu-lgpl-v2.1 AND mpl-1.1
# 
# PATCHDIR=	${.CURDIR}/../../graphics/cairo/patches
# DISTINFO_FILE=	${.CURDIR}/../../graphics/cairo/distinfo
# BUILD_DIRS=	util/cairo-gobject
# INSTALL_DIRS=	util/cairo-gobject
# 
# USE_LANGUAGES+=		c99
# USE_LIBTOOL=		yes
# USE_PKGLOCALEDIR=	yes
# USE_TOOLS+=		pkg-config
# PKGCONFIG_OVERRIDE+=	src/cairo.pc.in src/cairo-features.pc.in
# GNU_CONFIGURE=		yes
# CONFIGURE_ARGS+=	--enable-pdf
# CONFIGURE_ARGS+=	--enable-ps
# 
# .if exists(/System/Library/Frameworks/Carbon.framework)
# CONFIGURE_ARGS+=        --enable-quartz
# CONFIGURE_ARGS+=        --enable-quartz-font
# CONFIGURE_ARGS+=        --enable-quartz-image
# CONFIGURE_ARGS+=	--disable-gl
# CONFIGURE_ARGS+=	--disable-xlib
# CONFIGURE_ARGS+=	--disable-xlib-xrender
# .else
# CONFIGURE_ARGS+=	--enable-gl
# .endif
# 
# # For snprintf() and ctime_r()
# CPPFLAGS.SunOS+=		-D__EXTENSIONS__ -D_POSIX_PTHREAD_SEMANTICS
# 
# # PR#43928
# .include "../../mk/compiler.mk"
# .if ${MACHINE_PLATFORM:MDragonFly-*-x86_64} && ${CC_VERSION:Mgcc-4.1.*}
# CONFIGURE_ENV+=		ac_cv_type___uint128_t=no
# .endif
# 
# post-install:
# 	${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/lib/pkgconfig
# 	${INSTALL_DATA} ${WRKSRC}/src/cairo-gobject.pc \
# 		${DESTDIR}${PREFIX}/lib/pkgconfig
# 
# .include "../../graphics/cairo/buildlink3.mk"
# .include "../../devel/glib2/buildlink3.mk"
# .include "../../devel/zlib/buildlink3.mk"
# .include "../../fonts/fontconfig/buildlink3.mk"
# BUILDLINK_API_DEPENDS.freetype2+=	freetype2>=2.1.9
# .include "../../graphics/freetype2/buildlink3.mk"
# .include "../../graphics/png/buildlink3.mk"
# # include?
# #.include "../../print/libspectre/buildlink3.mk"
# .include "../../x11/pixman/buildlink3.mk"
# 
# .include "../../mk/pthread.buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
