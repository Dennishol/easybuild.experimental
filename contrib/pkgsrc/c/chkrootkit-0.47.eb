# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      chkrootkit-0.47.eb
# Date::      Fri Nov  9 14:37:48 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'chkrootkit'
version = '0.47'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['chkrootkit-0.47.tar.gz']
source_urls = ['ftp://ftp.pangeia.com.br/pub/seg/pac/']
homepage = 'http://www.chkrootkit.org/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "chkrootkit-0.47 description: Locally_checks_for_signs_of_a_rootkit"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.18 2012/10/23 18:16:22 asau Exp $
# #
# 
# DISTNAME=		chkrootkit-0.47
# PKGREVISION=		1
# CATEGORIES=		security
# MASTER_SITES=		ftp://ftp.pangeia.com.br/pub/seg/pac/
# 
# MAINTAINER=		pkgsrc-users@NetBSD.org
# HOMEPAGE=		http://www.chkrootkit.org/
# COMMENT=		Locally checks for signs of a rootkit
# LICENSE=		modified-bsd
# 
# PKG_INSTALLATION_TYPES=	overwrite pkgviews
# 
# USE_TOOLS+=		gmake
# NO_CONFIGURE=		yes
# 
# PROGRAMS=	chkdirs chklastlog chkproc chkwtmp ifpromisc strings-static \
# 		chkutmp
# DOCDIR=		${PREFIX}/share/doc/chkrootkit
# 
# SUBST_CLASSES+=		helper
# SUBST_STAGE.helper=	post-patch
# SUBST_FILES.helper=	chkrootkit
# SUBST_SED.helper=	-e "s|./chklastlog|${PREFIX}/bin/chklastlog|g"	\
# 			-e "s|./chkproc|${PREFIX}/bin/chkproc|g" 	\
# 			-e "s|./chkwtmp|${PREFIX}/bin/chkwtmp|g"	\
# 			-e "s|./chkutmp|${PREFIX}/bin/chkutmp|g"	\
# 			-e "s|./ifpromisc|${PREFIX}/bin/ifpromisc|g"	\
# 			-e "s|./strings-static|${PREFIX}/bin/strings-static|g" \
# 			-e "s|./chkdirs|${PREFIX}/bin/chkdirs|g" 	\
# 			-e "s|/bin/sh|${SH}|g"
# 
# .include "../../mk/compiler.mk"
# 
# PLIST_VARS+=	wtmpx
# .if ${OPSYS} == "SunOS"
# PROGRAMS+=	check_wtmpx
# PLIST.wtmpx=	yes
# CFLAGS+=	-DSOLARIS2
# LDFLAGS+=	-lsocket
# .  if empty(CC_VERSION:Mgcc-*)
# MAKE_ENV+=	STATIC="-B static"
# .  else
# MAKE_ENV+=	STATIC="-static"
# .  endif
# .else
# MAKE_ENV+=	STATIC="-static"
# .endif
# 
# INSTALLATION_DIRS+=	bin ${DOCDIR}
# 
# do-install:
# 	cd ${WRKSRC} && ${INSTALL_PROGRAM} ${PROGRAMS} ${DESTDIR}${PREFIX}/bin
# 	${INSTALL_SCRIPT} ${WRKSRC}/chkrootkit ${DESTDIR}${PREFIX}/bin
# 	${INSTALL_DATA} ${WRKSRC}/README ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/README.chklastlog ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/README.chkwtmp ${DESTDIR}${DOCDIR}
# 
# .include "../../mk/bsd.pkg.mk"
