# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      courier-authlib-0.64.0.eb
# Date::      Fri Nov  9 14:37:48 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'courier'
version = 'authlib-0.64.0'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['courier-authlib-0.64.0.tar.bz2']
source_urls = ['http://sourceforge.net/projects/courier/files', 'download']
homepage = 'http://www.courier-mta.org/authlib/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "courier-authlib-0.64.0 description: Courier_Authentication_Library"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.40 2012/10/23 18:16:22 asau Exp $
# 
# .include "Makefile.common"
# 
# DISTNAME=	courier-authlib-0.64.0
# PKGREVISION=	1
# CATEGORIES=	security
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=courier/}
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	pkgsrc-users@NetBSD.org
# COMMENT=	Courier Authentication Library
# HOMEPAGE=	http://www.courier-mta.org/authlib/
# LICENSE=	gnu-gpl-v3
# 
# CONFLICTS+=	courier-auth-[0-9]*
# CONFLICTS+=	courier-authldap-[0-9]*
# CONFLICTS+=	courier-authmysql-[0-9]*
# CONFLICTS+=	courier-authpgsql-[0-9]*
# 
# USE_LIBTOOL=		yes
# LIBTOOLIZE_PLIST=	yes
# PKG_SYSCONFSUBDIR=	authlib
# 
# REPLACE_PERL=		samplepipe.pl sysconftool
# 
# USE_LANGUAGES=		c c++
# USE_TOOLS+=		cat:run gmake perl:run
# CONFIGURE_ENV+=		CAT=${TOOLS_CAT}		# makedat
# 
# BUILD_DEFS+=		VARBASE
# CONFIGURE_ARGS+=	--localstatedir=${VARBASE}
# CONFIGURE_ARGS+=	--with-pkgconfdir=${PKG_SYSCONFDIR}
# CONFIGURE_ARGS+=	--without-stdheaderdir
# 
# .include "../../mk/bsd.prefs.mk"
# 
# AUTHDAEMONVAR?=		${VARBASE}/authdaemon
# CONFIGURE_ARGS+=	--with-authdaemonvar=${AUTHDAEMONVAR:Q}
# OWN_DIRS_PERMS=		${AUTHDAEMONVAR} ${COURIER_USER} ${COURIER_GROUP} 0750
# FILES_SUBST+=		AUTHDAEMONVAR=${AUTHDAEMONVAR:Q}
# 
# # Expect is used to change the password from within the courier webmail
# # application (sqwebmail).  Assume that it's installed in the same prefix
# # as courier-authlib.
# #
# CONFIGURE_ENV+=		EXPECT=${PREFIX}/bin/expect
# CHECK_INTERPRETER_SKIP=	libexec/courier-authlib/authsystem.passwd
# 
# AUTHLIBDIR=		lib/courier-authlib
# AUTHLIBEXECDIR=		libexec/courier-authlib
# AUTHEXAMPLEDIR=		share/examples/courier-authlib
# AUTHDOCDIR=		share/doc/courier-authlib
# FILES_SUBST+=		AUTHLIBEXECDIR=${AUTHLIBEXECDIR}
# FILES_SUBST+=		AUTHEXAMPLEDIR=${AUTHEXAMPLEDIR}
# 
# PKG_SYSCONFSUBDIR?=	courier
# 
# EGDIR=			${PREFIX}/${AUTHEXAMPLEDIR}
# DOCDIR=			${PREFIX}/${AUTHDOCDIR}
# RCD_SCRIPTS=		authdaemond
# GEN_FILES=		authdaemonrc
# FILES_SUBST+=		GEN_FILES=${GEN_FILES:Q}
# AUTHLIB_PLIST=		${AUTHEXAMPLEDIR}/authdaemonrc.dist
# 
# # Install the example config files into ${EGDIR}.
# INSTALL_AM_MAKEFLAGS=	authdaemonrc=${EGDIR}/authdaemonrc		\
# 			authldaprc=${EGDIR}/authldaprc			\
# 			authmysqlrc=${EGDIR}/authmysqlrc		\
# 			authpgsqlrc=${EGDIR}/authpgsqlrc
# INSTALL_MAKE_FLAGS=	${MAKE_FLAGS}					\
# 			AM_MAKEFLAGS=${INSTALL_AM_MAKEFLAGS:Q}
# 
# POST_INSTALL_TARGETS=	post-install-common post-install-authdaemon
# 
# .include "options.mk"
# .include "../../devel/libltdl/buildlink3.mk"
# 
# .for file in ${GEN_FILES}
# CONF_FILES_PERMS+=	${EGDIR}/${file}.dist ${PKG_SYSCONFDIR}/${file} \
# 			${COURIER_USER} ${COURIER_GROUP} 0660
# .endfor
# 
# .for file in ${AUTHLIB_PLIST}
# GENERATE_PLIST+=	${TEST} -f ${DESTDIR}${PREFIX}/${file} &&	\
# 			${ECHO} "${file}";
# .endfor
# GENERATE_PLIST+=	${TRUE};
# 
# INSTALLATION_DIRS=	bin sbin
# 
# post-install: ${POST_INSTALL_TARGETS}
# 
# post-install-common:
# 	${INSTALL_DATA_DIR} ${DESTDIR}${EGDIR}
# 	${INSTALL_SCRIPT} ${WRKSRC}/sysconftool ${DESTDIR}${PREFIX}/sbin
# 	${INSTALL_DATA_DIR} ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/INSTALL.html ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/README.authdebug.html ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/README.html ${DESTDIR}${DOCDIR}
# 	${INSTALL_DATA} ${WRKSRC}/README_authlib.html ${DESTDIR}${DOCDIR}
# 
# post-install-authdaemon:
# 	${CHOWN} ${SHAREOWN}:${SHAREGRP} ${DESTDIR}${EGDIR}/authdaemonrc.dist
# 	${CHMOD} ${SHAREMODE} ${DESTDIR}${EGDIR}/authdaemonrc.dist
# 
# .include "../../mk/bsd.pkg.mk"
