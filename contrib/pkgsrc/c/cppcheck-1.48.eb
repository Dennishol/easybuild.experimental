# This file is an EasyBuild recipy as per https://github.com/hpcugent/easybuild
# It has been automatically produced by /home/users/fgeorgatos/arena/pkg2eb/pkg2eb_v2.sh ; ie. there is no warranty, given AS-IS, etc
#  
#  #######                     ######                                    ### 
#  #         ##    ####  #   # #     # #    # # #      #####     # ##### ### 
#  #        #  #  #       # #  #     # #    # # #      #    #    #   #   ### 
#  #####   #    #  ####    #   ######  #    # # #      #    #    #   #    #  
#  #       ######      #   #   #     # #    # # #      #    #    #   #       
#  #       #    # #    #   #   #     # #    # # #      #    #    #   #   ### 
#  ####### #    #  ####    #   ######   ####  # ###### #####     #   #   ###
#  
# Copyright:: Copyright (c) 2012 University of Luxembourg / LCSB
# Author::    Fotis Georgatos <fotis.georgatos@uni.lu>
# License::   MIT/GPL
# File::      cppcheck-1.48.eb
# Date::      Fri Nov  9 14:37:08 CET 2012

# The following values are best-guess, which may be further overriden on
name = 'cppcheck'
version = '1.48'
versionsuffix = '-2012-11-09'

# The following are automatically calculated - cross fingers
sources = ['cppcheck-1.48.tar.bz2']
source_urls = ['http://sourceforge.net/projects/cppcheck/files', 'download']
homepage = 'http://cppcheck.wiki.sourceforge.net/'

toolchain = {'name': 'goalf', 'version': '1.1.0-no-OFED'}
toolchainopts = {'optarch': True, 'pic': True}

# This has eventually to be amended with the real values of files/directories, as needed on a per package basis
# Such incomplete easyconfigs are OK for repo https://github.com/fgeorgatos/easybuild.experimental but not for production EasyBuild
# In case you decide to commit/push your experimental easyconfigs, remember to place them under users/

sanity_check_paths = {
                  'files': [],
                  'dirs': ['.']
                 }

description = "cppcheck-1.48 description: Tool_for_static_C/C++_code_analysis"

# we play conservative in compilation parallelism, to maximize chances of success on the compilation step

parallel = 1 
maxparallel = 1 

moduleclass = 'base'


# # $NetBSD: Makefile,v 1.19 2012/10/31 11:16:48 asau Exp $
# #
# 
# DISTNAME=	cppcheck-1.48
# PKGREVISION=	8
# CATEGORIES=	devel
# MASTER_SITES=	${MASTER_SITE_SOURCEFORGE:=cppcheck/}
# EXTRACT_SUFX=	.tar.bz2
# 
# MAINTAINER=	reed@reedmedia.net
# HOMEPAGE=	http://cppcheck.wiki.sourceforge.net/
# COMMENT=	Tool for static C/C++ code analysis
# LICENSE=	gnu-gpl-v3
# 
# BUILD_DEPENDS+=	libxslt-[0-9]*:../../textproc/libxslt
# BUILD_DEPENDS+=	docbook-xsl-[0-9]*:../../textproc/docbook-xsl
# 
# INSTALLATION_DIRS+=	bin ${PKGMANDIR}/man1
# USE_LANGUAGES=		c c++
# USE_CMAKE=		yes
# USE_TOOLS+=		gmake
# 
# BUILDLINK_TRANSFORM+=	rm:-Wlogical-op
# 
# .include "options.mk"
# 
# .PHONY: man-build
# post-build: man-build
# man-build:
# 	cd ${WRKSRC}/man && xsltproc --nonet \
# 		--param man.charmap.use.subset "0" \
# 		--param make.year.ranges "1" \
# 		--param make.single.year.ranges "1" \
# 		${PREFIX}/share/xsl/docbook/manpages/docbook.xsl \
# 		cppcheck.1.xml
# 
# .include "../../devel/pcre/buildlink3.mk"
# .include "../../mk/bsd.pkg.mk"
